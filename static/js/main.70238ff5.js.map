{"version":3,"file":"static/js/main.70238ff5.js","mappings":"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","sources":["../node_modules/@yomguithereal/helpers/extend.js","../node_modules/events/events.js","../node_modules/graphology-gexf/browser/index.js","../node_modules/graphology-gexf/browser/parser.js","../node_modules/graphology-gexf/common/helpers.js","../node_modules/graphology-gexf/common/parser.js","../node_modules/graphology-gexf/common/writer.js","../node_modules/graphology-operators/to-mixed.js","../node_modules/graphology-operators/to-multi.js","../node_modules/graphology-utils/add-edge.js","../node_modules/graphology-utils/infer-type.js","../node_modules/graphology-utils/is-graph-constructor.js","../node_modules/graphology-utils/is-graph.js","../node_modules/graphology/src/utils.js","../node_modules/obliterator/iterator.js","../node_modules/obliterator/support.js","../node_modules/obliterator/iter.js","../node_modules/obliterator/take.js","../node_modules/graphology/src/errors.js","../node_modules/graphology/src/data.js","../node_modules/graphology/src/attributes/nodes.js","../node_modules/graphology/src/attributes/edges.js","../node_modules/obliterator/chain.js","../node_modules/graphology/src/iteration/edges.js","../node_modules/graphology/src/iteration/neighbors.js","../node_modules/graphology/src/iteration/adjacency.js","../node_modules/graphology/src/serialization.js","../node_modules/graphology/src/graph.js","../node_modules/graphology/src/classes.js","../node_modules/sigma/core/camera.js","../node_modules/sigma/core/captors/captor.js","../node_modules/sigma/core/captors/mouse.js","../node_modules/sigma/core/captors/touch.js","../node_modules/sigma/core/labels.js","../node_modules/sigma/core/quadtree.js","../node_modules/sigma/index.js","../node_modules/sigma/rendering/canvas/edge-label.js","../node_modules/sigma/rendering/canvas/hover.js","../node_modules/sigma/rendering/canvas/label.js","../node_modules/sigma/rendering/webgl/programs/common/edge.js","../node_modules/sigma/rendering/webgl/programs/common/node.js","../node_modules/sigma/rendering/webgl/programs/common/program.js","../node_modules/sigma/rendering/webgl/programs/edge.arrow.js","../node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js","../node_modules/sigma/rendering/webgl/programs/edge.clamped.js","../node_modules/sigma/rendering/webgl/programs/edge.js","../node_modules/sigma/rendering/webgl/programs/node.fast.js","../node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js","../node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js","../node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js","../node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js","../node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js","../node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js","../node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js","../node_modules/sigma/rendering/webgl/shaders/utils.js","../node_modules/sigma/settings.js","../node_modules/sigma/sigma.js","../node_modules/sigma/types.js","../node_modules/sigma/utils/animate.js","../node_modules/sigma/utils/data.js","../node_modules/sigma/utils/easings.js","../node_modules/sigma/utils/edge-collisions.js","../node_modules/sigma/utils/index.js","../node_modules/sigma/utils/matrices.js","../node_modules/xml-writer/index.js","../node_modules/xml-writer/lib/xml-writer.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","index.ts"],"sourcesContent":["/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n\n  if (l2 === 0)\n    return;\n\n  var l1 = array.length;\n\n  array.length += l2;\n\n  for (var i = 0; i < l2; i++)\n    array[l1 + i] = values[i];\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Graphology Browser GEXF Endpoint\n * =================================\n *\n * Endpoint gathering both parser & writer for the browser.\n */\nexports.parse = require('./parser.js');\nexports.write = require('../common/writer.js');\n","/**\n * Graphology Browser GEXF Parser\n * ===============================\n *\n * Browser version of the graphology GEXF parser.\n */\nvar createParserFunction = require('../common/parser.js');\n\nmodule.exports = createParserFunction(DOMParser, Document);\n","/**\n * Graphology Common GEXF Helpers\n * ===============================\n *\n * Miscellaneous helpers used by both instance of the code.\n */\n\n/**\n * Function used to cast a string value to the desired type.\n *\n * @param  {string} type - Value type.\n * @param  {string} type - String value.\n * @return {any}         - Parsed type.\n */\nexports.cast = function (type, value) {\n  switch (type) {\n    case 'boolean':\n      value = value === 'true';\n      break;\n\n    case 'integer':\n    case 'long':\n    case 'float':\n    case 'double':\n      value = +value;\n      break;\n\n    case 'liststring':\n      value = value ? value.split('|') : [];\n      break;\n\n    default:\n  }\n\n  return value;\n};\n\n/**\n * Function deleting illegal characters from a potential tag name to avoid\n * generating invalid XML.\n *\n * @param  {string} type - Tag name.\n * @return {string}\n */\nvar SANITIZE_PATTERN = /[\"'<>&\\s]/g;\n\nexports.sanitizeTagName = function sanitizeTagName(tagName) {\n  return tagName.replace(SANITIZE_PATTERN, '').trim();\n};\n","/* eslint no-self-compare: 0 */\n/**\n * Graphology Browser GEXF Parser\n * ===============================\n *\n * Browser version of the graphology GEXF parser using DOMParser to function.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\nvar mergeEdge = require('graphology-utils/add-edge').mergeEdge;\nvar toMixed = require('graphology-operators/to-mixed');\nvar toMulti = require('graphology-operators/to-multi');\nvar helpers = require('../common/helpers.js');\n\nvar cast = helpers.cast;\n\n/**\n * Function checking whether the given value is a NaN.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nfunction isReallyNaN(value) {\n  return value !== value;\n}\n\n/**\n * Function used to convert a viz:color attribute into a CSS rgba? string.\n *\n * @param  {Node}   element - DOM element.\n * @return {string}\n */\nfunction toRGBString(element) {\n  var a = element.getAttribute('a'),\n    r = element.getAttribute('r'),\n    g = element.getAttribute('g'),\n    b = element.getAttribute('b');\n\n  return a\n    ? 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n    : 'rgb(' + r + ',' + g + ',' + b + ')';\n}\n\n/**\n * Function returning the first matching tag of the `viz` namespace matching\n * the desired tag name.\n *\n * @param  {Node}   element - Target DOM element.\n * @param  {string} name    - Tag name.\n * @return {Node}\n */\nfunction getFirstMatchingVizTag(element, name) {\n  var vizElement = element.getElementsByTagName('viz:' + name)[0];\n\n  if (!vizElement) vizElement = element.getElementsByTagNameNS('viz', name)[0];\n\n  if (!vizElement) vizElement = element.getElementsByTagName(name)[0];\n\n  return vizElement;\n}\n\n/**\n * Function used to collect meta information.\n *\n * @param  {Array<Node>} elements - Target DOM element.\n * @return {object}\n */\nfunction collectMeta(elements) {\n  var meta = {},\n    element,\n    value;\n\n  for (var i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n\n    if (element.nodeName === '#text') continue;\n\n    value = element.textContent.trim();\n\n    if (value) meta[element.tagName.toLowerCase()] = element.textContent;\n  }\n\n  return meta;\n}\n\n/**\n * Function used to extract the model from the right elements.\n *\n * @param  {Array<Node>} elements - Target DOM elements.\n * @return {array}                - The model & default attributes.\n */\nfunction extractModel(elements) {\n  var model = {},\n    defaults = {},\n    element,\n    defaultElement,\n    id;\n\n  for (var i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n    id = element.getAttribute('id') || element.getAttribute('for');\n\n    model[id] = {\n      id: id,\n      type: element.getAttribute('type') || 'string',\n      title: !isReallyNaN(+id) ? element.getAttribute('title') || id : id\n    };\n\n    // Default?\n    defaultElement = element.getElementsByTagName('default')[0];\n\n    if (defaultElement)\n      defaults[model[id].title] = cast(\n        model[id].type,\n        defaultElement.textContent\n      );\n  }\n\n  return [model, defaults];\n}\n\n/**\n * Function used to collect an element's attributes.\n *\n * @param  {object} model    - Data model to use.\n * @param  {object} defaults - Default values.\n * @param  {Node}   element  - Target DOM element.\n * @return {object}          - The collected attributes.\n */\nfunction collectAttributes(model, defaults, element) {\n  var data = {},\n    label = element.getAttribute('label'),\n    weight = element.getAttribute('weight');\n\n  if (label) data.label = label;\n\n  if (weight) data.weight = +weight;\n\n  var valueElements = element.getElementsByTagName('attvalue'),\n    valueElement,\n    id;\n\n  for (var i = 0, l = valueElements.length; i < l; i++) {\n    valueElement = valueElements[i];\n    id = valueElement.getAttribute('id') || valueElement.getAttribute('for');\n\n    data[model[id].title] = cast(\n      model[id].type,\n      valueElement.getAttribute('value')\n    );\n  }\n\n  // Applying default values\n  var k;\n\n  for (k in defaults) {\n    if (!(k in data)) data[k] = defaults[k];\n  }\n\n  // TODO: shortcut here to avoid viz when namespace is not set\n\n  // Attempting to find viz namespace tags\n\n  //-- 1) Color\n  var vizElement = getFirstMatchingVizTag(element, 'color');\n\n  if (vizElement) data.color = toRGBString(vizElement);\n\n  //-- 2) Size\n  vizElement = getFirstMatchingVizTag(element, 'size');\n\n  if (vizElement) data.size = +vizElement.getAttribute('value');\n\n  //-- 3) Position\n  var x, y, z;\n\n  vizElement = getFirstMatchingVizTag(element, 'position');\n\n  if (vizElement) {\n    x = vizElement.getAttribute('x');\n    y = vizElement.getAttribute('y');\n    z = vizElement.getAttribute('z');\n\n    if (x) data.x = +x;\n    if (y) data.y = +y;\n    if (z) data.z = +z;\n  }\n\n  //-- 4) Shape\n  vizElement = getFirstMatchingVizTag(element, 'shape');\n\n  if (vizElement) data.shape = vizElement.getAttribute('value');\n\n  //-- 5) Thickness\n  vizElement = getFirstMatchingVizTag(element, 'thickness');\n\n  if (vizElement) data.thickness = +vizElement.getAttribute('value');\n\n  return data;\n}\n\n/**\n * Factory taking implementations of `DOMParser` & `Document` returning\n * the parser function.\n */\nmodule.exports = function createParserFunction(DOMParser, Document) {\n  /**\n   * Function taking either a string or a document and returning a\n   * graphology instance.\n   *\n   * @param {function}        Graph  - A graphology constructor.\n   * @param {string|Document} source - The source to parse.\n   * @param {object}          options - Parsing options.\n   */\n\n  // TODO: option to map the data to the attributes for customization, nodeModel, edgeModel, nodeReducer, edgeReducer\n  // TODO: option to disable the model mapping heuristic\n  return function parse(Graph, source, options) {\n    options = options || {};\n\n    var addMissingNodes = options.addMissingNodes === true;\n    var mergeResult;\n\n    var xmlDoc = source;\n\n    var element, result, type, attributes, id, s, t, i, l;\n\n    if (!isGraphConstructor(Graph))\n      throw new Error('graphology-gexf/parser: invalid Graph constructor.');\n\n    // If source is a string, we are going to parse it\n    if (typeof source === 'string')\n      xmlDoc = new DOMParser().parseFromString(source, 'application/xml');\n\n    if (!(xmlDoc instanceof Document))\n      throw new Error(\n        'graphology-gexf/parser: source should either be a XML document or a string.'\n      );\n\n    // Finding useful elements\n    var GRAPH_ELEMENT = xmlDoc.getElementsByTagName('graph')[0],\n      META_ELEMENT = xmlDoc.getElementsByTagName('meta')[0],\n      META_ELEMENTS = (META_ELEMENT && META_ELEMENT.childNodes) || [],\n      NODE_ELEMENTS = xmlDoc.getElementsByTagName('node'),\n      EDGE_ELEMENTS = xmlDoc.getElementsByTagName('edge'),\n      MODEL_ELEMENTS = xmlDoc.getElementsByTagName('attributes'),\n      NODE_MODEL_ELEMENTS = [],\n      EDGE_MODEL_ELEMENTS = [];\n\n    for (i = 0, l = MODEL_ELEMENTS.length; i < l; i++) {\n      element = MODEL_ELEMENTS[i];\n\n      if (element.getAttribute('class') === 'node')\n        NODE_MODEL_ELEMENTS = element.getElementsByTagName('attribute');\n      else if (element.getAttribute('class') === 'edge')\n        EDGE_MODEL_ELEMENTS = element.getElementsByTagName('attribute');\n    }\n\n    // Information\n    var DEFAULT_EDGE_TYPE =\n      GRAPH_ELEMENT.getAttribute('defaultedgetype') || 'undirected';\n\n    if (DEFAULT_EDGE_TYPE === 'mutual') DEFAULT_EDGE_TYPE = 'undirected';\n\n    // Computing models\n    result = extractModel(NODE_MODEL_ELEMENTS);\n\n    var NODE_MODEL = result[0],\n      NODE_DEFAULT_ATTRIBUTES = result[1];\n\n    result = extractModel(EDGE_MODEL_ELEMENTS);\n\n    var EDGE_MODEL = result[0],\n      EDGE_DEFAULT_ATTRIBUTES = result[1];\n\n    // Polling the first edge to guess the type of the edges\n    var graphType = EDGE_ELEMENTS[0]\n      ? EDGE_ELEMENTS[0].getAttribute('type') || DEFAULT_EDGE_TYPE\n      : 'mixed';\n\n    // Instantiating our graph\n    var graph = new Graph({\n      type: graphType\n    });\n\n    // Collecting meta\n    var meta = collectMeta(META_ELEMENTS),\n      lastModifiedDate =\n        META_ELEMENT && META_ELEMENT.getAttribute('lastmodifieddate');\n\n    graph.replaceAttributes(meta);\n\n    if (lastModifiedDate)\n      graph.setAttribute('lastModifiedDate', lastModifiedDate);\n\n    // Adding nodes\n    for (i = 0, l = NODE_ELEMENTS.length; i < l; i++) {\n      element = NODE_ELEMENTS[i];\n\n      graph.addNode(\n        element.getAttribute('id'),\n        collectAttributes(NODE_MODEL, NODE_DEFAULT_ATTRIBUTES, element)\n      );\n    }\n\n    // Adding edges\n    for (i = 0, l = EDGE_ELEMENTS.length; i < l; i++) {\n      element = EDGE_ELEMENTS[i];\n\n      id = element.getAttribute('id');\n      type = element.getAttribute('type') || DEFAULT_EDGE_TYPE;\n      s = element.getAttribute('source');\n      t = element.getAttribute('target');\n      attributes = collectAttributes(\n        EDGE_MODEL,\n        EDGE_DEFAULT_ATTRIBUTES,\n        element\n      );\n\n      // If we encountered an edge with a different type, we upgrade the graph\n      if (type !== graph.type && graph.type !== 'mixed') {\n        graph = toMixed(graph);\n      }\n\n      // If we encountered twice the same edge, we upgrade the graph\n      if (\n        !graph.multi &&\n        ((type === 'directed' && graph.hasDirectedEdge(s, t)) ||\n          graph.hasUndirectedEdge(s, t))\n      ) {\n        graph = toMulti(graph);\n      }\n\n      mergeResult = mergeEdge(\n        graph,\n        type !== 'directed',\n        id || null,\n        s,\n        t,\n        attributes\n      );\n\n      if (!addMissingNodes && (mergeResult[2] || mergeResult[3])) {\n        throw new Error(\n          'graphology-gexf/parser: one of your gexf file edges points to an inexisting node. Set the parser `addMissingNodes` option to `true` if you do not care.'\n        );\n      }\n    }\n\n    return graph;\n  };\n};\n","/* eslint no-self-compare: 0 */\n/**\n * Graphology Common GEXF Writer\n * ==============================\n *\n * GEXF writer working for both node.js & the browser.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n  inferType = require('graphology-utils/infer-type'),\n  XMLWriter = require('xml-writer'),\n  sanitizeTagName = require('./helpers.js').sanitizeTagName;\n\n// TODO: handle object in color, position with object for viz\n\n/**\n * Constants.\n */\nvar GEXF_NAMESPACE = 'http://www.gexf.net/1.2draft',\n  GEXF_VIZ_NAMESPACE = 'http:///www.gexf.net/1.1draft/viz';\n\nvar VIZ_RESERVED_NAMES = new Set([\n  'color',\n  'size',\n  'x',\n  'y',\n  'z',\n  'shape',\n  'thickness'\n]);\n\nvar RGBA_TEST = /^\\s*rgba?\\s*\\(/i,\n  RGBA_MATCH =\n    /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*(?:,\\s*([.0-9]*))?\\)\\s*$/;\n\n/**\n * Function used to transform a CSS color into a RGBA object.\n *\n * @param  {string} value - Target value.\n * @return {object}\n */\nfunction CSSColorToRGBA(value) {\n  if (!value || typeof value !== 'string') return {};\n\n  if (value[0] === '#') {\n    value = value.slice(1);\n\n    return value.length === 3\n      ? {\n          r: parseInt(value[0] + value[0], 16),\n          g: parseInt(value[1] + value[1], 16),\n          b: parseInt(value[2] + value[2], 16)\n        }\n      : {\n          r: parseInt(value[0] + value[1], 16),\n          g: parseInt(value[2] + value[3], 16),\n          b: parseInt(value[4] + value[5], 16)\n        };\n  } else if (RGBA_TEST.test(value)) {\n    var result = {};\n\n    value = value.match(RGBA_MATCH);\n    result.r = +value[1];\n    result.g = +value[2];\n    result.b = +value[3];\n\n    if (value[4]) result.a = +value[4];\n\n    return result;\n  }\n\n  return {};\n}\n\n/**\n * Function used to map an element's attributes to a standardized map of\n * GEXF expected properties (label, viz, attributes).\n *\n * @param  {string} type       - The element's type.\n * @param  {string} key        - The element's key.\n * @param  {object} attributes - The element's attributes.\n * @return {object}\n */\nfunction DEFAULT_ELEMENT_FORMATTER(type, key, attributes) {\n  var output = {},\n    name;\n\n  for (name in attributes) {\n    if (name === 'label') {\n      output.label = attributes.label;\n    } else if (type === 'edge' && name === 'weight') {\n      output.weight = attributes.weight;\n    } else if (VIZ_RESERVED_NAMES.has(name)) {\n      output.viz = output.viz || {};\n      output.viz[name] = attributes[name];\n    } else {\n      output.attributes = output.attributes || {};\n      output.attributes[name] = attributes[name];\n    }\n  }\n\n  return output;\n}\n\nvar DEFAULT_NODE_FORMATTER = DEFAULT_ELEMENT_FORMATTER.bind(null, 'node'),\n  DEFAULT_EDGE_FORMATTER = DEFAULT_ELEMENT_FORMATTER.bind(null, 'edge');\n\n/**\n * Function used to check whether the given integer is 32 bits or not.\n *\n * @param  {number} number - Target number.\n * @return {boolean}\n */\nfunction is32BitInteger(number) {\n  return number <= 0x7fffffff && number >= -0x7fffffff;\n}\n\n/**\n * Function used to check whether the given value is \"empty\".\n *\n * @param  {any} value - Target value.\n * @return {boolean}\n */\nfunction isEmptyValue(value) {\n  return (\n    typeof value === 'undefined' ||\n    value === null ||\n    value === '' ||\n    value !== value\n  );\n}\n\n/**\n * Function used to detect a JavaScript's value type in the GEXF model.\n *\n * @param  {any}    value - Target value.\n * @return {string}\n */\nfunction detectValueType(value) {\n  if (isEmptyValue(value)) return 'empty';\n\n  if (Array.isArray(value)) return 'liststring';\n\n  if (typeof value === 'boolean') return 'boolean';\n\n  if (typeof value === 'object') return 'string';\n\n  // Numbers\n  if (typeof value === 'number') {\n    // Integer\n    if (value === (value | 0)) {\n      // Long (JavaScript integer can go up to 53 bit)?\n      return is32BitInteger(value) ? 'integer' : 'long';\n    }\n\n    // JavaScript numbers are 64 bit float, hence the double\n    return 'double';\n  }\n\n  return 'string';\n}\n\n/**\n * Function used to cast the given value into the given type.\n *\n * @param  {string} type  - Target type.\n * @param  {any}    value - Value to cast.\n * @return {string}\n */\nfunction cast(type, value) {\n  if (type === 'liststring' && Array.isArray(value)) return value.join('|');\n  return '' + value;\n}\n\n/**\n * Function used to collect data from a graph's nodes.\n *\n * @param  {Graph}    graph   - Target graph.\n * @param  {function} format  - Function formatting the nodes attributes.\n * @return {array}\n */\nfunction collectNodeData(graph, format) {\n  var nodes = new Array(graph.order);\n  var i = 0;\n\n  graph.forEachNode(function (node, attr) {\n    var data = format(node, attr);\n    data.key = node;\n    nodes[i++] = data;\n  });\n\n  return nodes;\n}\n\n/**\n * Function used to collect data from a graph's edges.\n *\n * @param  {Graph}    graph   - Target graph.\n * @param  {function} reducer - Function reducing the edges attributes.\n * @return {array}\n */\nfunction collectEdgeData(graph, reducer) {\n  var edges = new Array(graph.size);\n  var i = 0;\n\n  graph.forEachEdge(function (\n    edge,\n    attr,\n    source,\n    target,\n    _sa,\n    _ta,\n    undirected\n  ) {\n    var data = reducer(edge, attr);\n    data.key = edge;\n    data.source = source;\n    data.target = target;\n    data.undirected = undirected;\n    edges[i++] = data;\n  });\n\n  return edges;\n}\n\n/**\n * Function used to infer the model of the graph's nodes or edges.\n *\n * @param  {array} elements - The graph's relevant elements.\n * @return {array}\n */\n\n// TODO: on large graph, we could also sample or let the user indicate the types\nfunction inferModel(elements) {\n  var model = {},\n    attributes,\n    type,\n    k;\n\n  // Testing every attributes\n  for (var i = 0, l = elements.length; i < l; i++) {\n    attributes = elements[i].attributes;\n\n    if (!attributes) continue;\n\n    for (k in attributes) {\n      type = detectValueType(attributes[k]);\n\n      if (type === 'empty') continue;\n\n      if (!model[k]) model[k] = type;\n      else {\n        if (model[k] === 'integer' && type === 'long') model[k] = type;\n        else if (model[k] !== type) model[k] = 'string';\n      }\n    }\n  }\n\n  // TODO: check default values\n  return model;\n}\n\n/**\n * Function used to write a model.\n *\n * @param {XMLWriter} writer     - The writer to use.\n * @param {object}    model      - Model to write.\n * @param {string}    modelClass - Class of the model.\n */\nfunction writeModel(writer, model, modelClass) {\n  var name;\n\n  if (!Object.keys(model).length) return;\n\n  writer.startElement('attributes');\n  writer.writeAttribute('class', modelClass);\n\n  for (name in model) {\n    writer.startElement('attribute');\n    writer.writeAttribute('id', name);\n    writer.writeAttribute('title', name);\n    writer.writeAttribute('type', model[name]);\n    writer.endElement();\n  }\n\n  writer.endElement();\n}\n\nfunction writeElements(writer, type, model, elements) {\n  var emptyModel = !Object.keys(model).length,\n    element,\n    name,\n    color,\n    value,\n    edgeType,\n    attributes,\n    weight,\n    viz,\n    k,\n    i,\n    l;\n\n  writer.startElement(type + 's');\n\n  for (i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n    attributes = element.attributes;\n    viz = element.viz;\n\n    writer.startElement(type);\n    writer.writeAttribute('id', element.key);\n\n    if (type === 'edge') {\n      edgeType = element.undirected ? 'undirected' : 'directed';\n\n      if (edgeType !== writer.defaultEdgeType)\n        writer.writeAttribute('type', edgeType);\n\n      writer.writeAttribute('source', element.source);\n      writer.writeAttribute('target', element.target);\n\n      weight = element.weight;\n\n      if (\n        (typeof weight === 'number' && !isNaN(weight)) ||\n        typeof weight === 'string'\n      )\n        writer.writeAttribute('weight', element.weight);\n    }\n\n    if (element.label) writer.writeAttribute('label', element.label);\n\n    if (!emptyModel && attributes) {\n      writer.startElement('attvalues');\n\n      for (name in model) {\n        if (name in attributes) {\n          value = attributes[name];\n\n          if (isEmptyValue(value)) continue;\n\n          writer.startElement('attvalue');\n          writer.writeAttribute('for', name);\n          writer.writeAttribute('value', cast(model[name], value));\n          writer.endElement();\n        }\n      }\n\n      writer.endElement();\n    }\n\n    if (viz) {\n      //-- 1) Color\n      if (viz.color) {\n        color = CSSColorToRGBA(viz.color);\n\n        writer.startElementNS('viz', 'color');\n\n        for (k in color) writer.writeAttribute(k, color[k]);\n\n        writer.endElement();\n      }\n\n      //-- 2) Size\n      if ('size' in viz) {\n        writer.startElementNS('viz', 'size');\n        writer.writeAttribute('value', viz.size);\n        writer.endElement();\n      }\n\n      //-- 3) Position\n      if ('x' in viz || 'y' in viz || 'z' in viz) {\n        writer.startElementNS('viz', 'position');\n\n        if ('x' in viz) writer.writeAttribute('x', viz.x);\n\n        if ('y' in viz) writer.writeAttribute('y', viz.y);\n\n        if ('z' in viz) writer.writeAttribute('z', viz.z);\n\n        writer.endElement();\n      }\n\n      //-- 4) Shape\n      if (viz.shape) {\n        writer.startElementNS('viz', 'shape');\n        writer.writeAttribute('value', viz.shape);\n        writer.endElement();\n      }\n\n      //-- 5) Thickness\n      if ('thickness' in viz) {\n        writer.startElementNS('viz', 'thickness');\n        writer.writeAttribute('value', viz.thickness);\n        writer.endElement();\n      }\n    }\n\n    writer.endElement();\n  }\n\n  writer.endElement();\n}\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  encoding: 'UTF-8',\n  pretty: true,\n  formatNode: DEFAULT_NODE_FORMATTER,\n  formatEdge: DEFAULT_EDGE_FORMATTER\n};\n\n/**\n * Function taking a graphology instance & outputting a gexf string.\n *\n * @param  {Graph}  graph        - Target graphology instance.\n * @param  {object} options      - Options:\n * @param  {string}   [encoding]   - Character encoding.\n * @param  {boolean}  [pretty]     - Whether to pretty print output.\n * @param  {function} [formatNode] - Function formatting nodes' output.\n * @param  {function} [formatEdge] - Function formatting edges' output.\n * @return {string}              - GEXF string.\n */\nmodule.exports = function write(graph, options) {\n  if (!isGraph(graph))\n    throw new Error('graphology-gexf/writer: invalid graphology instance.');\n\n  options = options || {};\n\n  var indent = options.pretty === false ? false : '  ';\n\n  var formatNode = options.formatNode || DEFAULTS.formatNode,\n    formatEdge = options.formatEdge || DEFAULTS.formatEdge;\n\n  var writer = new XMLWriter(indent);\n\n  writer.startDocument('1.0', options.encoding || DEFAULTS.encoding);\n\n  // Starting gexf\n  writer.startElement('gexf');\n  writer.writeAttribute('version', '1.2');\n  writer.writeAttribute('xmlns', GEXF_NAMESPACE);\n  writer.writeAttribute('xmlns:viz', GEXF_VIZ_NAMESPACE);\n\n  // Processing meta\n  writer.startElement('meta');\n  var graphAttributes = graph.getAttributes();\n\n  if (graphAttributes.lastModifiedDate)\n    writer.writeAttribute('lastmodifieddate', graphAttributes.lastModifiedDate);\n\n  var metaTagName;\n  var graphAttribute;\n\n  for (var k in graphAttributes) {\n    if (k === 'lastModifiedDate') continue;\n\n    metaTagName = sanitizeTagName(k);\n\n    if (!metaTagName) continue;\n\n    graphAttribute = graphAttributes[k];\n\n    // NOTE: if the graph attribute is not a scalar, we do not bother writing\n    // it as metadata in the gexf output. This means the writer/parser is not\n    // idempotent, but we cannot do better because the gexf format does not\n    // allow it, since it was not meant to handle complex values as graph\n    // metadata anyway.\n    if (\n      typeof graphAttribute === 'string' ||\n      typeof graphAttribute === 'number' ||\n      typeof graphAttribute === 'boolean'\n    ) {\n      writer.writeElement(metaTagName, '' + graphAttribute);\n    }\n  }\n\n  writer.endElement();\n  writer.startElement('graph');\n\n  var type = inferType(graph);\n\n  writer.defaultEdgeType = type === 'mixed' ? 'directed' : type;\n\n  writer.writeAttribute('defaultedgetype', writer.defaultEdgeType);\n\n  // Processing model\n  var nodes = collectNodeData(graph, formatNode),\n    edges = collectEdgeData(graph, formatEdge);\n\n  var nodeModel = inferModel(nodes);\n\n  writeModel(writer, nodeModel, 'node');\n\n  var edgeModel = inferModel(edges);\n\n  writeModel(writer, edgeModel, 'edge');\n\n  // Processing nodes\n  writeElements(writer, 'node', nodeModel, nodes);\n\n  // Processing edges\n  writeElements(writer, 'edge', edgeModel, edges);\n\n  return writer.toString();\n};\n","/**\n * Graphology Operators To Mixed Caster\n * =====================================\n *\n * Function used to cast any graph to a mixed one.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\nmodule.exports = function toMixed(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-mixed: expecting a valid graphology instance.'\n    );\n\n  return graph.copy({type: 'mixed'});\n};\n","/**\n * Graphology Operators To Multi Caster\n * =====================================\n *\n * Function used to cast any graph to a multi one.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\nmodule.exports = function toMulti(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-multi: expecting a valid graphology instance.'\n    );\n\n  return graph.copy({multi: true});\n};\n","/**\n * Graphology Edge Adders\n * =======================\n *\n * Generic edge addition functions that can be used to avoid nasty repetitive\n * conditions.\n */\nexports.addEdge = function addEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.addUndirectedEdge(source, target, attributes);\n    else return graph.addUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.addDirectedEdge(source, target, attributes);\n    else return graph.addDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.copyEdge = function copyEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  attributes = Object.assign({}, attributes);\n\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.addUndirectedEdge(source, target, attributes);\n    else return graph.addUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.addDirectedEdge(source, target, attributes);\n    else return graph.addDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.mergeEdge = function mergeEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.mergeUndirectedEdge(source, target, attributes);\n    else\n      return graph.mergeUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.mergeDirectedEdge(source, target, attributes);\n    else return graph.mergeDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.updateEdge = function updateEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  updater\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.updateUndirectedEdge(source, target, updater);\n    else return graph.updateUndirectedEdgeWithKey(key, source, target, updater);\n  } else {\n    if (key === null || key === undefined)\n      return graph.updateDirectedEdge(source, target, updater);\n    else return graph.updateDirectedEdgeWithKey(key, source, target, updater);\n  }\n};\n","/**\n * Graphology inferType\n * =====================\n *\n * Useful function used to \"guess\" the real type of the given Graph using\n * introspection.\n */\nvar isGraph = require('./is-graph.js');\n\n/**\n * Returning the inferred type of the given graph.\n *\n * @param  {Graph}   graph - Target graph.\n * @return {boolean}\n */\nmodule.exports = function inferType(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-utils/infer-type: expecting a valid graphology instance.'\n    );\n\n  var declaredType = graph.type;\n\n  if (declaredType !== 'mixed') return declaredType;\n\n  if (\n    (graph.directedSize === 0 && graph.undirectedSize === 0) ||\n    (graph.directedSize > 0 && graph.undirectedSize > 0)\n  )\n    return 'mixed';\n\n  if (graph.directedSize > 0) return 'directed';\n\n  return 'undirected';\n};\n","/**\n * Graphology isGraphConstructor\n * ==============================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology constructor.\n */\n\n/**\n * Checking the value is a graphology constructor.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraphConstructor(value) {\n  return (\n    value !== null &&\n    typeof value === 'function' &&\n    typeof value.prototype === 'object' &&\n    typeof value.prototype.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.prototype.dropNode === 'function'\n  );\n};\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology Utilities\n * =====================\n *\n * Collection of helpful functions used by the implementation.\n */\n\n/**\n * Object.assign-like polyfill.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignPolyfill() {\n  const target = arguments[0];\n\n  for (let i = 1, l = arguments.length; i < l; i++) {\n    if (!arguments[i]) continue;\n\n    for (const k in arguments[i]) target[k] = arguments[i][k];\n  }\n\n  return target;\n}\n\nlet assign = assignPolyfill;\n\nif (typeof Object.assign === 'function') assign = Object.assign;\n\nexport {assign};\n\n/**\n * Function returning the first matching edge for given path.\n * Note: this function does not check the existence of source & target. This\n * must be performed by the caller.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @param  {any}    target - Target node.\n * @param  {string} type   - Type of the edge (mixed, directed or undirected).\n * @return {string|null}\n */\nexport function getMatchingEdge(graph, source, target, type) {\n  const sourceData = graph._nodes.get(source);\n\n  let edge = null;\n\n  if (!sourceData) return edge;\n\n  if (type === 'mixed') {\n    edge =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]);\n  } else if (type === 'directed') {\n    edge = sourceData.out && sourceData.out[target];\n  } else {\n    edge = sourceData.undirected && sourceData.undirected[target];\n  }\n\n  return edge;\n}\n\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\nexport function isPlainObject(value) {\n  return (\n    typeof value === 'object' && value !== null && value.constructor === Object\n  );\n}\n\n/**\n * Checks whether the given object is empty.\n *\n * @param  {object}  o - Target Object.\n * @return {boolean}\n */\nexport function isEmpty(o) {\n  let k;\n\n  for (k in o) return false;\n\n  return true;\n}\n\n/**\n * Creates a \"private\" property for the given member name by concealing it\n * using the `enumerable` option.\n *\n * @param {object} target - Target object.\n * @param {string} name   - Member name.\n */\nexport function privateProperty(target, name, value) {\n  Object.defineProperty(target, name, {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value\n  });\n}\n\n/**\n * Creates a read-only property for the given member name & the given getter.\n *\n * @param {object}   target - Target object.\n * @param {string}   name   - Member name.\n * @param {mixed}    value  - The attached getter or fixed value.\n */\nexport function readOnlyProperty(target, name, value) {\n  const descriptor = {\n    enumerable: true,\n    configurable: true\n  };\n\n  if (typeof value === 'function') {\n    descriptor.get = value;\n  } else {\n    descriptor.value = value;\n    descriptor.writable = false;\n  }\n\n  Object.defineProperty(target, name, descriptor);\n}\n\n/**\n * Returns whether the given object constitute valid hints.\n *\n * @param {object} hints - Target object.\n */\nexport function validateHints(hints) {\n  if (!isPlainObject(hints)) return false;\n\n  if (hints.attributes && !Array.isArray(hints.attributes)) return false;\n\n  return true;\n}\n\n/**\n * Creates a function generating incremental ids for edges.\n *\n * @return {function}\n */\nexport function incrementalIdStartingFromRandomByte() {\n  let i = Math.floor(Math.random() * 256) & 0xff;\n\n  return () => {\n    return i++;\n  };\n}\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n","/**\n * Obliterator Iter Function\n * ==========================\n *\n * Function coercing values to an iterator. It can be quite useful when needing\n * to handle iterables and iterators the same way.\n */\nvar Iterator = require('./iterator.js');\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\nfunction iterOrNull(target) {\n  // Indexed sequence\n  if (\n    typeof target === 'string' ||\n    Array.isArray(target) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(target))\n  )\n    return Iterator.fromSequence(target);\n\n  // Invalid value\n  if (typeof target !== 'object' || target === null) return null;\n\n  // Iterable\n  if (SYMBOL_SUPPORT && typeof target[Symbol.iterator] === 'function')\n    return target[Symbol.iterator]();\n\n  // Iterator duck-typing\n  if (typeof target.next === 'function') return target;\n\n  // Invalid object\n  return null;\n}\n\nmodule.exports = function iter(target) {\n  var iterator = iterOrNull(target);\n\n  if (!iterator)\n    throw new Error(\n      'obliterator: target is not iterable nor a valid iterator.'\n    );\n\n  return iterator;\n};\n","/* eslint no-constant-condition: 0 */\n/**\n * Obliterator Take Function\n * ==========================\n *\n * Function taking n or every value of the given iterator and returns them\n * into an array.\n */\nvar iter = require('./iter.js');\n\n/**\n * Take.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {number}   [n]      - Optional number of items to take.\n * @return {array}\n */\nmodule.exports = function take(iterable, n) {\n  var l = arguments.length > 1 ? n : Infinity,\n    array = l !== Infinity ? new Array(l) : [],\n    step,\n    i = 0;\n\n  var iterator = iter(iterable);\n\n  while (true) {\n    if (i === l) return array;\n\n    step = iterator.next();\n\n    if (step.done) {\n      if (i !== n) array.length = i;\n\n      return array;\n    }\n\n    array[i++] = step.value;\n  }\n};\n","/**\n * Graphology Custom Errors\n * =========================\n *\n * Defining custom errors for ease of use & easy unit tests across\n * implementations (normalized typology rather than relying on error\n * messages to check whether the correct error was found).\n */\nexport class GraphError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'GraphError';\n    this.message = message;\n  }\n}\n\nexport class InvalidArgumentsGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidArgumentsGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(\n        this,\n        InvalidArgumentsGraphError.prototype.constructor\n      );\n  }\n}\n\nexport class NotFoundGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, NotFoundGraphError.prototype.constructor);\n  }\n}\n\nexport class UsageGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'UsageGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, UsageGraphError.prototype.constructor);\n  }\n}\n","/**\n * Graphology Internal Data Classes\n * =================================\n *\n * Internal classes hopefully reduced to structs by engines & storing\n * necessary information for nodes & edges.\n *\n * Note that those classes don't rely on the `class` keyword to avoid some\n * cruft introduced by most of ES2015 transpilers.\n */\n\n/**\n * MixedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function MixedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nMixedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n  this.undirected = {};\n};\n\n/**\n * DirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function DirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nDirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n};\n\n/**\n * UndirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function UndirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nUndirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n\n  // Indices\n  this.undirected = {};\n};\n\n/**\n * EdgeData class.\n *\n * @constructor\n * @param {boolean} undirected   - Whether the edge is undirected.\n * @param {string}  string       - The edge's key.\n * @param {string}  source       - Source of the edge.\n * @param {string}  target       - Target of the edge.\n * @param {object}  attributes   - Edge's attributes.\n */\nexport function EdgeData(undirected, key, source, target, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n  this.undirected = undirected;\n\n  // Extremities\n  this.source = source;\n  this.target = target;\n}\n\nEdgeData.prototype.attach = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  // Handling source\n  this.source[outKey][target] = this;\n\n  if (this.undirected && source === target) return;\n\n  // Handling target\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.attachMulti = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Handling source\n  const adj = this.source[outKey];\n  const head = adj[target];\n\n  if (typeof head === 'undefined') {\n    adj[target] = this;\n\n    // Self-loop optimization\n    if (!(this.undirected && source === target)) {\n      // Handling target\n      this.target[inKey][source] = this;\n    }\n\n    return;\n  }\n\n  // Prepending to doubly-linked list\n  head.previous = this;\n  this.next = head;\n\n  // Pointing to new head\n  // NOTE: use mutating swap later to avoid lookup?\n  adj[target] = this;\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.detach = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  delete this.source[outKey][target];\n\n  // No-op delete in case of undirected self-loop\n  delete this.target[inKey][source];\n};\n\nEdgeData.prototype.detachMulti = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Deleting from doubly-linked list\n  if (this.previous === undefined) {\n    // We are dealing with the head\n\n    // Should we delete the adjacency entry because it is now empty?\n    if (this.next === undefined) {\n      delete this.source[outKey][target];\n\n      // No-op delete in case of undirected self-loop\n      delete this.target[inKey][source];\n    } else {\n      // Detaching\n      this.next.previous = undefined;\n\n      // NOTE: could avoid the lookups by creating a #.become mutating method\n      this.source[outKey][target] = this.next;\n\n      // No-op delete in case of undirected self-loop\n      this.target[inKey][source] = this.next;\n    }\n  } else {\n    // We are dealing with another list node\n    this.previous.next = this.next;\n\n    // If not last\n    if (this.next !== undefined) {\n      this.next.previous = this.previous;\n    }\n  }\n};\n","/**\n * Graphology Node Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\nconst NODE = 0;\nconst SOURCE = 1;\nconst TARGET = 2;\nconst OPPOSITE = 3;\n\nfunction findRelevantNodeData(\n  graph,\n  method,\n  mode,\n  nodeOrEdge,\n  nameOrEdge,\n  add1,\n  add2\n) {\n  let nodeData, edgeData, arg1, arg2;\n\n  nodeOrEdge = '' + nodeOrEdge;\n\n  if (mode === NODE) {\n    nodeData = graph._nodes.get(nodeOrEdge);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" node in the graph.`\n      );\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  } else if (mode === OPPOSITE) {\n    nameOrEdge = '' + nameOrEdge;\n\n    edgeData = graph._edges.get(nameOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nameOrEdge}\" edge in the graph.`\n      );\n\n    const source = edgeData.source.key;\n    const target = edgeData.target.key;\n\n    if (nodeOrEdge === source) {\n      nodeData = edgeData.target;\n    } else if (nodeOrEdge === target) {\n      nodeData = edgeData.source;\n    } else {\n      throw new NotFoundGraphError(\n        `Graph.${method}: the \"${nodeOrEdge}\" node is not attached to the \"${nameOrEdge}\" edge (${source}, ${target}).`\n      );\n    }\n\n    arg1 = add1;\n    arg2 = add2;\n  } else {\n    edgeData = graph._edges.get(nodeOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" edge in the graph.`\n      );\n\n    if (mode === SOURCE) {\n      nodeData = edgeData.source;\n    } else {\n      nodeData = edgeData.target;\n    }\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  }\n\n  return [nodeData, arg1, arg2];\n}\n\nfunction attachNodeAttributeGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes[name];\n  };\n}\n\nfunction attachNodeAttributesGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge) {\n    const [data] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge\n    );\n\n    return data.attributes;\n  };\n}\n\nfunction attachNodeAttributeChecker(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\nfunction attachNodeAttributeSetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, value] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    const attributes = data.attributes;\n    const value = updater(attributes[name]);\n\n    attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeRemover(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesReplacer(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesMerger(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst NODE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachNodeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachNodeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachNodeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachNodeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachNodeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachNodeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachNodeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachNodeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachNodeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachNodeAttributesMethods(Graph) {\n  NODE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For nodes\n    attacher(Graph, name('Node'), NODE);\n\n    // For sources\n    attacher(Graph, name('Source'), SOURCE);\n\n    // For targets\n    attacher(Graph, name('Target'), TARGET);\n\n    // For opposites\n    attacher(Graph, name('Opposite'), OPPOSITE);\n  });\n}\n","/**\n * Graphology Edge Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject, getMatchingEdge} from '../utils';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from '../errors';\n\n/**\n * Attach an attribute getter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeGetter(Class, method, type) {\n  /**\n   * Get the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {mixed}          - The attribute's value.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes[name];\n  };\n}\n\n/**\n * Attach an attributes getter method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributesGetter(Class, method, type) {\n  /**\n   * Retrieves all the target element's attributes.\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   *\n   * @return {object}          - The element's attributes.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 1) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + arguments[1];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes;\n  };\n}\n\n/**\n * Attach an attribute checker method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributeChecker(Class, method, type) {\n  /**\n   * Checks whether the desired attribute is set for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\n/**\n * Attach an attribute setter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeSetter(Class, method, type) {\n  /**\n   * Set the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, value) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      value = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeUpdater(Class, method, type) {\n  /**\n   * Update the desired attribute for the given element (node or edge) using\n   * the provided function.\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      updater = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    data.attributes[name] = updater(data.attributes[name]);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute remover method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeRemover(Class, method, type) {\n  /**\n   * Remove the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute replacer method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesReplacer(Class, method, type) {\n  /**\n   * Replace the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - New attributes.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - New attributes.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute merger method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesMerger(Class, method, type) {\n  /**\n   * Merge the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - Attributes to merge.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - Attributes to merge.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesUpdater(Class, method, type) {\n  /**\n   * Update the attributes of the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + updater;\n\n      updater = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst EDGE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachEdgeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachEdgeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachEdgeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachEdgeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachEdgeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachEdgeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachEdgeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachEdgeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachEdgeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachEdgeAttributesMethods(Graph) {\n  EDGE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For edges\n    attacher(Graph, name('Edge'), 'mixed');\n\n    // For directed edges\n    attacher(Graph, name('DirectedEdge'), 'directed');\n\n    // For undirected edges\n    attacher(Graph, name('UndirectedEdge'), 'undirected');\n  });\n}\n","/**\n * Obliterator Chain Function\n * ===========================\n *\n * Variadic function combining the given iterables.\n */\nvar Iterator = require('./iterator.js');\nvar iter = require('./iter.js');\n\n/**\n * Chain.\n *\n * @param  {...Iterator} iterables - Target iterables.\n * @return {Iterator}\n */\nmodule.exports = function chain() {\n  var iterables = arguments;\n  var current = null;\n  var i = -1;\n\n  /* eslint-disable no-constant-condition */\n  return new Iterator(function next() {\n    var step = null;\n\n    do {\n      if (current === null) {\n        i++;\n\n        if (i >= iterables.length) return {done: true};\n\n        current = iter(iterables[i]);\n      }\n\n      step = current.next();\n\n      if (step.done === true) {\n        current = null;\n        continue;\n      }\n\n      break;\n    } while (true);\n\n    return step;\n  });\n};\n","/**\n * Graphology Edge Iteration\n * ==========================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's edges.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\nimport take from 'obliterator/take';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst EDGES_ITERATION = [\n  {\n    name: 'edges',\n    type: 'mixed'\n  },\n  {\n    name: 'inEdges',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outEdges',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundEdges',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundEdges',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedEdges',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedEdges',\n    type: 'undirected'\n  }\n];\n\n/**\n * Function iterating over edges from the given object to match one of them.\n *\n * @param {object}   object   - Target object.\n * @param {function} callback - Function to call.\n */\nfunction forEachSimple(breakable, object, callback, avoid) {\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    const edgeData = object[k];\n\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n  }\n\n  return;\n}\n\nfunction forEachMulti(breakable, object, callback, avoid) {\n  let edgeData, source, target;\n\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    edgeData = object[k];\n\n    do {\n      source = edgeData.source;\n      target = edgeData.target;\n\n      shouldBreak = callback(\n        edgeData.key,\n        edgeData.attributes,\n        source.key,\n        target.key,\n        source.attributes,\n        target.attributes,\n        edgeData.undirected\n      );\n\n      if (breakable && shouldBreak) return edgeData.key;\n\n      edgeData = edgeData.next;\n    } while (edgeData !== undefined);\n  }\n\n  return;\n}\n\n/**\n * Function returning an iterator over edges from the given object.\n *\n * @param  {object}   object - Target object.\n * @return {Iterator}\n */\nfunction createIterator(object, avoid) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let edgeData;\n  let i = 0;\n\n  return new Iterator(function next() {\n    do {\n      if (!edgeData) {\n        if (i >= l) return {done: true};\n\n        const k = keys[i++];\n\n        if (k === avoid) {\n          edgeData = undefined;\n          continue;\n        }\n\n        edgeData = object[k];\n      } else {\n        edgeData = edgeData.next;\n      }\n    } while (!edgeData);\n\n    return {\n      done: false,\n      value: {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      }\n    };\n  });\n}\n\n/**\n * Function iterating over the egdes from the object at given key to match\n * one of them.\n *\n * @param {object}   object   - Target object.\n * @param {mixed}    k        - Neighbor key.\n * @param {function} callback - Callback to use.\n */\nfunction forEachForKeySimple(breakable, object, k, callback) {\n  const edgeData = object[k];\n\n  if (!edgeData) return;\n\n  const sourceData = edgeData.source;\n  const targetData = edgeData.target;\n\n  if (\n    callback(\n      edgeData.key,\n      edgeData.attributes,\n      sourceData.key,\n      targetData.key,\n      sourceData.attributes,\n      targetData.attributes,\n      edgeData.undirected\n    ) &&\n    breakable\n  )\n    return edgeData.key;\n}\n\nfunction forEachForKeyMulti(breakable, object, k, callback) {\n  let edgeData = object[k];\n\n  if (!edgeData) return;\n\n  let shouldBreak = false;\n\n  do {\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n\n    edgeData = edgeData.next;\n  } while (edgeData !== undefined);\n\n  return;\n}\n\n/**\n * Function returning an iterator over the egdes from the object at given key.\n *\n * @param  {object}   object   - Target object.\n * @param  {mixed}    k        - Neighbor key.\n * @return {Iterator}\n */\nfunction createIteratorForKey(object, k) {\n  let edgeData = object[k];\n\n  if (edgeData.next !== undefined) {\n    return new Iterator(function () {\n      if (!edgeData) return {done: true};\n\n      const value = {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      };\n\n      edgeData = edgeData.next;\n\n      return {\n        done: false,\n        value\n      };\n    });\n  }\n\n  return Iterator.of({\n    edge: edgeData.key,\n    attributes: edgeData.attributes,\n    source: edgeData.source.key,\n    target: edgeData.target.key,\n    sourceAttributes: edgeData.source.attributes,\n    targetAttributes: edgeData.target.attributes,\n    undirected: edgeData.undirected\n  });\n}\n\n/**\n * Function creating an array of edges for the given type.\n *\n * @param  {Graph}   graph - Target Graph instance.\n * @param  {string}  type  - Type of edges to retrieve.\n * @return {array}         - Array of edges.\n */\nfunction createEdgeArray(graph, type) {\n  if (graph.size === 0) return [];\n\n  if (type === 'mixed' || type === graph.type) {\n    if (typeof Array.from === 'function')\n      return Array.from(graph._edges.keys());\n\n    return take(graph._edges.keys(), graph._edges.size);\n  }\n\n  const size =\n    type === 'undirected' ? graph.undirectedSize : graph.directedSize;\n\n  const list = new Array(size),\n    mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  let i = 0;\n  let step, data;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (data.undirected === mask) list[i++] = data.key;\n  }\n\n  return list;\n}\n\n/**\n * Function iterating over a graph's edges using a callback to match one of\n * them.\n *\n * @param  {Graph}    graph    - Target Graph instance.\n * @param  {string}   type     - Type of edges to retrieve.\n * @param  {function} callback - Function to call.\n */\nfunction forEachEdge(breakable, graph, type, callback) {\n  if (graph.size === 0) return;\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  let step, data;\n  let shouldBreak = false;\n  const iterator = graph._edges.values();\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (shouldFilter && data.undirected !== mask) continue;\n\n    const {key, attributes, source, target} = data;\n\n    shouldBreak = callback(\n      key,\n      attributes,\n      source.key,\n      target.key,\n      source.attributes,\n      target.attributes,\n      data.undirected\n    );\n\n    if (breakable && shouldBreak) return key;\n  }\n\n  return;\n}\n\n/**\n * Function creating an iterator of edges for the given type.\n *\n * @param  {Graph}    graph - Target Graph instance.\n * @param  {string}   type  - Type of edges to retrieve.\n * @return {Iterator}\n */\nfunction createEdgeIterator(graph, type) {\n  if (graph.size === 0) return Iterator.empty();\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  return new Iterator(function next() {\n    let step, data;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      step = iterator.next();\n\n      if (step.done) return step;\n\n      data = step.value;\n\n      if (shouldFilter && data.undirected !== mask) continue;\n\n      break;\n    }\n\n    const value = {\n      edge: data.key,\n      attributes: data.attributes,\n      source: data.source.key,\n      target: data.target.key,\n      sourceAttributes: data.source.attributes,\n      targetAttributes: data.target.attributes,\n      undirected: data.undirected\n    };\n\n    return {value, done: false};\n  });\n}\n\n/**\n * Function iterating over a node's edges using a callback to match one of them.\n *\n * @param  {boolean}  multi     - Whether the graph is multi or not.\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Function to call.\n */\nfunction forEachEdgeForNode(\n  breakable,\n  multi,\n  type,\n  direction,\n  nodeData,\n  callback\n) {\n  const fn = multi ? forEachMulti : forEachSimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = fn(breakable, nodeData.in, callback);\n\n      if (breakable && found) return found;\n    }\n    if (direction !== 'in') {\n      found = fn(\n        breakable,\n        nodeData.out,\n        callback,\n        !direction ? nodeData.key : undefined\n      );\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    found = fn(breakable, nodeData.undirected, callback);\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given type & the given node.\n *\n * @param  {boolean} multi     - Whether the graph is multi or not.\n * @param  {string}  type      - Type of edges to retrieve.\n * @param  {string}  direction - In or out?\n * @param  {any}     nodeData  - Target node's data.\n * @return {array}             - Array of edges.\n */\nfunction createEdgeArrayForNode(multi, type, direction, nodeData) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForNode(false, multi, type, direction, nodeData, function (key) {\n    edges.push(key);\n  });\n\n  return edges;\n}\n\n/**\n * Function iterating over a node's edges using a callback.\n *\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createEdgeIteratorForNode(type, direction, nodeData) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out' && typeof nodeData.in !== 'undefined')\n      iterator = chain(iterator, createIterator(nodeData.in));\n    if (direction !== 'in' && typeof nodeData.out !== 'undefined')\n      iterator = chain(\n        iterator,\n        createIterator(nodeData.out, !direction ? nodeData.key : undefined)\n      );\n  }\n\n  if (type !== 'directed' && typeof nodeData.undirected !== 'undefined') {\n    iterator = chain(iterator, createIterator(nodeData.undirected));\n  }\n\n  return iterator;\n}\n\n/**\n * Function iterating over edges for the given path using a callback to match\n * one of them.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction forEachEdgeForPath(\n  breakable,\n  type,\n  multi,\n  direction,\n  sourceData,\n  target,\n  callback\n) {\n  const fn = multi ? forEachForKeyMulti : forEachForKeySimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (typeof sourceData.in !== 'undefined' && direction !== 'out') {\n      found = fn(breakable, sourceData.in, target, callback);\n\n      if (breakable && found) return found;\n    }\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      (direction || sourceData.key !== target)\n    ) {\n      found = fn(breakable, sourceData.out, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    if (typeof sourceData.undirected !== 'undefined') {\n      found = fn(breakable, sourceData.undirected, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {any}      target     - Target node.\n * @return {array}               - Array of edges.\n */\nfunction createEdgeArrayForPath(type, multi, direction, sourceData, target) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForPath(\n    false,\n    type,\n    multi,\n    direction,\n    sourceData,\n    target,\n    function (key) {\n      edges.push(key);\n    }\n  );\n\n  return edges;\n}\n\n/**\n * Function returning an iterator over edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction createEdgeIteratorForPath(type, direction, sourceData, target) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (\n      typeof sourceData.in !== 'undefined' &&\n      direction !== 'out' &&\n      target in sourceData.in\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.in, target));\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      target in sourceData.out &&\n      (direction || sourceData.key !== target)\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.out, target));\n  }\n\n  if (type !== 'directed') {\n    if (\n      typeof sourceData.undirected !== 'undefined' &&\n      target in sourceData.undirected\n    )\n      iterator = chain(\n        iterator,\n        createIteratorForKey(sourceData.undirected, target)\n      );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching an edge array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain edges.\n   *\n   * Arity 0: Return all the relevant edges.\n   *\n   * Arity 1: Return all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Return the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    if (!arguments.length) return createEdgeArray(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeArrayForNode(\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData\n      );\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeArrayForPath(\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching a edge callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(false, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        false,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        false,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${forEachName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function mapping the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Map all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Map all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Map the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    let result;\n\n    // We know the result length beforehand\n    if (args.length === 0) {\n      let length = 0;\n\n      if (type !== 'directed') length += this.undirectedSize;\n      if (type !== 'undirected') length += this.directedSize;\n\n      result = new Array(length);\n\n      let i = 0;\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result[i++] = callback(e, ea, s, t, sa, ta, u);\n      });\n    }\n\n    // We don't know the result length beforehand\n    // TODO: we can in some instances of simple graphs, knowing degree\n    else {\n      result = [];\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result.push(callback(e, ea, s, t, sa, ta, u));\n      });\n    }\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function filtering the graph's relevant edges using the provided predicate\n   * function.\n   *\n   * Arity 1: Filter all the relevant edges.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 2: Filter all of a node's relevant edges.\n   * @param  {any}      node      - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 3: Filter the relevant edges across the given path.\n   * @param  {any}      source    - Source node.\n   * @param  {any}      target    - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    const result = [];\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      if (callback(e, ea, s, t, sa, ta, u)) result.push(e);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function reducing the graph's relevant edges using the provided accumulator\n   * function.\n   *\n   * Arity 1: Reduce all the relevant edges.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 2: Reduce all of a node's relevant edges.\n   * @param  {any}      node         - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 3: Reduce the relevant edges across the given path.\n   * @param  {any}      source       - Source node.\n   * @param  {any}      target       - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function () {\n    let args = Array.prototype.slice.call(arguments);\n\n    if (args.length < 2 || args.length > 4) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: invalid number of arguments (expecting 2, 3 or 4 and got ${args.length}).`\n      );\n    }\n\n    if (\n      typeof args[args.length - 1] === 'function' &&\n      typeof args[args.length - 2] !== 'function'\n    ) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n    }\n\n    let callback;\n    let initialValue;\n\n    if (args.length === 2) {\n      callback = args[0];\n      initialValue = args[1];\n      args = [];\n    } else if (args.length === 3) {\n      callback = args[1];\n      initialValue = args[2];\n      args = [args[0]];\n    } else if (args.length === 4) {\n      callback = args[2];\n      initialValue = args[3];\n      args = [args[0], args[1]];\n    }\n\n    let accumulator = initialValue;\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      accumulator = callback(accumulator, e, ea, s, t, sa, ta, u);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable edge callback iterator method to the Graph\n * prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const findEdgeName = 'find' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges in order to match\n   * one of them using the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findEdgeName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return false;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(true, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        true,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        true,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${findEdgeName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether any one of them matches the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[someName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether all of them matche the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[everyName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return !callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching an edge iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeIteratorCreator(Class, description) {\n  const {name: originalName, type, direction} = description;\n\n  const name = originalName.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over the graph's edges.\n   *\n   * Arity 0: Iterate over all the relevant edges.\n   *\n   * Arity 1: Iterate over all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Iterate over the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    if (!arguments.length) return createEdgeIterator(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeIteratorForNode(type, direction, sourceData);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeIteratorForPath(type, direction, sourceData, target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching every edge iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachEdgeIterationMethods(Graph) {\n  EDGES_ITERATION.forEach(description => {\n    attachEdgeArrayCreator(Graph, description);\n    attachForEachEdge(Graph, description);\n    attachFindEdge(Graph, description);\n    attachEdgeIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Neighbor Iteration\n * ==============================\n *\n * Attaching some methods to the Graph class to be able to iterate over\n * neighbors.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\n\nimport {NotFoundGraphError, InvalidArgumentsGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst NEIGHBORS_ITERATION = [\n  {\n    name: 'neighbors',\n    type: 'mixed'\n  },\n  {\n    name: 'inNeighbors',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outNeighbors',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundNeighbors',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundNeighbors',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedNeighbors',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedNeighbors',\n    type: 'undirected'\n  }\n];\n\n/**\n * Helpers.\n */\nfunction CompositeSetWrapper() {\n  this.A = null;\n  this.B = null;\n}\n\nCompositeSetWrapper.prototype.wrap = function (set) {\n  if (this.A === null) this.A = set;\n  else if (this.B === null) this.B = set;\n};\n\nCompositeSetWrapper.prototype.has = function (key) {\n  if (this.A !== null && key in this.A) return true;\n  if (this.B !== null && key in this.B) return true;\n  return false;\n};\n\n/**\n * Function iterating over the given node's relevant neighbors to match\n * one of them using a predicated function.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Callback to use.\n */\nfunction forEachInObjectOnce(breakable, visited, nodeData, object, callback) {\n  for (const k in object) {\n    const edgeData = object[k];\n\n    const sourceData = edgeData.source;\n    const targetData = edgeData.target;\n\n    const neighborData = sourceData === nodeData ? targetData : sourceData;\n\n    if (visited && visited.has(neighborData.key)) continue;\n\n    const shouldBreak = callback(neighborData.key, neighborData.attributes);\n\n    if (breakable && shouldBreak) return neighborData.key;\n  }\n\n  return;\n}\n\nfunction forEachNeighbor(breakable, type, direction, nodeData, callback) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.undirected,\n        callback\n      );\n\n    if (typeof direction === 'string')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData[direction],\n        callback\n      );\n  }\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.in,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.in);\n    }\n    if (direction !== 'in') {\n      found = forEachInObjectOnce(\n        breakable,\n        visited,\n        nodeData,\n        nodeData.out,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.out);\n    }\n  }\n\n  if (type !== 'directed') {\n    found = forEachInObjectOnce(\n      breakable,\n      visited,\n      nodeData,\n      nodeData.undirected,\n      callback\n    );\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of relevant neighbors for the given node.\n *\n * @param  {string}       type      - Type of neighbors.\n * @param  {string}       direction - Direction.\n * @param  {any}          nodeData  - Target node's data.\n * @return {Array}                  - The list of neighbors.\n */\nfunction createNeighborArrayForNode(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected') return Object.keys(nodeData.undirected);\n\n    if (typeof direction === 'string') return Object.keys(nodeData[direction]);\n  }\n\n  const neighbors = [];\n\n  forEachNeighbor(false, type, direction, nodeData, function (key) {\n    neighbors.push(key);\n  });\n\n  return neighbors;\n}\n\n/**\n * Function returning an iterator over the given node's relevant neighbors.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createDedupedObjectIterator(visited, nodeData, object) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let i = 0;\n\n  return new Iterator(function next() {\n    let neighborData = null;\n\n    do {\n      if (i >= l) {\n        if (visited) visited.wrap(object);\n        return {done: true};\n      }\n\n      const edgeData = object[keys[i++]];\n\n      const sourceData = edgeData.source;\n      const targetData = edgeData.target;\n\n      neighborData = sourceData === nodeData ? targetData : sourceData;\n\n      if (visited && visited.has(neighborData.key)) {\n        neighborData = null;\n        continue;\n      }\n    } while (neighborData === null);\n\n    return {\n      done: false,\n      value: {neighbor: neighborData.key, attributes: neighborData.attributes}\n    };\n  });\n}\n\nfunction createNeighborIterator(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return createDedupedObjectIterator(null, nodeData, nodeData.undirected);\n\n    if (typeof direction === 'string')\n      return createDedupedObjectIterator(null, nodeData, nodeData[direction]);\n  }\n\n  let iterator = Iterator.empty();\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.in)\n      );\n    }\n    if (direction !== 'in') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.out)\n      );\n    }\n  }\n\n  if (type !== 'directed') {\n    iterator = chain(\n      iterator,\n      createDedupedObjectIterator(visited, nodeData, nodeData.undirected)\n    );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching a neighbors array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain neighbors.\n   *\n   * @param  {any}   node   - Target node.\n   * @return {array} - The neighbors of neighbors.\n   *\n   * @throws {Error} - Will throw if node is not found in the graph.\n   */\n  Class.prototype[name] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${name}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborArrayForNode(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${forEachName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    forEachNeighbor(\n      false,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function mapping the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function (node, callback) {\n    // TODO: optimize when size is known beforehand\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      result.push(callback(n, a));\n    });\n\n    return result;\n  };\n\n  /**\n   * Function filtering the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function (node, callback) {\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      if (callback(n, a)) result.push(n);\n    });\n\n    return result;\n  };\n\n  /**\n   * Function reducing the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function (node, callback, initialValue) {\n    if (arguments.length < 3)\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n\n    let accumulator = initialValue;\n\n    this[forEachName](node, (n, a) => {\n      accumulator = callback(accumulator, n, a);\n    });\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable neighbors callback iterator method to the\n * Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const capitalizedSingular = name[0].toUpperCase() + name.slice(1, -1);\n\n  const findName = 'find' + capitalizedSingular;\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${findName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return forEachNeighbor(\n      true,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if any of them\n   * matches the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + capitalizedSingular;\n\n  Class.prototype[someName] = function (node, callback) {\n    const found = this[findName](node, callback);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if all of them\n   * matche the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + capitalizedSingular;\n\n  Class.prototype[everyName] = function (node, callback) {\n    const found = this[findName](node, (n, a) => {\n      return !callback(n, a);\n    });\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborIteratorCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  const iteratorName = name.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over all the relevant neighbors.\n   *\n   * @param  {any}      node     - Target node.\n   * @return {Iterator}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[iteratorName] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${iteratorName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborIterator(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching every neighbor iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachNeighborIterationMethods(Graph) {\n  NEIGHBORS_ITERATION.forEach(description => {\n    attachNeighborArrayCreator(Graph, description);\n    attachForEachNeighbor(Graph, description);\n    attachFindNeighbor(Graph, description);\n    attachNeighborIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Adjacency Iteration\n * ===============================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's adjacency.\n */\n\n/**\n * Function iterating over a simple graph's adjacency using a callback.\n *\n * @param {boolean}  breakable         - Can we break?\n * @param {boolean}  assymetric        - Whether to emit undirected edges only once.\n * @param {boolean}  disconnectedNodes - Whether to emit disconnected nodes.\n * @param {Graph}    graph             - Target Graph instance.\n * @param {callback} function          - Iteration callback.\n */\nexport function forEachAdjacency(\n  breakable,\n  assymetric,\n  disconnectedNodes,\n  graph,\n  callback\n) {\n  const iterator = graph._nodes.values();\n\n  const type = graph.type;\n\n  let step, sourceData, neighbor, adj, edgeData, targetData, shouldBreak;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    let hasEdges = false;\n\n    sourceData = step.value;\n\n    if (type !== 'undirected') {\n      adj = sourceData.out;\n\n      for (neighbor in adj) {\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (type !== 'directed') {\n      adj = sourceData.undirected;\n\n      for (neighbor in adj) {\n        if (assymetric && sourceData.key > neighbor) continue;\n\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          if (targetData.key !== neighbor) targetData = edgeData.source;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (disconnectedNodes && !hasEdges) {\n      shouldBreak = callback(\n        sourceData.key,\n        null,\n        sourceData.attributes,\n        null,\n        null,\n        null,\n        null\n      );\n\n      if (breakable && shouldBreak) return null;\n    }\n  }\n\n  return;\n}\n","/**\n * Graphology Serialization Utilities\n * ===================================\n *\n * Collection of functions used by the graph serialization schemes.\n */\nimport {InvalidArgumentsGraphError} from './errors';\nimport {assign, isPlainObject, isEmpty} from './utils';\n\n/**\n * Formats internal node data into a serialized node.\n *\n * @param  {any}    key  - The node's key.\n * @param  {object} data - Internal node's data.\n * @return {array}       - The serialized node.\n */\nexport function serializeNode(key, data) {\n  const serialized = {key};\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  return serialized;\n}\n\n/**\n * Formats internal edge data into a serialized edge.\n *\n * @param  {string} type - The graph's type.\n * @param  {any}    key  - The edge's key.\n * @param  {object} data - Internal edge's data.\n * @return {array}       - The serialized edge.\n */\nexport function serializeEdge(type, key, data) {\n  const serialized = {\n    key,\n    source: data.source.key,\n    target: data.target.key\n  };\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  if (type === 'mixed' && data.undirected) serialized.undirected = true;\n\n  return serialized;\n}\n\n/**\n * Checks whether the given value is a serialized node.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedNode(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.'\n    );\n\n  if (!('key' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized node is missing its key.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n}\n\n/**\n * Checks whether the given value is a serialized edge.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedEdge(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.'\n    );\n\n  if (!('source' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its source.'\n    );\n\n  if (!('target' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its target.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n\n  if ('undirected' in value && typeof value.undirected !== 'boolean')\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.'\n    );\n}\n","/* eslint no-nested-ternary: 0 */\n/**\n * Graphology Reference Implementation\n * ====================================\n *\n * Reference implementation of the graphology specs.\n */\nimport {EventEmitter} from 'events';\nimport Iterator from 'obliterator/iterator';\nimport take from 'obliterator/take';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nimport {\n  MixedNodeData,\n  DirectedNodeData,\n  UndirectedNodeData,\n  EdgeData\n} from './data';\n\nimport attachNodeAttributesMethods from './attributes/nodes';\nimport attachEdgeAttributesMethods from './attributes/edges';\nimport attachEdgeIterationMethods from './iteration/edges';\nimport attachNeighborIterationMethods from './iteration/neighbors';\nimport {forEachAdjacency} from './iteration/adjacency';\n\nimport {\n  serializeNode,\n  serializeEdge,\n  validateSerializedNode,\n  validateSerializedEdge\n} from './serialization';\n\nimport {\n  assign,\n  getMatchingEdge,\n  isPlainObject,\n  privateProperty,\n  readOnlyProperty,\n  incrementalIdStartingFromRandomByte,\n  validateHints\n} from './utils';\n\n/**\n * Constants.\n */\nconst INSTANCE_ID = incrementalIdStartingFromRandomByte();\n\n/**\n * Enums.\n */\nconst TYPES = new Set(['directed', 'undirected', 'mixed']);\n\nconst EMITTER_PROPS = new Set([\n  'domain',\n  '_events',\n  '_eventsCount',\n  '_maxListeners'\n]);\n\nconst EDGE_ADD_METHODS = [\n  {\n    name: verb => `${verb}Edge`,\n    generateKey: true\n  },\n  {\n    name: verb => `${verb}DirectedEdge`,\n    generateKey: true,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdge`,\n    generateKey: true,\n    type: 'undirected'\n  },\n  {\n    name: verb => `${verb}EdgeWithKey`\n  },\n  {\n    name: verb => `${verb}DirectedEdgeWithKey`,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdgeWithKey`,\n    type: 'undirected'\n  }\n];\n\n/**\n * Default options.\n */\nconst DEFAULTS = {\n  allowSelfLoops: true,\n  multi: false,\n  type: 'mixed'\n};\n\n/**\n * Abstract functions used by the Graph class for various methods.\n */\n\n/**\n * Internal method used to add a node to the given graph\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {any}     node            - The node's key.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {NodeData}                - Created node data.\n */\nfunction addNode(graph, node, attributes) {\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.addNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // String coercion\n  node = '' + node;\n  attributes = attributes || {};\n\n  if (graph._nodes.has(node))\n    throw new UsageGraphError(\n      `Graph.addNode: the \"${node}\" node already exist in the graph.`\n    );\n\n  const data = new graph.NodeDataClass(node, attributes);\n\n  // Adding the node to internal register\n  graph._nodes.set(node, data);\n\n  // Emitting\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Same as the above but without sanity checks because we call this in contexts\n * where necessary checks were already done.\n */\nfunction unsafeAddNode(graph, node, attributes) {\n  const data = new graph.NodeDataClass(node, attributes);\n\n  graph._nodes.set(node, data);\n\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction addEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n  attributes = attributes || {};\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  const sourceData = graph._nodes.get(source),\n    targetData = graph._nodes.get(target);\n\n  if (!sourceData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: source node \"${source}\" not found.`\n    );\n\n  if (!targetData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: target node \"${target}\" not found.`\n    );\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  // Here, we might have a source / target collision\n  if (\n    !graph.multi &&\n    (undirected\n      ? typeof sourceData.undirected[target] !== 'undefined'\n      : typeof sourceData.out[target] !== 'undefined')\n  ) {\n    throw new UsageGraphError(\n      `Graph.${name}: an edge linking \"${source}\" to \"${target}\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`\n    );\n  }\n\n  // Storing some data\n  const edgeData = new EdgeData(\n    undirected,\n    edge,\n    sourceData,\n    targetData,\n    attributes\n  );\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return edge;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @param  {boolean} [asUpdater]       - Are we updating or merging?\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction mergeEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes,\n  asUpdater\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes) {\n    if (asUpdater) {\n      if (typeof attributes !== 'function')\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid updater function. Expecting a function but got \"${attributes}\"`\n        );\n    } else {\n      if (!isPlainObject(attributes))\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n        );\n    }\n  }\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n\n  let updater;\n\n  if (asUpdater) {\n    updater = attributes;\n    attributes = undefined;\n  }\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  let sourceData = graph._nodes.get(source);\n  let targetData = graph._nodes.get(target);\n  let edgeData;\n\n  // Do we need to handle duplicate?\n  let alreadyExistingEdgeData;\n\n  if (!mustGenerateKey) {\n    edgeData = graph._edges.get(edge);\n\n    if (edgeData) {\n      // Here, we need to ensure, if the user gave a key, that source & target\n      // are consistent\n      if (edgeData.source.key !== source || edgeData.target.key !== target) {\n        // If source or target inconsistent\n        if (\n          !undirected ||\n          edgeData.source.key !== target ||\n          edgeData.target.key !== source\n        ) {\n          // If directed, or source/target aren't flipped\n          throw new UsageGraphError(\n            `Graph.${name}: inconsistency detected when attempting to merge the \"${edge}\" edge with \"${source}\" source & \"${target}\" target vs. (\"${edgeData.source.key}\", \"${edgeData.target.key}\").`\n          );\n        }\n      }\n\n      alreadyExistingEdgeData = edgeData;\n    }\n  }\n\n  // Here, we might have a source / target collision\n  if (!alreadyExistingEdgeData && !graph.multi && sourceData) {\n    alreadyExistingEdgeData = undirected\n      ? sourceData.undirected[target]\n      : sourceData.out[target];\n  }\n\n  // Handling duplicates\n  if (alreadyExistingEdgeData) {\n    const info = [alreadyExistingEdgeData.key, false, false, false];\n\n    // We can skip the attribute merging part if the user did not provide them\n    if (asUpdater ? !updater : !attributes) return info;\n\n    // Updating the attributes\n    if (asUpdater) {\n      const oldAttributes = alreadyExistingEdgeData.attributes;\n      alreadyExistingEdgeData.attributes = updater(oldAttributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'replace',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes\n      });\n    }\n\n    // Merging the attributes\n    else {\n      assign(alreadyExistingEdgeData.attributes, attributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'merge',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes,\n        data: attributes\n      });\n    }\n\n    return info;\n  }\n\n  attributes = attributes || {};\n\n  if (asUpdater && updater) attributes = updater(attributes);\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  let sourceWasAdded = false;\n  let targetWasAdded = false;\n\n  if (!sourceData) {\n    sourceData = unsafeAddNode(graph, source, {});\n    sourceWasAdded = true;\n\n    if (source === target) {\n      targetData = sourceData;\n      targetWasAdded = true;\n    }\n  }\n  if (!targetData) {\n    targetData = unsafeAddNode(graph, target, {});\n    targetWasAdded = true;\n  }\n\n  // Storing some data\n  edgeData = new EdgeData(undirected, edge, sourceData, targetData, attributes);\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return [edge, true, sourceWasAdded, targetWasAdded];\n}\n\n/**\n * Internal method used to drop an edge.\n *\n * @param  {Graph}    graph    - Target graph.\n * @param  {EdgeData} edgeData - Data of the edge to drop.\n */\nfunction dropEdgeFromData(graph, edgeData) {\n  // Dropping the edge from the register\n  graph._edges.delete(edgeData.key);\n\n  // Updating related degrees\n  const {source: sourceData, target: targetData, attributes} = edgeData;\n\n  const undirected = edgeData.undirected;\n\n  const isSelfLoop = sourceData === targetData;\n\n  if (undirected) {\n    sourceData.undirectedDegree--;\n    targetData.undirectedDegree--;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops--;\n      graph._undirectedSelfLoopCount--;\n    }\n  } else {\n    sourceData.outDegree--;\n    targetData.inDegree--;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops--;\n      graph._directedSelfLoopCount--;\n    }\n  }\n\n  // Clearing index\n  if (graph.multi) edgeData.detachMulti();\n  else edgeData.detach();\n\n  if (undirected) graph._undirectedSize--;\n  else graph._directedSize--;\n\n  // Emitting\n  graph.emit('edgeDropped', {\n    key: edgeData.key,\n    attributes,\n    source: sourceData.key,\n    target: targetData.key,\n    undirected\n  });\n}\n\n/**\n * Graph class\n *\n * @constructor\n * @param  {object}  [options] - Options:\n * @param  {boolean}   [allowSelfLoops] - Allow self loops?\n * @param  {string}    [type]           - Type of the graph.\n * @param  {boolean}   [map]            - Allow references as keys?\n * @param  {boolean}   [multi]          - Allow parallel edges?\n *\n * @throws {Error} - Will throw if the arguments are not valid.\n */\nexport default class Graph extends EventEmitter {\n  constructor(options) {\n    super();\n\n    //-- Solving options\n    options = assign({}, DEFAULTS, options);\n\n    // Enforcing options validity\n    if (typeof options.multi !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"${options.multi}\".`\n      );\n\n    if (!TYPES.has(options.type))\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'type' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"${options.type}\".`\n      );\n\n    if (typeof options.allowSelfLoops !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"${options.allowSelfLoops}\".`\n      );\n\n    //-- Private properties\n\n    // Utilities\n    const NodeDataClass =\n      options.type === 'mixed'\n        ? MixedNodeData\n        : options.type === 'directed'\n        ? DirectedNodeData\n        : UndirectedNodeData;\n\n    privateProperty(this, 'NodeDataClass', NodeDataClass);\n\n    // Internal edge key generator\n\n    // NOTE: this internal generator produce keys that are strings\n    // composed of a weird prefix, an incremental instance id starting from\n    // a random byte and finally an internal instance incremental id.\n    // All this to avoid intra-frame and cross-frame adversarial inputs\n    // that can force a single #.addEdge call to degenerate into a O(n)\n    // available key search loop.\n\n    // It also ensures that automatically generated edge keys are unlikely\n    // to produce collisions with arbitrary keys given by users.\n    const instancePrefix = 'geid_' + INSTANCE_ID() + '_';\n    let edgeId = 0;\n\n    const edgeKeyGenerator = () => {\n      let availableEdgeKey;\n\n      do {\n        availableEdgeKey = instancePrefix + edgeId++;\n      } while (this._edges.has(availableEdgeKey));\n\n      return availableEdgeKey;\n    };\n\n    // Indexes\n    privateProperty(this, '_attributes', {});\n    privateProperty(this, '_nodes', new Map());\n    privateProperty(this, '_edges', new Map());\n    privateProperty(this, '_directedSize', 0);\n    privateProperty(this, '_undirectedSize', 0);\n    privateProperty(this, '_directedSelfLoopCount', 0);\n    privateProperty(this, '_undirectedSelfLoopCount', 0);\n    privateProperty(this, '_edgeKeyGenerator', edgeKeyGenerator);\n\n    // Options\n    privateProperty(this, '_options', options);\n\n    // Emitter properties\n    EMITTER_PROPS.forEach(prop => privateProperty(this, prop, this[prop]));\n\n    //-- Properties readers\n    readOnlyProperty(this, 'order', () => this._nodes.size);\n    readOnlyProperty(this, 'size', () => this._edges.size);\n    readOnlyProperty(this, 'directedSize', () => this._directedSize);\n    readOnlyProperty(this, 'undirectedSize', () => this._undirectedSize);\n    readOnlyProperty(\n      this,\n      'selfLoopCount',\n      () => this._directedSelfLoopCount + this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'directedSelfLoopCount',\n      () => this._directedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'undirectedSelfLoopCount',\n      () => this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(this, 'multi', this._options.multi);\n    readOnlyProperty(this, 'type', this._options.type);\n    readOnlyProperty(this, 'allowSelfLoops', this._options.allowSelfLoops);\n    readOnlyProperty(this, 'implementation', () => 'graphology');\n  }\n\n  _resetInstanceCounters() {\n    this._directedSize = 0;\n    this._undirectedSize = 0;\n    this._directedSelfLoopCount = 0;\n    this._undirectedSelfLoopCount = 0;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Read\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning whether the given node is found in the graph.\n   *\n   * @param  {any}     node - The node.\n   * @return {boolean}\n   */\n  hasNode(node) {\n    return this._nodes.has('' + node);\n  }\n\n  /**\n   * Method returning whether the given directed edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasDirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'undirected') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && !edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.out.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given undirected edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasUndirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'directed') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.undirected.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasEdge(source, target) {\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      return this._edges.has(edge);\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return (\n        (typeof nodeData.out !== 'undefined' &&\n          nodeData.out.hasOwnProperty(target)) ||\n        (typeof nodeData.undirected !== 'undefined' &&\n          nodeData.undirected.hasOwnProperty(target))\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning the edge matching source & target in a directed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  directedEdge(source, target) {\n    if (this.type === 'undirected') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData = (sourceData.out && sourceData.out[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a undirected fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  undirectedEdge(source, target) {\n    if (this.type === 'directed') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.undirected && sourceData.undirected[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a mixed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  edge(source, target) {\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]) ||\n      undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning whether two nodes are directed neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areDirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areDirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in || neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are out neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are in neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in;\n  }\n\n  /**\n   * Method returning whether two nodes are undirected neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areUndirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areUndirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return false;\n\n    return neighbor in nodeData.undirected;\n  }\n\n  /**\n   * Method returning whether two nodes are neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in || neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are inbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are outbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning the given node's in degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree;\n  }\n\n  /**\n   * Method returning the given node's out degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's undirected degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree;\n  }\n\n  /**\n   * Method returning the given node's inbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's outbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's in degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's out degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree - nodeData.directedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's undirected degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree - nodeData.undirectedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's inbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's outbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n      loops += nodeData.directedLoops * 2;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given edge's source.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's source.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  source(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.source: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key;\n  }\n\n  /**\n   * Method returning the given edge's target.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's target.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  target(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.target: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.target.key;\n  }\n\n  /**\n   * Method returning the given edge's extremities.\n   *\n   * @param  {any}   edge - The edge's key.\n   * @return {array}      - The edge's extremities.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  extremities(edge) {\n    edge = '' + edge;\n\n    const edgeData = this._edges.get(edge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.extremities: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return [edgeData.source.key, edgeData.target.key];\n  }\n\n  /**\n   * Given a node & an edge, returns the other extremity of the edge.\n   *\n   * @param  {any}   node - The node's key.\n   * @param  {any}   edge - The edge's key.\n   * @return {any}        - The related node.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph or if the\n   *                   edge & node are not related.\n   */\n  opposite(node, edge) {\n    node = '' + node;\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.opposite: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    const source = data.source.key;\n    const target = data.target.key;\n\n    if (node === source) return target;\n    if (node === target) return source;\n\n    throw new NotFoundGraphError(\n      `Graph.opposite: the \"${node}\" node is not attached to the \"${edge}\" edge (${source}, ${target}).`\n    );\n  }\n\n  /**\n   * Returns whether the given edge has the given node as extremity.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @param  {any}     node - The node's key.\n   * @return {boolean}      - The related node.\n   *\n   * @throws {Error} - Will throw if either the node or the edge isn't in the graph.\n   */\n  hasExtremity(edge, node) {\n    edge = '' + edge;\n    node = '' + node;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.hasExtremity: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key === node || data.target.key === node;\n  }\n\n  /**\n   * Method returning whether the given edge is undirected.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isUndirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isUndirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is directed.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isDirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isDirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return !data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is a self loop.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isSelfLoop(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isSelfLoop: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source === data.target;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Mutation\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to add a node to the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   *\n   * @throws {Error} - Will throw if the given node already exist.\n   * @throws {Error} - Will throw if the given attributes are not an object.\n   */\n  addNode(node, attributes) {\n    const nodeData = addNode(this, node, attributes);\n\n    return nodeData.key;\n  }\n\n  /**\n   * Method used to merge a node into the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   */\n  mergeNode(node, attributes) {\n    if (attributes && !isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.mergeNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n    attributes = attributes || {};\n\n    // If the node already exists, we merge the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (attributes) {\n        assign(data.attributes, attributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'merge',\n          key: node,\n          attributes: data.attributes,\n          data: attributes\n        });\n      }\n      return [node, false];\n    }\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to add a node if it does not exist in the graph or else to\n   * update its attributes using a function.\n   *\n   * @param  {any}      node      - The node.\n   * @param  {function} [updater] - Optional updater function.\n   * @return {any}                - The node.\n   */\n  updateNode(node, updater) {\n    if (updater && typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.updateNode: invalid updater function. Expecting a function but got \"${updater}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n\n    // If the node already exists, we update the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (updater) {\n        const oldAttributes = data.attributes;\n        data.attributes = updater(oldAttributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'replace',\n          key: node,\n          attributes: data.attributes\n        });\n      }\n      return [node, false];\n    }\n\n    const attributes = updater ? updater({}) : {};\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to drop a single node & all its attached edges from the graph.\n   *\n   * @param  {any}    node - The node.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the node doesn't exist.\n   */\n  dropNode(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.dropNode: could not find the \"${node}\" node in the graph.`\n      );\n\n    let edgeData;\n\n    // Removing attached edges\n    // NOTE: we could be faster here, but this is such a pain to maintain\n    if (this.type !== 'undirected') {\n      for (const neighbor in nodeData.out) {\n        edgeData = nodeData.out[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n\n      for (const neighbor in nodeData.in) {\n        edgeData = nodeData.in[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (this.type !== 'directed') {\n      for (const neighbor in nodeData.undirected) {\n        edgeData = nodeData.undirected[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    // Dropping the node from the register\n    this._nodes.delete(node);\n\n    // Emitting\n    this.emit('nodeDropped', {\n      key: node,\n      attributes: nodeData.attributes\n    });\n  }\n\n  /**\n   * Method used to drop a single edge from the graph.\n   *\n   * Arity 1:\n   * @param  {any}    edge - The edge.\n   *\n   * Arity 2:\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropEdge(edge) {\n    let edgeData;\n\n    if (arguments.length > 1) {\n      const source = '' + arguments[0];\n      const target = '' + arguments[1];\n\n      edgeData = getMatchingEdge(this, source, target, this.type);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${source}\" -> \"${target}\" edge in the graph.`\n        );\n    } else {\n      edge = '' + edge;\n\n      edgeData = this._edges.get(edge);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${edge}\" edge in the graph.`\n        );\n    }\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single directed edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropDirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const edgeData = getMatchingEdge(this, source, target, 'directed');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropDirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single undirected edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropUndirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    const edgeData = getMatchingEdge(this, source, target, 'undirected');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropUndirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to remove every edge & every node from the graph.\n   *\n   * @return {Graph}\n   */\n  clear() {\n    // Clearing edges\n    this._edges.clear();\n\n    // Clearing nodes\n    this._nodes.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('cleared');\n  }\n\n  /**\n   * Method used to remove every edge from the graph.\n   *\n   * @return {Graph}\n   */\n  clearEdges() {\n    // Clearing structure index\n    const iterator = this._nodes.values();\n\n    let step;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      step.value.clear();\n    }\n\n    // Clearing edges\n    this._edges.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('edgesCleared');\n  }\n\n  /**---------------------------------------------------------------------------\n   * Attributes-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning the desired graph's attribute.\n   *\n   * @param  {string} name - Name of the attribute.\n   * @return {any}\n   */\n  getAttribute(name) {\n    return this._attributes[name];\n  }\n\n  /**\n   * Method returning the graph's attributes.\n   *\n   * @return {object}\n   */\n  getAttributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Method returning whether the graph has the desired attribute.\n   *\n   * @param  {string}  name - Name of the attribute.\n   * @return {boolean}\n   */\n  hasAttribute(name) {\n    return this._attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * Method setting a value for the desired graph's attribute.\n   *\n   * @param  {string}  name  - Name of the attribute.\n   * @param  {any}     value - Value for the attribute.\n   * @return {Graph}\n   */\n  setAttribute(name, value) {\n    this._attributes[name] = value;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method using a function to update the desired graph's attribute's value.\n   *\n   * @param  {string}   name    - Name of the attribute.\n   * @param  {function} updater - Function use to update the attribute's value.\n   * @return {Graph}\n   */\n  updateAttribute(name, updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttribute: updater should be a function.'\n      );\n\n    const value = this._attributes[name];\n\n    this._attributes[name] = updater(value);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method removing the desired graph's attribute.\n   *\n   * @param  {string} name  - Name of the attribute.\n   * @return {Graph}\n   */\n  removeAttribute(name) {\n    delete this._attributes[name];\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'remove',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method replacing the graph's attributes.\n   *\n   * @param  {object} attributes - New attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  replaceAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.replaceAttributes: provided attributes are not a plain object.'\n      );\n\n    this._attributes = attributes;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'replace',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method merging the graph's attributes.\n   *\n   * @param  {object} attributes - Attributes to merge.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  mergeAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.mergeAttributes: provided attributes are not a plain object.'\n      );\n\n    assign(this._attributes, attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'merge',\n      attributes: this._attributes,\n      data: attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method updating the graph's attributes.\n   *\n   * @param  {function} updater - Function used to update the attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given updater is not a function.\n   */\n  updateAttributes(updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttributes: provided updater is not a function.'\n      );\n\n    this._attributes = updater(this._attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'update',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method used to update each node's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachNodeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      nodeData.attributes = updater(nodeData.key, nodeData.attributes);\n    }\n\n    this.emit('eachNodeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**\n   * Method used to update each edge's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachEdgeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._edges.values();\n\n    let step, edgeData, sourceData, targetData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n      sourceData = edgeData.source;\n      targetData = edgeData.target;\n\n      edgeData.attributes = updater(\n        edgeData.key,\n        edgeData.attributes,\n        sourceData.key,\n        targetData.key,\n        sourceData.attributes,\n        targetData.attributes,\n        edgeData.undirected\n      );\n    }\n\n    this.emit('eachEdgeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Iteration-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method iterating over the graph's adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, false, this, callback);\n  }\n  forEachAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, true, this, callback);\n  }\n\n  /**\n   * Method iterating over the graph's assymetric adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAssymetricAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, false, this, callback);\n  }\n  forEachAssymetricAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, true, this, callback);\n  }\n\n  /**\n   * Method returning the list of the graph's nodes.\n   *\n   * @return {array} - The nodes.\n   */\n  nodes() {\n    if (typeof Array.from === 'function') return Array.from(this._nodes.keys());\n\n    return take(this._nodes.keys(), this._nodes.size);\n  }\n\n  /**\n   * Method iterating over the graph's nodes using the given callback.\n   *\n   * @param  {function}  callback - Callback (key, attributes, index).\n   */\n  forEachNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      callback(nodeData.key, nodeData.attributes);\n    }\n  }\n\n  /**\n   * Method iterating attempting to find a node matching the given predicate\n   * function.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  findNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.findNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return nodeData.key;\n    }\n\n    return;\n  }\n\n  /**\n   * Method mapping nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  mapNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.mapNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = new Array(this.order);\n    let i = 0;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      result[i++] = callback(nodeData.key, nodeData.attributes);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method returning whether some node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  someNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.someNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether all node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  everyNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.everyNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (!callback(nodeData.key, nodeData.attributes)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Method filtering nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  filterNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.filterNodes: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = [];\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes))\n        result.push(nodeData.key);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method reducing nodes.\n   *\n   * @param  {function}  callback - Callback (accumulator, key, attributes).\n   */\n  reduceNodes(callback, initialValue) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: expecting a callback.'\n      );\n\n    if (arguments.length < 2)\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.'\n      );\n\n    let accumulator = initialValue;\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      accumulator = callback(accumulator, nodeData.key, nodeData.attributes);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * Method returning an iterator over the graph's node entries.\n   *\n   * @return {Iterator}\n   */\n  nodeEntries() {\n    const iterator = this._nodes.values();\n\n    return new Iterator(() => {\n      const step = iterator.next();\n\n      if (step.done) return step;\n\n      const data = step.value;\n\n      return {\n        value: {node: data.key, attributes: data.attributes},\n        done: false\n      };\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Serialization\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to export the whole graph.\n   *\n   * @return {object} - The serialized graph.\n   */\n  export() {\n    const nodes = new Array(this._nodes.size);\n\n    let i = 0;\n\n    this._nodes.forEach((data, key) => {\n      nodes[i++] = serializeNode(key, data);\n    });\n\n    const edges = new Array(this._edges.size);\n\n    i = 0;\n\n    this._edges.forEach((data, key) => {\n      edges[i++] = serializeEdge(this.type, key, data);\n    });\n\n    return {\n      options: {\n        type: this.type,\n        multi: this.multi,\n        allowSelfLoops: this.allowSelfLoops\n      },\n      attributes: this.getAttributes(),\n      nodes,\n      edges\n    };\n  }\n\n  /**\n   * Method used to import a serialized graph.\n   *\n   * @param  {object|Graph} data  - The serialized graph.\n   * @param  {boolean}      merge - Whether to merge data.\n   * @return {Graph}              - Returns itself for chaining.\n   */\n  import(data, merge = false) {\n    // Importing a Graph instance directly\n    if (data instanceof Graph) {\n      // Nodes\n      data.forEachNode((n, a) => {\n        if (merge) this.mergeNode(n, a);\n        else this.addNode(n, a);\n      });\n\n      // Edges\n      data.forEachEdge((e, a, s, t, _sa, _ta, u) => {\n        if (merge) {\n          if (u) this.mergeUndirectedEdgeWithKey(e, s, t, a);\n          else this.mergeDirectedEdgeWithKey(e, s, t, a);\n        } else {\n          if (u) this.addUndirectedEdgeWithKey(e, s, t, a);\n          else this.addDirectedEdgeWithKey(e, s, t, a);\n        }\n      });\n\n      return this;\n    }\n\n    // Importing a serialized graph\n    if (!isPlainObject(data))\n      throw new InvalidArgumentsGraphError(\n        'Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.'\n      );\n\n    if (data.attributes) {\n      if (!isPlainObject(data.attributes))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid attributes. Expecting a plain object.'\n        );\n\n      if (merge) this.mergeAttributes(data.attributes);\n      else this.replaceAttributes(data.attributes);\n    }\n\n    let i, l, list, node, edge;\n\n    if (data.nodes) {\n      list = data.nodes;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid nodes. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        node = list[i];\n\n        // Validating\n        validateSerializedNode(node);\n\n        // Adding the node\n        const {key, attributes} = node;\n\n        if (merge) this.mergeNode(key, attributes);\n        else this.addNode(key, attributes);\n      }\n    }\n\n    if (data.edges) {\n      let undirectedByDefault = false;\n\n      if (this.type === 'undirected') {\n        undirectedByDefault = true;\n      }\n\n      list = data.edges;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid edges. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        edge = list[i];\n\n        // Validating\n        validateSerializedEdge(edge);\n\n        // Adding the edge\n        const {\n          source,\n          target,\n          attributes,\n          undirected = undirectedByDefault\n        } = edge;\n\n        let method;\n\n        if ('key' in edge) {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdgeWithKey\n              : this.mergeDirectedEdgeWithKey\n            : undirected\n            ? this.addUndirectedEdgeWithKey\n            : this.addDirectedEdgeWithKey;\n\n          method.call(this, edge.key, source, target, attributes);\n        } else {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdge\n              : this.mergeDirectedEdge\n            : undirected\n            ? this.addUndirectedEdge\n            : this.addDirectedEdge;\n\n          method.call(this, source, target, attributes);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Utils\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning a null copy of the graph, i.e. a graph without nodes\n   * & edges but with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The null copy.\n   */\n  nullCopy(options) {\n    const graph = new Graph(assign({}, this._options, options));\n    graph.replaceAttributes(assign({}, this.getAttributes()));\n    return graph;\n  }\n\n  /**\n   * Method returning an empty copy of the graph, i.e. a graph without edges but\n   * with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The empty copy.\n   */\n  emptyCopy(options) {\n    const graph = this.nullCopy(options);\n\n    this._nodes.forEach((nodeData, key) => {\n      const attributes = assign({}, nodeData.attributes);\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      nodeData = new graph.NodeDataClass(key, attributes);\n      graph._nodes.set(key, nodeData);\n    });\n\n    return graph;\n  }\n\n  /**\n   * Method returning an exact copy of the graph.\n   *\n   * @param  {object} options - Upgrade options.\n   * @return {Graph}          - The copy.\n   */\n  copy(options) {\n    options = options || {};\n\n    if (\n      typeof options.type === 'string' &&\n      options.type !== this.type &&\n      options.type !== 'mixed'\n    )\n      throw new UsageGraphError(\n        `Graph.copy: cannot create an incompatible copy from \"${this.type}\" type to \"${options.type}\" because this would mean losing information about the current graph.`\n      );\n\n    if (\n      typeof options.multi === 'boolean' &&\n      options.multi !== this.multi &&\n      options.multi !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.'\n      );\n\n    if (\n      typeof options.allowSelfLoops === 'boolean' &&\n      options.allowSelfLoops !== this.allowSelfLoops &&\n      options.allowSelfLoops !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.'\n      );\n\n    const graph = this.emptyCopy(options);\n\n    const iterator = this._edges.values();\n\n    let step, edgeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      addEdge(\n        graph,\n        'copy',\n        false,\n        edgeData.undirected,\n        edgeData.key,\n        edgeData.source.key,\n        edgeData.target.key,\n        assign({}, edgeData.attributes)\n      );\n    }\n\n    return graph;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Known methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used by JavaScript to perform JSON serialization.\n   *\n   * @return {object} - The serialized graph.\n   */\n  toJSON() {\n    return this.export();\n  }\n\n  /**\n   * Method returning [object Graph].\n   */\n  toString() {\n    return '[object Graph]';\n  }\n\n  /**\n   * Method used internally by node's console to display a custom object.\n   *\n   * @return {object} - Formatted object representation of the graph.\n   */\n  inspect() {\n    const nodes = {};\n    this._nodes.forEach((data, key) => {\n      nodes[key] = data.attributes;\n    });\n\n    const edges = {},\n      multiIndex = {};\n\n    this._edges.forEach((data, key) => {\n      const direction = data.undirected ? '--' : '->';\n\n      let label = '';\n\n      let source = data.source.key;\n      let target = data.target.key;\n      let tmp;\n\n      if (data.undirected && source > target) {\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      const desc = `(${source})${direction}(${target})`;\n\n      if (!key.startsWith('geid_')) {\n        label += `[${key}]: `;\n      } else if (this.multi) {\n        if (typeof multiIndex[desc] === 'undefined') {\n          multiIndex[desc] = 0;\n        } else {\n          multiIndex[desc]++;\n        }\n\n        label += `${multiIndex[desc]}. `;\n      }\n\n      label += desc;\n\n      edges[label] = data.attributes;\n    });\n\n    const dummy = {};\n\n    for (const k in this) {\n      if (\n        this.hasOwnProperty(k) &&\n        !EMITTER_PROPS.has(k) &&\n        typeof this[k] !== 'function' &&\n        typeof k !== 'symbol'\n      )\n        dummy[k] = this[k];\n    }\n\n    dummy.attributes = this._attributes;\n    dummy.nodes = nodes;\n    dummy.edges = edges;\n\n    privateProperty(dummy, 'constructor', this.constructor);\n\n    return dummy;\n  }\n}\n\n/**\n * Attaching methods to the prototype.\n *\n * Here, we are attaching a wide variety of methods to the Graph class'\n * prototype when those are very numerous and when their creation is\n * abstracted.\n */\n\n/**\n * Attaching custom inspect method for node >= 10.\n */\nif (typeof Symbol !== 'undefined')\n  Graph.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    Graph.prototype.inspect;\n\n/**\n * Related to edge addition.\n */\nEDGE_ADD_METHODS.forEach(method => {\n  ['add', 'merge', 'update'].forEach(verb => {\n    const name = method.name(verb);\n    const fn = verb === 'add' ? addEdge : mergeEdge;\n\n    if (method.generateKey) {\n      Graph.prototype[name] = function (source, target, attributes) {\n        return fn(\n          this,\n          name,\n          true,\n          (method.type || this.type) === 'undirected',\n          null,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    } else {\n      Graph.prototype[name] = function (edge, source, target, attributes) {\n        return fn(\n          this,\n          name,\n          false,\n          (method.type || this.type) === 'undirected',\n          edge,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    }\n  });\n});\n\n/**\n * Attributes-related.\n */\nattachNodeAttributesMethods(Graph);\nattachEdgeAttributesMethods(Graph);\n\n/**\n * Edge iteration-related.\n */\nattachEdgeIterationMethods(Graph);\n\n/**\n * Neighbor iteration-related.\n */\nattachNeighborIterationMethods(Graph);\n","/**\n * Graphology Helper Classes\n * ==========================\n *\n * Building some higher-order classes instantiating the graph with\n * predefinite options.\n */\nimport {assign} from './utils';\nimport Graph from './graph';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\n/**\n * Alternative constructors.\n */\nclass DirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass UndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiDirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiUndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\n\n/**\n * Attaching static #.from method to each of the constructors.\n */\nfunction attachStaticFromMethod(Class) {\n  /**\n   * Builds a graph from serialized data or another graph's data.\n   *\n   * @param  {Graph|SerializedGraph} data      - Hydratation data.\n   * @param  {object}                [options] - Options.\n   * @return {Class}\n   */\n  Class.from = function (data, options) {\n    // Merging given options with serialized ones\n    const finalOptions = assign({}, data.options, options);\n\n    const instance = new Class(finalOptions);\n    instance.import(data);\n\n    return instance;\n  };\n}\n\nattachStaticFromMethod(Graph);\nattachStaticFromMethod(DirectedGraph);\nattachStaticFromMethod(UndirectedGraph);\nattachStaticFromMethod(MultiGraph);\nattachStaticFromMethod(MultiDirectedGraph);\nattachStaticFromMethod(MultiUndirectedGraph);\n\nGraph.Graph = Graph;\nGraph.DirectedGraph = DirectedGraph;\nGraph.UndirectedGraph = UndirectedGraph;\nGraph.MultiGraph = MultiGraph;\nGraph.MultiDirectedGraph = MultiDirectedGraph;\nGraph.MultiUndirectedGraph = MultiUndirectedGraph;\n\nGraph.InvalidArgumentsGraphError = InvalidArgumentsGraphError;\nGraph.NotFoundGraphError = NotFoundGraphError;\nGraph.UsageGraphError = UsageGraphError;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.minRatio = null;\n        _this.maxRatio = null;\n        _this.nextFrame = null;\n        _this.previousState = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera has the given state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.hasState = function (state) {\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        if (!state)\n            return null;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check minRatio and maxRatio values.\n     *\n     * @param ratio\n     * @return {number}\n     */\n    Camera.prototype.getBoundedRatio = function (ratio) {\n        var r = ratio;\n        if (typeof this.minRatio === \"number\")\n            r = Math.max(r, this.minRatio);\n        if (typeof this.maxRatio === \"number\")\n            r = Math.min(r, this.maxRatio);\n        return r;\n    };\n    /**\n     * Method used to check various things to return a legit state candidate.\n     *\n     * @param state\n     * @return {object}\n     */\n    Camera.prototype.validateState = function (state) {\n        var validatedState = {};\n        if (typeof state.x === \"number\")\n            validatedState.x = state.x;\n        if (typeof state.y === \"number\")\n            validatedState.y = state.y;\n        if (typeof state.angle === \"number\")\n            validatedState.angle = state.angle;\n        if (typeof state.ratio === \"number\")\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\n        return validatedState;\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        var validState = this.validateState(state);\n        if (typeof validState.x === \"number\")\n            this.x = validState.x;\n        if (typeof validState.y === \"number\")\n            this.y = validState.y;\n        if (typeof validState.angle === \"number\")\n            this.angle = validState.angle;\n        if (typeof validState.ratio === \"number\")\n            this.ratio = validState.ratio;\n        // Emitting\n        if (!this.hasState(this.previousState))\n            this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var validState = this.validateState(state);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(validState);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (typeof validState.x === \"number\")\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n            if (typeof validState.y === \"number\")\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n            if (typeof validState.angle === \"number\")\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n            if (typeof validState.ratio === \"number\")\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\n        };\n        if (this.nextFrame) {\n            (0, utils_1.cancelFrame)(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(types_1.TypedEventEmitter));\nexports.default = Camera;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar types_1 = require(\"../../types\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n    var bbox = dom.getBoundingClientRect();\n    return {\n        x: e.clientX - bbox.left,\n        y: e.clientY - bbox.top,\n    };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {\n            res.sigmaDefaultPrevented = true;\n        }, original: e });\n    return res;\n}\nexports.getMouseCoords = getMouseCoords;\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });\n}\nexports.getWheelCoords = getWheelCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n    var arr = [];\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\n        arr.push(touches[i]);\n    return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e   - A touch event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, dom) {\n    return {\n        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),\n        original: e,\n    };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n    if (typeof e.deltaY !== \"undefined\")\n        return (e.deltaY * -3) / 360;\n    if (typeof e.detail !== \"undefined\")\n        return e.detail / -9;\n    throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */ (function (_super) {\n    __extends(Captor, _super);\n    function Captor(container, renderer) {\n        var _this = _super.call(this) || this;\n        // Properties\n        _this.container = container;\n        _this.renderer = renderer;\n        return _this;\n    }\n    return Captor;\n}(types_1.TypedEventEmitter));\nexports.default = Captor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 100;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */ (function (_super) {\n    __extends(MouseCaptor, _super);\n    function MouseCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        // State\n        _this.enabled = true;\n        _this.draggedEvents = 0;\n        _this.downStartTime = null;\n        _this.lastMouseX = null;\n        _this.lastMouseY = null;\n        _this.isMouseDown = false;\n        _this.isMoving = false;\n        _this.movingTimeout = null;\n        _this.startCameraState = null;\n        _this.clicks = 0;\n        _this.doubleClickTimeout = null;\n        _this.currentWheelDirection = 0;\n        // Binding methods\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        _this.handleWheel = _this.handleWheel.bind(_this);\n        _this.handleOut = _this.handleOut.bind(_this);\n        // Binding events\n        container.addEventListener(\"click\", _this.handleClick, false);\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\n        document.addEventListener(\"mousemove\", _this.handleMove, false);\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\n        return _this;\n    }\n    MouseCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"click\", this.handleClick);\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\n        container.removeEventListener(\"mousedown\", this.handleDown);\n        container.removeEventListener(\"wheel\", this.handleWheel);\n        container.removeEventListener(\"mouseout\", this.handleOut);\n        document.removeEventListener(\"mousemove\", this.handleMove);\n        document.removeEventListener(\"mouseup\", this.handleUp);\n    };\n    MouseCaptor.prototype.handleClick = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.clicks++;\n        if (this.clicks === 2) {\n            this.clicks = 0;\n            if (typeof this.doubleClickTimeout === \"number\") {\n                clearTimeout(this.doubleClickTimeout);\n                this.doubleClickTimeout = null;\n            }\n            return this.handleDoubleClick(e);\n        }\n        setTimeout(function () {\n            _this.clicks = 0;\n            _this.doubleClickTimeout = null;\n        }, DOUBLE_CLICK_TIMEOUT);\n        // NOTE: this is here to prevent click events on drag\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\n            this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleRightClick = function (e) {\n        if (!this.enabled)\n            return;\n        this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        this.emit(\"doubleClick\", mouseCoords);\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // default behavior\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticInOut\",\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\n        });\n    };\n    MouseCaptor.prototype.handleDown = function (e) {\n        if (!this.enabled)\n            return;\n        this.startCameraState = this.renderer.getCamera().getState();\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n        this.lastMouseX = x;\n        this.lastMouseY = y;\n        this.draggedEvents = 0;\n        this.downStartTime = Date.now();\n        // TODO: dispatch events\n        // Left button pressed\n        this.isMouseDown = true;\n        this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleUp = function (e) {\n        var _this = this;\n        if (!this.enabled || !this.isMouseDown)\n            return;\n        var camera = this.renderer.getCamera();\n        this.isMouseDown = false;\n        if (typeof this.movingTimeout === \"number\") {\n            clearTimeout(this.movingTimeout);\n            this.movingTimeout = null;\n        }\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n        if (this.isMoving) {\n            camera.animate({\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n            }, {\n                duration: MOUSE_INERTIA_DURATION,\n                easing: \"quadraticOut\",\n            });\n        }\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n            camera.setState({\n                x: cameraState.x,\n                y: cameraState.y,\n            });\n        }\n        this.isMoving = false;\n        setTimeout(function () {\n            _this.draggedEvents = 0;\n            _this.renderer.refresh();\n        }, 0);\n        this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleMove = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n        // a drag-and-drop effect that works even when the mouse is out of the\n        // container:\n        this.emit(\"mousemovebody\", mouseCoords);\n        // Only trigger the \"mousemove\" event when the mouse is actually hovering\n        // the container, to avoid weirdly hovering nodes and/or edges when the\n        // mouse is not hover the container:\n        if (e.target === this.container) {\n            this.emit(\"mousemove\", mouseCoords);\n        }\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n        // stage while the mouse is not hover the container:\n        if (this.isMouseDown) {\n            this.isMoving = true;\n            this.draggedEvents++;\n            if (typeof this.movingTimeout === \"number\") {\n                clearTimeout(this.movingTimeout);\n            }\n            this.movingTimeout = window.setTimeout(function () {\n                _this.movingTimeout = null;\n                _this.isMoving = false;\n            }, DRAG_TIMEOUT);\n            var camera = this.renderer.getCamera();\n            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;\n            var lastMouse = this.renderer.viewportToFramedGraph({\n                x: this.lastMouseX,\n                y: this.lastMouseY,\n            });\n            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\n            var cameraState = camera.getState();\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\n            camera.setState({ x: x, y: y });\n            this.lastMouseX = eX;\n            this.lastMouseY = eY;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    MouseCaptor.prototype.handleWheel = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var delta = (0, captor_1.getWheelDelta)(e);\n        if (!delta)\n            return;\n        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\n        this.emit(\"wheel\", wheelCoords);\n        if (wheelCoords.sigmaDefaultPrevented)\n            return;\n        // Default behavior\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\n        var wheelDirection = delta > 0 ? 1 : -1;\n        var now = Date.now();\n        // Cancel events that are too close too each other and in the same direction:\n        if (this.currentWheelDirection === wheelDirection &&\n            this.lastWheelTriggerTime &&\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n            return;\n        }\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticOut\",\n            duration: MOUSE_ZOOM_DURATION,\n        }, function () {\n            _this.currentWheelDirection = 0;\n        });\n        this.currentWheelDirection = wheelDirection;\n        this.lastWheelTriggerTime = now;\n    };\n    MouseCaptor.prototype.handleOut = function () {\n        // TODO: dispatch event\n    };\n    return MouseCaptor;\n}(captor_1.default));\nexports.default = MouseCaptor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */ (function (_super) {\n    __extends(TouchCaptor, _super);\n    function TouchCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        _this.enabled = true;\n        _this.isMoving = false;\n        _this.touchMode = 0; // number of touches down\n        // Binding methods:\n        _this.handleStart = _this.handleStart.bind(_this);\n        _this.handleLeave = _this.handleLeave.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        // Binding events\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\n        return _this;\n    }\n    TouchCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"touchstart\", this.handleStart);\n        container.removeEventListener(\"touchend\", this.handleLeave);\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\n        container.removeEventListener(\"touchmove\", this.handleMove);\n    };\n    TouchCaptor.prototype.getDimensions = function () {\n        return {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        };\n    };\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, position, emitter) {\n        var mousePosition = position || (0, captor_1.getPosition)(e.touches[0], this.container);\n        var mouseEvent = new MouseEvent(type, {\n            clientX: mousePosition.x,\n            clientY: mousePosition.y,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n        });\n        mouseEvent.isFakeSigmaMouseEvent = true;\n        (emitter || this.container).dispatchEvent(mouseEvent);\n    };\n    TouchCaptor.prototype.handleStart = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        this.isMoving = true;\n        this.touchMode = touches.length;\n        this.startCameraState = this.renderer.getCamera().getState();\n        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouchesPositions = this.startTouchesPositions;\n        // When there are two touches down, let's record distance and angle as well:\n        if (this.touchMode === 2) {\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n        }\n        this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleLeave = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 0 && this.lastTouchesPositions && this.lastTouchesPositions.length) {\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouchesPositions[0], document);\n            this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouchesPositions[0]);\n        }\n        if (this.movingTimeout) {\n            this.isMoving = false;\n            clearTimeout(this.movingTimeout);\n        }\n        switch (this.touchMode) {\n            case 2:\n                if (e.touches.length === 1) {\n                    this.handleStart(e);\n                    e.preventDefault();\n                    break;\n                }\n            /* falls through */\n            case 1:\n                // TODO\n                // Dispatch event\n                if (this.isMoving) {\n                    var camera = this.renderer.getCamera();\n                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n                    camera.animate({\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n                    }, {\n                        duration: TOUCH_INERTIA_DURATION,\n                        easing: \"quadraticOut\",\n                    });\n                }\n                this.isMoving = false;\n                this.touchMode = 0;\n                break;\n        }\n        this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleMove = function (e) {\n        var _a;\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\n        var camera = this.renderer.getCamera();\n        var startCameraState = this.startCameraState;\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouchesPositions = touchesPositions;\n        this.isMoving = true;\n        if (this.movingTimeout)\n            clearTimeout(this.movingTimeout);\n        this.movingTimeout = window.setTimeout(function () {\n            _this.isMoving = false;\n        }, DRAG_TIMEOUT);\n        switch (this.touchMode) {\n            case 1: {\n                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\n                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;\n                camera.setState({\n                    x: startCameraState.x + xStart - x,\n                    y: startCameraState.y + yStart - y,\n                });\n                break;\n            }\n            case 2: {\n                /**\n                 * Here is the thinking here:\n                 *\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n                 *    of the d'n'd and now\n                 *\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n                 *    position of this same touch now\n                 */\n                var newCameraState = {};\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n                // 1.\n                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n                newCameraState.ratio = newRatio;\n                newCameraState.angle = startCameraState.angle + angleDiff;\n                // 2.\n                var dimensions = this.getDimensions();\n                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\n                var dx = smallestDimension / dimensions.width;\n                var dy = smallestDimension / dimensions.height;\n                var ratio = newRatio / smallestDimension;\n                // Align with center of the graph:\n                var x = x0 - smallestDimension / 2 / dx;\n                var y = y0 - smallestDimension / 2 / dy;\n                // Rotate:\n                _a = __read([\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\n                ], 2), x = _a[0], y = _a[1];\n                newCameraState.x = touchGraphPosition.x - x * ratio;\n                newCameraState.y = touchGraphPosition.y + y * ratio;\n                camera.setState(newCameraState);\n                break;\n            }\n        }\n        this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    return TouchCaptor;\n}(captor_1.default));\nexports.default = TouchCaptor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /** @class */ (function () {\n    function LabelCandidate(key, size) {\n        this.key = key;\n        this.size = size;\n    }\n    LabelCandidate.compare = function (first, second) {\n        // First we compare by size\n        if (first.size > second.size)\n            return -1;\n        if (first.size < second.size)\n            return 1;\n        // Then since no two nodes can have the same key, we use it to\n        // deterministically tie-break by key\n        if (first.key > second.key)\n            return 1;\n        // NOTE: this comparator cannot return 0\n        return -1;\n    };\n    return LabelCandidate;\n}());\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /** @class */ (function () {\n    function LabelGrid() {\n        this.width = 0;\n        this.height = 0;\n        this.cellSize = 0;\n        this.columns = 0;\n        this.rows = 0;\n        this.cells = {};\n    }\n    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\n        this.width = dimensions.width;\n        this.height = dimensions.height;\n        this.cellSize = cellSize;\n        this.columns = Math.ceil(dimensions.width / cellSize);\n        this.rows = Math.ceil(dimensions.height / cellSize);\n        this.cells = {};\n    };\n    LabelGrid.prototype.getIndex = function (pos) {\n        var xIndex = Math.floor(pos.x / this.cellSize);\n        var yIndex = Math.floor(pos.y / this.cellSize);\n        return yIndex * this.columns + xIndex;\n    };\n    LabelGrid.prototype.add = function (key, size, pos) {\n        var candidate = new LabelCandidate(key, size);\n        var index = this.getIndex(pos);\n        var cell = this.cells[index];\n        if (!cell) {\n            cell = [];\n            this.cells[index] = cell;\n        }\n        cell.push(candidate);\n    };\n    LabelGrid.prototype.organize = function () {\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            cell.sort(LabelCandidate.compare);\n        }\n    };\n    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\n        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n        // TODO: adjust threshold lower, but increase cells a bit?\n        // TODO: hunt for geom issue in disguise\n        // TODO: memoize while ratio does not move. method to force recompute\n        var cellArea = this.cellSize * this.cellSize;\n        var scaledCellArea = cellArea / ratio / ratio;\n        var scaledDensity = (scaledCellArea * density) / cellArea;\n        var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n        var labels = [];\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n                labels.push(cell[i].key);\n            }\n        }\n        return labels;\n    };\n    return LabelGrid;\n}());\nexports.LabelGrid = LabelGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\n    var worthyEdges = [];\n    // TODO: the code below can be optimized using #.forEach and batching the code per adj\n    // We should display an edge's label if:\n    //   - Any of its extremities is highlighted or hovered\n    //   - Both of its extremities has its label shown\n    graph.forEachEdge(function (edge, _, source, target) {\n        if (source === hoveredNode ||\n            target === hoveredNode ||\n            highlightedNodes.has(source) ||\n            highlightedNodes.has(target) ||\n            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {\n            worthyEdges.push(edge);\n        }\n    });\n    return worthyEdges;\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\n/**\n * Sigma.js Quad Tree Class\n * =========================\n *\n * Class implementing the quad tree data structure used to solve hovers and\n * determine which elements are currently in the scope of the camera so that\n * we don't waste time rendering things the user cannot see anyway.\n * @module\n */\n/* eslint no-nested-ternary: 0 */\n/* eslint no-constant-condition: 0 */\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\n// TODO: should not ask the quadtree when the camera has the whole graph in\n// sight.\n// TODO: a square can be represented as topleft + width, saying for the quad blocks (reduce mem)\n// TODO: jsdoc\n// TODO: be sure we can handle cases overcoming boundaries (because of size) or use a maxed size\n// TODO: filtering unwanted labels beforehand through the filter function\n// NOTE: this is basically a MX-CIF Quadtree at this point\n// NOTE: need to explore R-Trees for edges\n// NOTE: need to explore 2d segment tree for edges\n// NOTE: probably can do faster using spatial hashing\n/**\n * Constants.\n *\n * Note that since we are representing a static 4-ary tree, the indices of the\n * quadrants are the following:\n *   - TOP_LEFT:     4i + b\n *   - TOP_RIGHT:    4i + 2b\n *   - BOTTOM_LEFT:  4i + 3b\n *   - BOTTOM_RIGHT: 4i + 4b\n */\nvar BLOCKS = 4, MAX_LEVEL = 5;\nvar OUTSIDE_BLOCK = \"outside\";\nvar X_OFFSET = 0, Y_OFFSET = 1, WIDTH_OFFSET = 2, HEIGHT_OFFSET = 3;\nvar TOP_LEFT = 1, TOP_RIGHT = 2, BOTTOM_LEFT = 3, BOTTOM_RIGHT = 4;\nvar hasWarnedTooMuchOutside = false;\n/**\n * Geometry helpers.\n */\n/**\n * Function returning whether the given rectangle is axis-aligned.\n *\n * @param  {Rectangle} rect\n * @return {boolean}\n */\nfunction isRectangleAligned(rect) {\n    return rect.x1 === rect.x2 || rect.y1 === rect.y2;\n}\nexports.isRectangleAligned = isRectangleAligned;\n/**\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\n *\n * @param {Rectangle} rect\n * @return {Rectangle}\n */\nfunction getCircumscribedAlignedRectangle(rect) {\n    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\n    var heightVector = {\n        x: ((rect.y1 - rect.y2) * rect.height) / width,\n        y: ((rect.x2 - rect.x1) * rect.height) / width,\n    };\n    // Compute all corners:\n    var tl = { x: rect.x1, y: rect.y1 };\n    var tr = { x: rect.x2, y: rect.y2 };\n    var bl = {\n        x: rect.x1 + heightVector.x,\n        y: rect.y1 + heightVector.y,\n    };\n    var br = {\n        x: rect.x2 + heightVector.x,\n        y: rect.y2 + heightVector.y,\n    };\n    var xL = Math.min(tl.x, tr.x, bl.x, br.x);\n    var xR = Math.max(tl.x, tr.x, bl.x, br.x);\n    var yT = Math.min(tl.y, tr.y, bl.y, br.y);\n    var yB = Math.max(tl.y, tr.y, bl.y, br.y);\n    return {\n        x1: xL,\n        y1: yT,\n        x2: xR,\n        y2: yT,\n        height: yB - yT,\n    };\n}\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\n/**\n *\n * @param x1\n * @param y1\n * @param w\n * @param qx\n * @param qy\n * @param qw\n * @param qh\n */\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\n}\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\n}\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\n    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;\n    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\n}\n/**\n * Helper functions that are not bound to the class so an external user\n * cannot mess with them.\n */\nfunction buildQuadrants(maxLevel, data) {\n    // [block, level]\n    var stack = [0, 0];\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;\n        data[topLeftBlock + X_OFFSET] = x;\n        data[topLeftBlock + Y_OFFSET] = y;\n        data[topLeftBlock + WIDTH_OFFSET] = hw;\n        data[topLeftBlock + HEIGHT_OFFSET] = hh;\n        data[topRightBlock + X_OFFSET] = x + hw;\n        data[topRightBlock + Y_OFFSET] = y;\n        data[topRightBlock + WIDTH_OFFSET] = hw;\n        data[topRightBlock + HEIGHT_OFFSET] = hh;\n        data[bottomLeftBlock + X_OFFSET] = x;\n        data[bottomLeftBlock + Y_OFFSET] = y + hh;\n        data[bottomLeftBlock + WIDTH_OFFSET] = hw;\n        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\n        data[bottomRightBlock + X_OFFSET] = x + hw;\n        data[bottomRightBlock + Y_OFFSET] = y + hh;\n        data[bottomRightBlock + WIDTH_OFFSET] = hw;\n        data[bottomRightBlock + HEIGHT_OFFSET] = hh;\n        if (level < maxLevel - 1) {\n            stack.push(bottomRightBlock, level + 1);\n            stack.push(bottomLeftBlock, level + 1);\n            stack.push(topRightBlock, level + 1);\n            stack.push(topLeftBlock, level + 1);\n        }\n    }\n}\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\n    var x1 = x - size, y1 = y - size, w = size * 2;\n    var level = 0, block = 0;\n    while (true) {\n        // If we reached max level\n        if (level >= maxLevel) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        var collisions = [\n            collidingWithTopLeft,\n            collidingWithTopRight,\n            collidingWithBottomLeft,\n            collidingWithBottomRight,\n        ].reduce(function (acc, current) {\n            if (current)\n                return acc + 1;\n            else\n                return acc;\n        }, 0);\n        // If we have no collision at root level, inject node in the outside block\n        if (collisions === 0 && level === 0) {\n            containers[OUTSIDE_BLOCK].push(key);\n            if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {\n                hasWarnedTooMuchOutside = true;\n                console.warn(\"sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. \" +\n                    \"You might have a problem with the normalization function or the custom bounding box.\");\n            }\n            return;\n        }\n        // If we don't have at least a collision but deeper, there is an issue\n        if (collisions === 0)\n            throw new Error(\"sigma/quadtree.insertNode: no collision (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have 3 collisions, we have a geometry problem obviously\n        if (collisions === 3)\n            throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have more that one collision, we stop here and store the node\n        // in the relevant containers\n        if (collisions > 1) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        else {\n            level++;\n        }\n        // Else we recurse into the correct quads\n        if (collidingWithTopLeft)\n            block = topLeftBlock;\n        if (collidingWithTopRight)\n            block = topRightBlock;\n        if (collidingWithBottomLeft)\n            block = bottomLeftBlock;\n        if (collidingWithBottomRight)\n            block = bottomRightBlock;\n    }\n}\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\n    // [block, level]\n    var stack = [0, 0];\n    var collectedNodes = [];\n    var container;\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        // Collecting nodes\n        container = containers[block];\n        if (container)\n            (0, extend_1.default)(collectedNodes, container);\n        // If we reached max level\n        if (level >= maxLevel)\n            continue;\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        if (collidingWithTopLeft)\n            stack.push(topLeftBlock, level + 1);\n        if (collidingWithTopRight)\n            stack.push(topRightBlock, level + 1);\n        if (collidingWithBottomLeft)\n            stack.push(bottomLeftBlock, level + 1);\n        if (collidingWithBottomRight)\n            stack.push(bottomRightBlock, level + 1);\n    }\n    return collectedNodes;\n}\n/**\n * QuadTree class.\n *\n * @constructor\n * @param {object} boundaries - The graph boundaries.\n */\nvar QuadTree = /** @class */ (function () {\n    function QuadTree(params) {\n        var _a;\n        if (params === void 0) { params = {}; }\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        this.cache = null;\n        this.lastRectangle = null;\n        // Allocating the underlying byte array\n        var L = Math.pow(4, MAX_LEVEL);\n        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\n        if (params.boundaries)\n            this.resize(params.boundaries);\n        else\n            this.resize({\n                x: 0,\n                y: 0,\n                width: 1,\n                height: 1,\n            });\n    }\n    QuadTree.prototype.add = function (key, x, y, size) {\n        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\n        return this;\n    };\n    QuadTree.prototype.resize = function (boundaries) {\n        this.clear();\n        // Building the quadrants\n        this.data[X_OFFSET] = boundaries.x;\n        this.data[Y_OFFSET] = boundaries.y;\n        this.data[WIDTH_OFFSET] = boundaries.width;\n        this.data[HEIGHT_OFFSET] = boundaries.height;\n        buildQuadrants(MAX_LEVEL, this.data);\n    };\n    QuadTree.prototype.clear = function () {\n        var _a;\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        return this;\n    };\n    QuadTree.prototype.point = function (x, y) {\n        var nodes = this.containers[OUTSIDE_BLOCK];\n        var block = 0, level = 0;\n        do {\n            if (this.containers[block])\n                nodes.push.apply(nodes, __spreadArray([], __read(this.containers[block]), false));\n            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\n            block = 4 * block + quad * BLOCKS;\n            level++;\n        } while (level <= MAX_LEVEL);\n        return nodes;\n    };\n    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\n        var _a;\n        var lr = this.lastRectangle;\n        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\n            return this.cache;\n        }\n        this.lastRectangle = {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            height: height,\n        };\n        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\n        if (!isRectangleAligned(this.lastRectangle))\n            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\n        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\n        // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:\n        (_a = this.cache).push.apply(_a, __spreadArray([], __read(this.containers[OUTSIDE_BLOCK]), false));\n        return this.cache;\n    };\n    return QuadTree;\n}());\nexports.default = QuadTree;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar sigma_1 = __importDefault(require(\"./sigma\"));\nexports.Sigma = sigma_1.default;\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nexports.Camera = camera_1.default;\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nexports.QuadTree = quadtree_1.default;\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nexports.MouseCaptor = mouse_1.default;\nexports.default = sigma_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"…\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Then we draw the label background\n    context.fillStyle = \"#FFF\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var PADDING = 2;\n    if (typeof data.label === \"string\") {\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n        context.beginPath();\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n        context.closePath();\n        context.fill();\n    }\n    else {\n        context.beginPath();\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // And finally we draw the label\n    (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Edge Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Edge Program class.\n *\n * @constructor\n */\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\n    __extends(AbstractEdgeProgram, _super);\n    function AbstractEdgeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n    }\n    return AbstractEdgeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nfunction createEdgeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function EdgeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl, renderer); });\n        }\n        EdgeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        EdgeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        EdgeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        EdgeCompoundProgram.prototype.computeIndices = function () {\n            this.programs.forEach(function (program) { return program.computeIndices(); });\n        };\n        EdgeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) {\n                program.bind();\n                program.bufferData();\n                program.render(params);\n            });\n        };\n        EdgeCompoundProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(sourceData, targetData, data, hidden, offset); });\n        };\n        return EdgeCompoundProgram;\n    }());\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeCompoundProgram = exports.AbstractNodeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Node Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Node Program class.\n *\n * @constructor\n */\nvar AbstractNodeProgram = /** @class */ (function (_super) {\n    __extends(AbstractNodeProgram, _super);\n    function AbstractNodeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        var _this = _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.sizeLocation = gl.getAttribLocation(_this.program, \"a_size\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        // Uniform Location\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var ratioLocation = gl.getUniformLocation(_this.program, \"u_ratio\");\n        if (ratioLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting ratioLocation\");\n        _this.ratioLocation = ratioLocation;\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        return _this;\n    }\n    AbstractNodeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.sizeLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.sizeLocation, 1, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, this.attributes * Float32Array.BYTES_PER_ELEMENT, 12);\n    };\n    return AbstractNodeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractNodeProgram = AbstractNodeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function NodeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl, renderer); });\n        }\n        NodeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        NodeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        NodeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        NodeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) {\n                program.bind();\n                program.bufferData();\n                program.render(params);\n            });\n        };\n        NodeCompoundProgram.prototype.process = function (data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(data, hidden, offset); });\n        };\n        return NodeCompoundProgram;\n    }());\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    AbstractProgram.prototype.hasNothingToRender = function () {\n        return this.array.length === 0;\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);\nexports.default = EdgeArrowProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 3, ATTRIBUTES = 9, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\n    __extends(EdgeArrowHeadProgram, _super);\n    function EdgeArrowHeadProgram(gl) {\n        var _this = _super.call(this, gl, edge_arrowHead_vert_glsl_1.default, edge_arrowHead_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        _this.barycentricLocation = gl.getAttribLocation(_this.program, \"a_barycentric\");\n        // Uniform locations\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting sqrtZoomRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting correctionRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        _this.bind();\n        return _this;\n    }\n    EdgeArrowHeadProgram.prototype.bind = function () {\n        var gl = this.gl;\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.barycentricLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n        // TODO: maybe we can optimize here by packing this in a bit mask\n        gl.vertexAttribPointer(this.barycentricLocation, 3, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);\n    };\n    EdgeArrowHeadProgram.prototype.computeIndices = function () {\n        // nothing to do\n    };\n    EdgeArrowHeadProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, radius = targetData.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 1;\n        array[i++] = 0;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 1;\n        array[i++] = 0;\n        // Third point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 0;\n        array[i] = 1;\n    };\n    EdgeArrowHeadProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawArrays(gl.TRIANGLES, 0, this.array.length / ATTRIBUTES);\n    };\n    return EdgeArrowHeadProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeArrowHeadProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar edge_1 = require(\"./common/edge\");\nvar utils_1 = require(\"../../../utils\");\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar POINTS = 4, ATTRIBUTES = 6, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeClampedProgram = /** @class */ (function (_super) {\n    __extends(EdgeClampedProgram, _super);\n    function EdgeClampedProgram(gl) {\n        var _this = _super.call(this, gl, edge_clamped_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeClampedProgram: error while getting resolutionLocation\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations:\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        // Uniform locations\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting cameraRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting viewportRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeClampedProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n    };\n    EdgeClampedProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, radius = targetData.size || 1, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = radius;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i] = -radius;\n    };\n    EdgeClampedProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeClampedProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeClampedProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeClampedProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeClampedProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines using four points translated\n * orthogonally from the source & target's centers by half thickness.\n *\n * Rendering two triangles by using only four points is made possible through\n * the use of indices.\n *\n * This method should be faster than the 6 points / 2 triangles approach and\n * should handle thickness better than with gl.LINES.\n *\n * This version of the shader balances geometry computation evenly between\n * the CPU & GPU (normals are computed on the CPU side).\n * @module\n */\nvar utils_1 = require(\"../../../utils\");\nvar edge_vert_glsl_1 = __importDefault(require(\"../shaders/edge.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 4, ATTRIBUTES = 5, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeProgram = /** @class */ (function (_super) {\n    __extends(EdgeProgram, _super);\n    function EdgeProgram(gl) {\n        var _this = _super.call(this, gl, edge_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeProgram: error while creating indicesBuffer\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting correctionRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting sqrtZoomRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n    };\n    EdgeProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i] = color;\n    };\n    EdgeProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar node_fast_vert_glsl_1 = __importDefault(require(\"../shaders/node.fast.vert.glsl.js\"));\nvar node_fast_frag_glsl_1 = __importDefault(require(\"../shaders/node.fast.frag.glsl.js\"));\nvar node_1 = require(\"./common/node\");\nvar POINTS = 1, ATTRIBUTES = 4;\nvar NodeFastProgram = /** @class */ (function (_super) {\n    __extends(NodeFastProgram, _super);\n    function NodeFastProgram(gl) {\n        var _this = _super.call(this, gl, node_fast_vert_glsl_1.default, node_fast_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        _this.bind();\n        return _this;\n    }\n    NodeFastProgram.prototype.process = function (data, hidden, offset) {\n        var array = this.array;\n        var i = offset * POINTS * ATTRIBUTES;\n        if (hidden) {\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            return;\n        }\n        var color = (0, utils_1.floatColor)(data.color);\n        array[i++] = data.x;\n        array[i++] = data.y;\n        array[i++] = data.size;\n        array[i] = color;\n    };\n    NodeFastProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        gl.uniform1f(this.ratioLocation, 1 / Math.sqrt(params.ratio));\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.drawArrays(gl.POINTS, 0, this.array.length / ATTRIBUTES);\n    };\n    return NodeFastProgram;\n}(node_1.AbstractNodeProgram));\nexports.default = NodeFastProgram;\n","(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();","(()=>{\"use strict\";var a={d:(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(a,e)=>Object.prototype.hasOwnProperty.call(a,e),r:a=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(a,\"__esModule\",{value:!0})}},e={};a.r(e),a.d(e,{default:()=>t});const t=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n  float adaptedWebGLNodeRadius = a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float adaptedWebGLArrowHeadHalfWidth = adaptedWebGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (adaptedWebGLNodeRadius * unitNormal.y)\\n    + db * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y + adaptedWebGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y - adaptedWebGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-adaptedWebGLNodeRadius * unitNormal.x)\\n    + db * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x + adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x - adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=e})();","(()=>{\"use strict\";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n=\"attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(a_radius);\\n  float adaptedWebGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=o})();","(()=>{\"use strict\";var e={d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>t});const t=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n}\\n\";module.exports=n})();","(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the SQRT zoom ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n\\n  // Finally, we adapt the edge thickness to the \"SQRT rule\" in sigma (so that\\n  // items are not too big when zoomed in, and not too small when zoomed out).\\n  // The exact computation should be `adapted = value * zoom / sqrt(zoom)`, but\\n  // it\\'s simpler like this:\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasint effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n';module.exports=n})();","(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n}\\n\";module.exports=n})();","(()=>{\"use strict\";var o={d:(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>e});const e=\"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_ratio;\\nuniform float u_scale;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size * u_ratio * u_scale * 2.0;\\n\\n  v_border = (1.0 / u_ratio) * (0.5 / a_size);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();","\"use strict\";\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n","\"use strict\";\n/**\n * Sigma.js Settings\n * =================================\n *\n * The list of settings and some handy functions.\n * @module\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_SETTINGS = exports.validateSettings = void 0;\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\nvar node_fast_1 = __importDefault(require(\"./rendering/webgl/programs/node.fast\"));\nvar edge_1 = __importDefault(require(\"./rendering/webgl/programs/edge\"));\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\nfunction validateSettings(settings) {\n    if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n        throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n    }\n    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;\n    if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n        throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n    }\n}\nexports.validateSettings = validateSettings;\nexports.DEFAULT_SETTINGS = {\n    // Performance\n    hideEdgesOnMove: false,\n    hideLabelsOnMove: false,\n    renderLabels: true,\n    renderEdgeLabels: false,\n    enableEdgeClickEvents: false,\n    enableEdgeWheelEvents: false,\n    enableEdgeHoverEvents: false,\n    // Component rendering\n    defaultNodeColor: \"#999\",\n    defaultNodeType: \"circle\",\n    defaultEdgeColor: \"#ccc\",\n    defaultEdgeType: \"line\",\n    labelFont: \"Arial\",\n    labelSize: 14,\n    labelWeight: \"normal\",\n    labelColor: { color: \"#000\" },\n    edgeLabelFont: \"Arial\",\n    edgeLabelSize: 14,\n    edgeLabelWeight: \"normal\",\n    edgeLabelColor: { attribute: \"color\" },\n    stagePadding: 30,\n    // Labels\n    labelDensity: 1,\n    labelGridCellSize: 100,\n    labelRenderedSizeThreshold: 6,\n    // Reducers\n    nodeReducer: null,\n    edgeReducer: null,\n    // Features\n    zIndex: false,\n    minCameraRatio: null,\n    maxCameraRatio: null,\n    // Renderers\n    labelRenderer: label_1.default,\n    hoverRenderer: hover_1.default,\n    edgeLabelRenderer: edge_label_1.default,\n    // Lifecycle\n    allowInvalidContainer: false,\n    // Program classes\n    nodeProgramClasses: {\n        circle: node_fast_1.default,\n    },\n    edgeProgramClasses: {\n        arrow: edge_arrow_1.default,\n        line: edge_1.default,\n    },\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar labels_1 = require(\"./core/labels\");\nvar settings_1 = require(\"./settings\");\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\nvar matrices_1 = require(\"./utils/matrices\");\nvar edge_collisions_1 = require(\"./utils/edge-collisions\");\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n    if (!data.color)\n        data.color = settings.defaultNodeColor;\n    if (!data.label && data.label !== \"\")\n        data.label = null;\n    if (data.label !== undefined && data.label !== null)\n        data.label = \"\" + data.label;\n    else\n        data.label = null;\n    if (!data.size)\n        data.size = 2;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"highlighted\"))\n        data.highlighted = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultNodeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\nfunction applyEdgeDefaults(settings, key, data) {\n    if (!data.color)\n        data.color = settings.defaultEdgeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 0.5;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultEdgeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */ (function (_super) {\n    __extends(Sigma, _super);\n    function Sigma(graph, container, settings) {\n        if (settings === void 0) { settings = {}; }\n        var _this = _super.call(this) || this;\n        _this.elements = {};\n        _this.canvasContexts = {};\n        _this.webGLContexts = {};\n        _this.activeListeners = {};\n        _this.quadtree = new quadtree_1.default();\n        _this.labelGrid = new labels_1.LabelGrid();\n        _this.nodeDataCache = {};\n        _this.edgeDataCache = {};\n        _this.nodesWithForcedLabels = [];\n        _this.edgesWithForcedLabels = [];\n        _this.nodeExtent = { x: [0, 1], y: [0, 1] };\n        _this.matrix = (0, matrices_1.identity)();\n        _this.invMatrix = (0, matrices_1.identity)();\n        _this.correctionRatio = 1;\n        _this.customBBox = null;\n        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\n            x: [0, 1],\n            y: [0, 1],\n        });\n        // Cache:\n        _this.cameraSizeRatio = 1;\n        // Starting dimensions and pixel ratio\n        _this.width = 0;\n        _this.height = 0;\n        _this.pixelRatio = (0, utils_1.getPixelRatio)();\n        // State\n        _this.displayedLabels = new Set();\n        _this.highlightedNodes = new Set();\n        _this.hoveredNode = null;\n        _this.hoveredEdge = null;\n        _this.renderFrame = null;\n        _this.renderHighlightedNodesFrame = null;\n        _this.needToProcess = false;\n        _this.needToSoftProcess = false;\n        _this.checkEdgesEventsFrame = null;\n        // Programs\n        _this.nodePrograms = {};\n        _this.hoverNodePrograms = {};\n        _this.edgePrograms = {};\n        _this.settings = (0, utils_1.assign)({}, settings_1.DEFAULT_SETTINGS, settings);\n        // Validating\n        (0, settings_1.validateSettings)(_this.settings);\n        (0, utils_1.validateGraph)(graph);\n        if (!(container instanceof HTMLElement))\n            throw new Error(\"Sigma: container should be an html element.\");\n        // Properties\n        _this.graph = graph;\n        _this.container = container;\n        // Initializing contexts\n        _this.createWebGLContext(\"edges\", { preserveDrawingBuffer: true });\n        _this.createCanvasContext(\"edgeLabels\");\n        _this.createWebGLContext(\"nodes\");\n        _this.createCanvasContext(\"labels\");\n        _this.createCanvasContext(\"hovers\");\n        _this.createWebGLContext(\"hoverNodes\");\n        _this.createCanvasContext(\"mouse\");\n        // Blending\n        for (var key in _this.webGLContexts) {\n            var gl = _this.webGLContexts[key];\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            gl.enable(gl.BLEND);\n        }\n        // Loading programs\n        for (var type in _this.settings.nodeProgramClasses) {\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);\n            _this.hoverNodePrograms[type] = new NodeProgramClass(_this.webGLContexts.hoverNodes, _this);\n        }\n        for (var type in _this.settings.edgeProgramClasses) {\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);\n        }\n        // Initial resize\n        _this.resize();\n        // Initializing the camera\n        _this.camera = new camera_1.default();\n        // Binding camera events\n        _this.bindCameraHandlers();\n        // Initializing captors\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\n        // Binding event handlers\n        _this.bindEventHandlers();\n        // Binding graph handlers\n        _this.bindGraphHandlers();\n        // Trigger eventual settings-related things\n        _this.handleSettingsUpdate();\n        // Processing data for the first time & render\n        _this.process();\n        _this.render();\n        return _this;\n    }\n    /**---------------------------------------------------------------------------\n     * Internal methods.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Internal function used to create a canvas element.\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvas = function (id) {\n        var canvas = (0, utils_1.createElement)(\"canvas\", {\n            position: \"absolute\",\n        }, {\n            class: \"sigma-\".concat(id),\n        });\n        this.elements[id] = canvas;\n        this.container.appendChild(canvas);\n        return canvas;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvasContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n        return this;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string}  id      - Context's id.\n     * @param  {object?} options - #getContext params to override (optional)\n     * @return {Sigma}\n     */\n    Sigma.prototype.createWebGLContext = function (id, options) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));\n        var context;\n        // First we try webgl2 for an easy performance boost\n        context = canvas.getContext(\"webgl2\", contextOptions);\n        // Else we fall back to webgl\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextOptions);\n        // Edge, I am looking right at you...\n        if (!context)\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\n        this.webGLContexts[id] = context;\n        return this;\n    };\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindCameraHandlers = function () {\n        var _this = this;\n        this.activeListeners.camera = function () {\n            _this._scheduleRefresh();\n        };\n        this.camera.on(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method that checks whether or not a node collides with a given position.\n     */\n    Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {\n        var x = _a.x, y = _a.y;\n        var nodeX = _b.x, nodeY = _b.y;\n        return (x > nodeX - size &&\n            x < nodeX + size &&\n            y > nodeY - size &&\n            y < nodeY + size &&\n            Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size);\n    };\n    /**\n     * Method that returns all nodes in quad at a given position.\n     */\n    Sigma.prototype.getQuadNodes = function (position) {\n        var mouseGraphPosition = this.viewportToFramedGraph(position);\n        return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\n    };\n    /**\n     * Method that returns the closest node to a given position.\n     */\n    Sigma.prototype.getNodeAtPosition = function (position) {\n        var x = position.x, y = position.y;\n        var quadNodes = this.getQuadNodes(position);\n        // We will hover the node whose center is closest to mouse\n        var minDistance = Infinity, nodeAtPosition = null;\n        for (var i = 0, l = quadNodes.length; i < l; i++) {\n            var node = quadNodes[i];\n            var data = this.nodeDataCache[node];\n            var nodePosition = this.framedGraphToViewport(data);\n            var size = this.scaleSize(data.size);\n            if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {\n                var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));\n                // TODO: sort by min size also for cases where center is the same\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    nodeAtPosition = node;\n                }\n            }\n        }\n        return nodeAtPosition;\n    };\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindEventHandlers = function () {\n        var _this = this;\n        // Handling window resize\n        this.activeListeners.handleResize = function () {\n            _this.needToSoftProcess = true;\n            _this._scheduleRefresh();\n        };\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\n        // Handling mouse move\n        this.activeListeners.handleMove = function (e) {\n            var baseEvent = {\n                event: e,\n                preventSigmaDefault: function () {\n                    e.preventSigmaDefault();\n                },\n            };\n            var nodeToHover = _this.getNodeAtPosition(e);\n            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\n                // Handling passing from one node to the other directly\n                if (_this.hoveredNode)\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));\n                _this.hoveredNode = nodeToHover;\n                _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), { node: nodeToHover }));\n                _this.scheduleHighlightedNodesRender();\n                return;\n            }\n            // Checking if the hovered node is still hovered\n            if (_this.hoveredNode) {\n                var data = _this.nodeDataCache[_this.hoveredNode];\n                var pos = _this.framedGraphToViewport(data);\n                var size = _this.scaleSize(data.size);\n                if (!_this.mouseIsOnNode(e, pos, size)) {\n                    var node = _this.hoveredNode;\n                    _this.hoveredNode = null;\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: node }));\n                    _this.scheduleHighlightedNodesRender();\n                    return;\n                }\n            }\n            if (_this.settings.enableEdgeHoverEvents === true) {\n                _this.checkEdgeHoverEvents(baseEvent);\n            }\n            else if (_this.settings.enableEdgeHoverEvents === \"debounce\") {\n                if (!_this.checkEdgesEventsFrame)\n                    _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {\n                        _this.checkEdgeHoverEvents(baseEvent);\n                        _this.checkEdgesEventsFrame = null;\n                    });\n            }\n        };\n        // Handling click\n        var createMouseListener = function (eventType) {\n            return function (e) {\n                var baseEvent = {\n                    event: e,\n                    preventSigmaDefault: function () {\n                        e.preventSigmaDefault();\n                    },\n                };\n                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\n                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\n                if (nodeAtPosition)\n                    return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));\n                if (eventType === \"wheel\" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {\n                    var edge = _this.getEdgeAtPoint(e.x, e.y);\n                    if (edge)\n                        return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), { edge: edge }));\n                }\n                return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n            };\n        };\n        this.activeListeners.handleClick = createMouseListener(\"click\");\n        this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\n        this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\n        this.activeListeners.handleWheel = createMouseListener(\"wheel\");\n        this.activeListeners.handleDown = createMouseListener(\"down\");\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n        this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n        this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n        // TODO\n        // Deal with Touch captor events\n        return this;\n    };\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindGraphHandlers = function () {\n        var _this = this;\n        var graph = this.graph;\n        this.activeListeners.graphUpdate = function () {\n            _this.needToProcess = true;\n            _this._scheduleRefresh();\n        };\n        this.activeListeners.softGraphUpdate = function () {\n            _this.needToSoftProcess = true;\n            _this._scheduleRefresh();\n        };\n        this.activeListeners.dropNodeGraphUpdate = function (e) {\n            delete _this.nodeDataCache[e.key];\n            if (_this.hoveredNode === e.key)\n                _this.hoveredNode = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.dropEdgeGraphUpdate = function (e) {\n            delete _this.edgeDataCache[e.key];\n            if (_this.hoveredEdge === e.key)\n                _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearEdgesGraphUpdate = function () {\n            _this.edgeDataCache = {};\n            _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearGraphUpdate = function () {\n            _this.nodeDataCache = {};\n            _this.hoveredNode = null;\n            _this.activeListeners.clearEdgesGraphUpdate();\n        };\n        graph.on(\"nodeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n        return this;\n    };\n    /**\n     * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.checkEdgeHoverEvents = function (payload) {\n        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\n        if (edgeToHover !== this.hoveredEdge) {\n            if (this.hoveredEdge)\n                this.emit(\"leaveEdge\", __assign(__assign({}, payload), { edge: this.hoveredEdge }));\n            if (edgeToHover)\n                this.emit(\"enterEdge\", __assign(__assign({}, payload), { edge: edgeToHover }));\n            this.hoveredEdge = edgeToHover;\n        }\n        return this;\n    };\n    /**\n     * Method looking for an edge colliding with a given point at (x, y). Returns\n     * the key of the edge if any, or null else.\n     */\n    Sigma.prototype.getEdgeAtPoint = function (x, y) {\n        var e_1, _a;\n        var _this = this;\n        var _b = this, edgeDataCache = _b.edgeDataCache, nodeDataCache = _b.nodeDataCache;\n        // Check first that pixel is colored:\n        // Note that mouse positions must be corrected by pixel ratio to correctly\n        // index the drawing buffer.\n        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio))\n            return null;\n        // Check for each edge if it collides with the point:\n        var _c = this.viewportToGraph({ x: x, y: y }), graphX = _c.x, graphY = _c.y;\n        // To translate edge thicknesses to the graph system, we observe by how much\n        // the length of a non-null edge is transformed to between the graph system\n        // and the viewport system:\n        var transformationRatio = 0;\n        this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {\n            var xs = _a.x, ys = _a.y;\n            var xt = _b.x, yt = _b.y;\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if (xs !== xt || ys !== yt) {\n                var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));\n                var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;\n                var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;\n                var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));\n                transformationRatio = graphLength / viewportLength;\n                return true;\n            }\n        });\n        // If no non-null edge has been found, return null:\n        if (!transformationRatio)\n            return null;\n        // Now we can look for matching edges:\n        var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, \n            // Adapt the edge size to the zoom ratio:\n            (edgeDataCache[key].size * transformationRatio) / _this.cameraSizeRatio)) {\n                return true;\n            }\n        });\n        if (edges.length === 0)\n            return null; // no edges found\n        // if none of the edges have a zIndex, selected the most recently created one to match the rendering order\n        var selectedEdge = edges[edges.length - 1];\n        // otherwise select edge with highest zIndex\n        var highestZIndex = -Infinity;\n        try {\n            for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {\n                var edge = edges_1_1.value;\n                var zIndex = this.graph.getEdgeAttribute(edge, \"zIndex\");\n                if (zIndex >= highestZIndex) {\n                    selectedEdge = edge;\n                    highestZIndex = zIndex;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return selectedEdge;\n    };\n    /**\n     * Method used to process the whole graph's data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.process = function (keepArrays) {\n        var _this = this;\n        if (keepArrays === void 0) { keepArrays = false; }\n        var graph = this.graph;\n        var settings = this.settings;\n        var dimensions = this.getDimensions();\n        var nodeZExtent = [Infinity, -Infinity];\n        var edgeZExtent = [Infinity, -Infinity];\n        // Clearing the quad\n        this.quadtree.clear();\n        // Resetting the label grid\n        // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n        // Clear the highlightedNodes\n        this.highlightedNodes = new Set();\n        // Computing extents\n        this.nodeExtent = (0, utils_1.graphExtent)(graph);\n        // Resetting `forceLabel` indices\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        // NOTE: it is important to compute this matrix after computing the node's extent\n        // because #.getGraphDimensions relies on it\n        var nullCamera = new camera_1.default();\n        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\n        // Rescaling function\n        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\n        var nodesPerPrograms = {};\n        var nodes = graph.nodes();\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            // Node display data resolution:\n            //   1. First we get the node's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            //   4. We apply the normalization function\n            // We shallow copy node data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getNodeAttributes(node));\n            if (settings.nodeReducer)\n                attr = settings.nodeReducer(node, attr);\n            var data = applyNodeDefaults(this.settings, node, attr);\n            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n            this.nodeDataCache[node] = data;\n            this.normalizationFunction.applyTo(data);\n            if (data.forceLabel)\n                this.nodesWithForcedLabels.push(node);\n            if (this.settings.zIndex) {\n                if (data.zIndex < nodeZExtent[0])\n                    nodeZExtent[0] = data.zIndex;\n                if (data.zIndex > nodeZExtent[1])\n                    nodeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.nodePrograms) {\n            if (!this.nodePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n            }\n            if (!keepArrays)\n                this.nodePrograms[type].allocate(nodesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            nodesPerPrograms[type] = 0;\n        }\n        // Handling node z-index\n        // TODO: z-index needs us to compute display data before hand\n        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])\n            nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            var data = this.nodeDataCache[node];\n            this.quadtree.add(node, data.x, 1 - data.y, data.size / this.width);\n            if (typeof data.label === \"string\" && !data.hidden)\n                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));\n            this.nodePrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);\n            // Save the node in the highlighted set if needed\n            if (data.highlighted && !data.hidden)\n                this.highlightedNodes.add(node);\n        }\n        this.labelGrid.organize();\n        var edgesPerPrograms = {};\n        var edges = graph.edges();\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            // Edge display data resolution:\n            //   1. First we get the edge's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            // We shallow copy edge data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getEdgeAttributes(edge));\n            if (settings.edgeReducer)\n                attr = settings.edgeReducer(edge, attr);\n            var data = applyEdgeDefaults(this.settings, edge, attr);\n            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\n            this.edgeDataCache[edge] = data;\n            if (data.forceLabel && !data.hidden)\n                this.edgesWithForcedLabels.push(edge);\n            if (this.settings.zIndex) {\n                if (data.zIndex < edgeZExtent[0])\n                    edgeZExtent[0] = data.zIndex;\n                if (data.zIndex > edgeZExtent[1])\n                    edgeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.edgePrograms) {\n            if (!this.edgePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\n            }\n            if (!keepArrays)\n                this.edgePrograms[type].allocate(edgesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            edgesPerPrograms[type] = 0;\n        }\n        // Handling edge z-index\n        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])\n            edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            var data = this.edgeDataCache[edge];\n            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\n            var hidden = data.hidden || sourceData.hidden || targetData.hidden;\n            this.edgePrograms[data.type].process(sourceData, targetData, data, hidden, edgesPerPrograms[data.type]++);\n        }\n        for (var type in this.edgePrograms) {\n            var program = this.edgePrograms[type];\n            if (!keepArrays && typeof program.computeIndices === \"function\")\n                program.computeIndices();\n        }\n        return this;\n    };\n    /**\n     * Method that backports potential settings updates where it's needed.\n     * @private\n     */\n    Sigma.prototype.handleSettingsUpdate = function () {\n        this.camera.minRatio = this.settings.minCameraRatio;\n        this.camera.maxRatio = this.settings.maxCameraRatio;\n        this.camera.setState(this.camera.validateState(this.camera.getState()));\n        return this;\n    };\n    /**\n     * Method that decides whether to reprocess graph or not, and then render the\n     * graph.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype._refresh = function () {\n        // Do we need to process data?\n        if (this.needToProcess) {\n            this.process();\n        }\n        else if (this.needToSoftProcess) {\n            this.process(true);\n        }\n        // Resetting state\n        this.needToProcess = false;\n        this.needToSoftProcess = false;\n        // Rendering\n        this.render();\n        return this;\n    };\n    /**\n     * Method that schedules a `_refresh` call if none has been scheduled yet. It\n     * will then be processed next available frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype._scheduleRefresh = function () {\n        var _this = this;\n        if (!this.renderFrame) {\n            this.renderFrame = (0, utils_1.requestFrame)(function () {\n                _this._refresh();\n                _this.renderFrame = null;\n            });\n        }\n        return this;\n    };\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderLabels = function () {\n        if (!this.settings.renderLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        // Finding visible nodes to display their labels\n        var visibleNodes;\n        if (cameraState.ratio >= 1) {\n            // Camera is unzoomed so no need to ask the quadtree for visible nodes\n            visibleNodes = new Set(this.graph.nodes());\n        }\n        else {\n            // Let's ask the quadtree\n            var viewRectangle = this.viewRectangle();\n            visibleNodes = new Set(this.quadtree.rectangle(viewRectangle.x1, 1 - viewRectangle.y1, viewRectangle.x2, 1 - viewRectangle.y2, viewRectangle.height));\n        }\n        // Selecting labels to draw\n        // TODO: drop gridsettings likewise\n        // TODO: optimize through visible nodes\n        var labelsToDisplay = this.labelGrid\n            .getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity)\n            .concat(this.nodesWithForcedLabels);\n        this.displayedLabels = new Set();\n        // Drawing labels\n        var context = this.canvasContexts.labels;\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n            var node = labelsToDisplay[i];\n            var data = this.nodeDataCache[node];\n            // If the node was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            if (this.displayedLabels.has(node))\n                continue;\n            // If the node is hidden, we don't need to display its label obviously\n            if (data.hidden)\n                continue;\n            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            // TODO: we can cache the labels we need to render until the camera's ratio changes\n            // TODO: this should be computed in the canvas components?\n            var size = this.scaleSize(data.size);\n            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)\n                continue;\n            if (!visibleNodes.has(node))\n                continue;\n            // TODO:\n            // Because displayed edge labels depend directly on actually rendered node\n            // labels, we need to only add to this.displayedLabels nodes whose label\n            // is rendered.\n            // This makes this.displayedLabels depend on viewport, which might become\n            // an issue once we start memoizing getLabelsToDisplay.\n            this.displayedLabels.add(node);\n            this.settings.labelRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);\n        }\n        return this;\n    };\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderEdgeLabels = function () {\n        if (!this.settings.renderEdgeLabels)\n            return this;\n        var context = this.canvasContexts.edgeLabels;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\n            graph: this.graph,\n            hoveredNode: this.hoveredNode,\n            displayedNodeLabels: this.displayedLabels,\n            highlightedNodes: this.highlightedNodes,\n        }).concat(this.edgesWithForcedLabels);\n        var displayedLabels = new Set();\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];\n            // If the edge was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            if (displayedLabels.has(edge))\n                continue;\n            // If the edge is hidden we don't need to display its label\n            // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n                continue;\n            }\n            this.settings.edgeLabelRenderer(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);\n            displayedLabels.add(edge);\n        }\n        return this;\n    };\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderHighlightedNodes = function () {\n        var _this = this;\n        var context = this.canvasContexts.hovers;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        // Rendering\n        var render = function (node) {\n            var data = _this.nodeDataCache[node];\n            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            var size = _this.scaleSize(data.size);\n            _this.settings.hoverRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);\n        };\n        var nodesToRender = [];\n        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n            nodesToRender.push(this.hoveredNode);\n        }\n        this.highlightedNodes.forEach(function (node) {\n            // The hovered node has already been highlighted\n            if (node !== _this.hoveredNode)\n                nodesToRender.push(node);\n        });\n        // Draw labels:\n        nodesToRender.forEach(function (node) { return render(node); });\n        // Draw WebGL nodes on top of the labels:\n        var nodesPerPrograms = {};\n        // 1. Count nodes per type:\n        nodesToRender.forEach(function (node) {\n            var type = _this.nodeDataCache[node].type;\n            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n        });\n        // 2. Allocate for each type for the proper number of nodes\n        for (var type in this.hoverNodePrograms) {\n            this.hoverNodePrograms[type].allocate(nodesPerPrograms[type] || 0);\n            // Also reset count, to use when rendering:\n            nodesPerPrograms[type] = 0;\n        }\n        // 3. Process all nodes to render:\n        nodesToRender.forEach(function (node) {\n            var data = _this.nodeDataCache[node];\n            _this.hoverNodePrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);\n        });\n        // 4. Clear hovered nodes layer:\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        // 5. Render:\n        for (var type in this.hoverNodePrograms) {\n            var program = this.hoverNodePrograms[type];\n            program.bind();\n            program.bufferData();\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                ratio: this.camera.ratio,\n                correctionRatio: this.correctionRatio / this.camera.ratio,\n                scalingRatio: this.pixelRatio,\n            });\n        }\n    };\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\n        var _this = this;\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\n            return;\n        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\n            // Resetting state\n            _this.renderHighlightedNodesFrame = null;\n            // Rendering\n            _this.renderHighlightedNodes();\n            _this.renderEdgeLabels();\n        });\n    };\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.render = function () {\n        var _this = this;\n        this.emit(\"beforeRender\");\n        var handleEscape = function () {\n            _this.emit(\"afterRender\");\n            return _this;\n        };\n        // If a render was scheduled, we cancel it\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n            this.needToProcess = false;\n            this.needToSoftProcess = false;\n        }\n        // First we need to resize\n        this.resize();\n        // Clearing the canvases\n        this.clear();\n        // Recomputing useful camera-related values:\n        this.updateCachedValues();\n        // If we have no nodes we can stop right there\n        if (!this.graph.order)\n            return handleEscape();\n        // TODO: improve this heuristic or move to the captor itself?\n        // TODO: deal with the touch captor here as well\n        var mouseCaptor = this.mouseCaptor;\n        var moving = this.camera.isAnimated() ||\n            mouseCaptor.isMoving ||\n            mouseCaptor.draggedEvents ||\n            mouseCaptor.currentWheelDirection;\n        // Then we need to extract a matrix from the camera\n        var cameraState = this.camera.getState();\n        var viewportDimensions = this.getDimensions();\n        var graphDimensions = this.getGraphDimensions();\n        var padding = this.getSetting(\"stagePadding\") || 0;\n        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\n        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\n        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\n        // Drawing nodes\n        for (var type in this.nodePrograms) {\n            var program = this.nodePrograms[type];\n            program.bind();\n            program.bufferData();\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                ratio: cameraState.ratio,\n                correctionRatio: this.correctionRatio / cameraState.ratio,\n                scalingRatio: this.pixelRatio,\n            });\n        }\n        // Drawing edges\n        if (!this.settings.hideEdgesOnMove || !moving) {\n            for (var type in this.edgePrograms) {\n                var program = this.edgePrograms[type];\n                program.bind();\n                program.bufferData();\n                program.render({\n                    matrix: this.matrix,\n                    width: this.width,\n                    height: this.height,\n                    ratio: cameraState.ratio,\n                    correctionRatio: this.correctionRatio / cameraState.ratio,\n                    scalingRatio: this.pixelRatio,\n                });\n            }\n        }\n        // Do not display labels on move per setting\n        if (this.settings.hideLabelsOnMove && moving)\n            return handleEscape();\n        this.renderLabels();\n        this.renderEdgeLabels();\n        this.renderHighlightedNodes();\n        return handleEscape();\n    };\n    /**\n     * Internal method used to update expensive and therefore cached values\n     * each time the camera state is updated.\n     */\n    Sigma.prototype.updateCachedValues = function () {\n        var ratio = this.camera.getState().ratio;\n        this.cameraSizeRatio = Math.sqrt(ratio);\n    };\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n    Sigma.prototype.getCamera = function () {\n        return this.camera;\n    };\n    /**\n     * Method returning the container DOM element.\n     *\n     * @return {HTMLElement}\n     */\n    Sigma.prototype.getContainer = function () {\n        return this.container;\n    };\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.getGraph = function () {\n        return this.graph;\n    };\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n    Sigma.prototype.getMouseCaptor = function () {\n        return this.mouseCaptor;\n    };\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n    Sigma.prototype.getTouchCaptor = function () {\n        return this.touchCaptor;\n    };\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getDimensions = function () {\n        return { width: this.width, height: this.height };\n    };\n    /**\n     * Method returning the current graph's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getGraphDimensions = function () {\n        var extent = this.customBBox || this.nodeExtent;\n        return {\n            width: extent.x[1] - extent.x[0] || 1,\n            height: extent.y[1] - extent.y[0] || 1,\n        };\n    };\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's usefull for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n     */\n    Sigma.prototype.getNodeDisplayData = function (key) {\n        var node = this.nodeDataCache[key];\n        return node ? Object.assign({}, node) : undefined;\n    };\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's usefull for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n    Sigma.prototype.getEdgeDisplayData = function (key) {\n        var edge = this.edgeDataCache[key];\n        return edge ? Object.assign({}, edge) : undefined;\n    };\n    /**\n     * Method returning a copy of the settings collection.\n     *\n     * @return {Settings} A copy of the settings collection.\n     */\n    Sigma.prototype.getSettings = function () {\n        return __assign({}, this.settings);\n    };\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n    Sigma.prototype.getSetting = function (key) {\n        return this.settings[key];\n    };\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setSetting = function (key, value) {\n        this.settings[key] = value;\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string}   key     - The setting key to set.\n     * @param  {function} updater - The update function.\n     * @return {Sigma}\n     */\n    Sigma.prototype.updateSetting = function (key, updater) {\n        this.settings[key] = updater(this.settings[key]);\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to resize the renderer.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resize = function () {\n        var previousWidth = this.width, previousHeight = this.height;\n        this.width = this.container.offsetWidth;\n        this.height = this.container.offsetHeight;\n        this.pixelRatio = (0, utils_1.getPixelRatio)();\n        if (this.width === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.width = 1;\n            else\n                throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seing this error.\");\n        }\n        if (this.height === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.height = 1;\n            else\n                throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seing this error.\");\n        }\n        // If nothing has changed, we can stop right here\n        if (previousWidth === this.width && previousHeight === this.height)\n            return this;\n        this.emit(\"resize\");\n        // Sizing dom elements\n        for (var id in this.elements) {\n            var element = this.elements[id];\n            element.style.width = this.width + \"px\";\n            element.style.height = this.height + \"px\";\n        }\n        // Sizing canvas contexts\n        for (var id in this.canvasContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            if (this.pixelRatio !== 1)\n                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\n        }\n        // Sizing WebGL contexts\n        for (var id in this.webGLContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n        }\n        return this;\n    };\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.clear = function () {\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.refresh = function () {\n        this.needToProcess = true;\n        this._refresh();\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data, at the next available frame.\n     * If this method has already been called this frame, then it will only render once at the next available frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRefresh = function () {\n        this.needToProcess = true;\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to zoom \"on the mouse cursor\".\n     *\n     * @param viewportTarget\n     * @param newRatio\n     * @return {CameraState}\n     */\n    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\n        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;\n        // TODO: handle max zoom\n        var ratioDiff = newRatio / ratio;\n        var center = {\n            x: this.width / 2,\n            y: this.height / 2,\n        };\n        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n        var graphCenterPosition = this.viewportToFramedGraph(center);\n        return {\n            angle: angle,\n            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n            ratio: newRatio,\n        };\n    };\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n    Sigma.prototype.viewRectangle = function () {\n        // TODO: reduce relative margin?\n        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;\n        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });\n        return {\n            x1: p1.x,\n            y1: p1.y,\n            x2: p2.x,\n            y2: p2.y,\n            height: p2.y - h.y,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n        var matrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0)\n                : this.matrix;\n        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\n        return {\n            x: ((1 + viewportPos.x) * this.width) / 2,\n            y: ((1 - viewportPos.y) * this.height) / 2,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n        var invMatrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true)\n                : this.invMatrix;\n        var res = (0, matrices_1.multiplyVec2)(invMatrix, {\n            x: (coordinates.x / this.width) * 2 - 1,\n            y: 1 - (coordinates.y / this.height) * 2,\n        });\n        if (isNaN(res.x))\n            res.x = 0;\n        if (isNaN(res.y))\n            res.y = 0;\n        return res;\n    };\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  viewportPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n    };\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  graphPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.graphToViewport = function (graphPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n    };\n    /**\n     * Method returning the graph's bounding box.\n     *\n     * @return {{ x: Extent, y: Extent }}\n     */\n    Sigma.prototype.getBBox = function () {\n        return (0, utils_1.graphExtent)(this.graph);\n    };\n    /**\n     * Method returning the graph's custom bounding box, if any.\n     *\n     * @return {{ x: Extent, y: Extent } | null}\n     */\n    Sigma.prototype.getCustomBBox = function () {\n        return this.customBBox;\n    };\n    /**\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCustomBBox = function (customBBox) {\n        this.customBBox = customBBox;\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.kill = function () {\n        var graph = this.graph;\n        // Emitting \"kill\" events so that plugins and such can cleanup\n        this.emit(\"kill\");\n        // Releasing events\n        this.removeAllListeners();\n        // Releasing camera handlers\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\n        // Releasing DOM events & captors\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n        this.mouseCaptor.kill();\n        this.touchCaptor.kill();\n        // Releasing graph handlers\n        graph.removeListener(\"nodeAdded\", this.activeListeners.dropNodeGraphUpdate);\n        graph.removeListener(\"nodeDropped\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n        // Releasing cache & state\n        this.quadtree = new quadtree_1.default();\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        this.highlightedNodes.clear();\n        // Clearing frames\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        if (this.renderHighlightedNodesFrame) {\n            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\n            this.renderHighlightedNodesFrame = null;\n        }\n        // Destroying canvases\n        var container = this.container;\n        while (container.firstChild)\n            container.removeChild(container.firstChild);\n    };\n    /**\n     * Method used to scale the given size according to the camera's ratio, i.e.\n     * zooming state.\n     *\n     * @param  {number} size - The size to scale (node size, edge thickness etc.).\n     * @return {number}      - The scaled size.\n     */\n    Sigma.prototype.scaleSize = function (size) {\n        return size / this.cameraSizeRatio;\n    };\n    /**\n     * Method that returns the collection of all used canvases.\n     * At the moment, the instantiated canvases are the following, and in the\n     * following order in the DOM:\n     * - `edges`\n     * - `nodes`\n     * - `edgeLabels`\n     * - `labels`\n     * - `hovers`\n     * - `hoverNodes`\n     * - `mouse`\n     *\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n     */\n    Sigma.prototype.getCanvases = function () {\n        return __assign({}, this.elements);\n    };\n    return Sigma;\n}(types_1.TypedEventEmitter));\nexports.default = Sigma;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedEventEmitter = void 0;\n/**\n * Sigma.js Types\n * ===============\n *\n * Various type declarations used throughout the library.\n * @module\n */\nvar events_1 = require(\"events\");\nvar TypedEventEmitter = /** @class */ (function (_super) {\n    __extends(TypedEventEmitter, _super);\n    function TypedEventEmitter() {\n        var _this = _super.call(this) || this;\n        _this.rawEmitter = _this;\n        return _this;\n    }\n    return TypedEventEmitter;\n}(events_1.EventEmitter));\nexports.TypedEventEmitter = TypedEventEmitter;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = require(\"./index\");\nvar easings_1 = __importDefault(require(\"./easings\"));\nexports.ANIMATE_DEFAULTS = {\n    easing: \"quadraticInOut\",\n    duration: 150,\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    var start = Date.now();\n    var startPositions = {};\n    for (var node in targets) {\n        var attrs = targets[node];\n        startPositions[node] = {};\n        for (var k in attrs)\n            startPositions[node][k] = graph.getNodeAttribute(node, k);\n    }\n    var frame = null;\n    var step = function () {\n        frame = null;\n        var p = (Date.now() - start) / options.duration;\n        if (p >= 1) {\n            // Animation is done\n            for (var node in targets) {\n                var attrs = targets[node];\n                // We use given values to avoid precision issues and for convenience\n                for (var k in attrs)\n                    graph.setNodeAttribute(node, k, attrs[k]);\n            }\n            if (typeof callback === \"function\")\n                callback();\n            return;\n        }\n        p = easing(p);\n        for (var node in targets) {\n            var attrs = targets[node];\n            var s = startPositions[node];\n            for (var k in attrs)\n                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n        }\n        frame = (0, index_1.requestFrame)(step);\n    };\n    step();\n    return function () {\n        if (frame)\n            (0, index_1.cancelFrame)(frame);\n    };\n}\nexports.animateNodes = animateNodes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTML_COLORS = void 0;\nexports.HTML_COLORS = {\n    black: \"#000000\",\n    silver: \"#C0C0C0\",\n    gray: \"#808080\",\n    grey: \"#808080\",\n    white: \"#FFFFFF\",\n    maroon: \"#800000\",\n    red: \"#FF0000\",\n    purple: \"#800080\",\n    fuchsia: \"#FF00FF\",\n    green: \"#008000\",\n    lime: \"#00FF00\",\n    olive: \"#808000\",\n    yellow: \"#FFFF00\",\n    navy: \"#000080\",\n    blue: \"#0000FF\",\n    teal: \"#008080\",\n    aqua: \"#00FFFF\",\n    darkblue: \"#00008B\",\n    mediumblue: \"#0000CD\",\n    darkgreen: \"#006400\",\n    darkcyan: \"#008B8B\",\n    deepskyblue: \"#00BFFF\",\n    darkturquoise: \"#00CED1\",\n    mediumspringgreen: \"#00FA9A\",\n    springgreen: \"#00FF7F\",\n    cyan: \"#00FFFF\",\n    midnightblue: \"#191970\",\n    dodgerblue: \"#1E90FF\",\n    lightseagreen: \"#20B2AA\",\n    forestgreen: \"#228B22\",\n    seagreen: \"#2E8B57\",\n    darkslategray: \"#2F4F4F\",\n    darkslategrey: \"#2F4F4F\",\n    limegreen: \"#32CD32\",\n    mediumseagreen: \"#3CB371\",\n    turquoise: \"#40E0D0\",\n    royalblue: \"#4169E1\",\n    steelblue: \"#4682B4\",\n    darkslateblue: \"#483D8B\",\n    mediumturquoise: \"#48D1CC\",\n    indigo: \"#4B0082\",\n    darkolivegreen: \"#556B2F\",\n    cadetblue: \"#5F9EA0\",\n    cornflowerblue: \"#6495ED\",\n    rebeccapurple: \"#663399\",\n    mediumaquamarine: \"#66CDAA\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    slateblue: \"#6A5ACD\",\n    olivedrab: \"#6B8E23\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    mediumslateblue: \"#7B68EE\",\n    lawngreen: \"#7CFC00\",\n    chartreuse: \"#7FFF00\",\n    aquamarine: \"#7FFFD4\",\n    skyblue: \"#87CEEB\",\n    lightskyblue: \"#87CEFA\",\n    blueviolet: \"#8A2BE2\",\n    darkred: \"#8B0000\",\n    darkmagenta: \"#8B008B\",\n    saddlebrown: \"#8B4513\",\n    darkseagreen: \"#8FBC8F\",\n    lightgreen: \"#90EE90\",\n    mediumpurple: \"#9370DB\",\n    darkviolet: \"#9400D3\",\n    palegreen: \"#98FB98\",\n    darkorchid: \"#9932CC\",\n    yellowgreen: \"#9ACD32\",\n    sienna: \"#A0522D\",\n    brown: \"#A52A2A\",\n    darkgray: \"#A9A9A9\",\n    darkgrey: \"#A9A9A9\",\n    lightblue: \"#ADD8E6\",\n    greenyellow: \"#ADFF2F\",\n    paleturquoise: \"#AFEEEE\",\n    lightsteelblue: \"#B0C4DE\",\n    powderblue: \"#B0E0E6\",\n    firebrick: \"#B22222\",\n    darkgoldenrod: \"#B8860B\",\n    mediumorchid: \"#BA55D3\",\n    rosybrown: \"#BC8F8F\",\n    darkkhaki: \"#BDB76B\",\n    mediumvioletred: \"#C71585\",\n    indianred: \"#CD5C5C\",\n    peru: \"#CD853F\",\n    chocolate: \"#D2691E\",\n    tan: \"#D2B48C\",\n    lightgray: \"#D3D3D3\",\n    lightgrey: \"#D3D3D3\",\n    thistle: \"#D8BFD8\",\n    orchid: \"#DA70D6\",\n    goldenrod: \"#DAA520\",\n    palevioletred: \"#DB7093\",\n    crimson: \"#DC143C\",\n    gainsboro: \"#DCDCDC\",\n    plum: \"#DDA0DD\",\n    burlywood: \"#DEB887\",\n    lightcyan: \"#E0FFFF\",\n    lavender: \"#E6E6FA\",\n    darksalmon: \"#E9967A\",\n    violet: \"#EE82EE\",\n    palegoldenrod: \"#EEE8AA\",\n    lightcoral: \"#F08080\",\n    khaki: \"#F0E68C\",\n    aliceblue: \"#F0F8FF\",\n    honeydew: \"#F0FFF0\",\n    azure: \"#F0FFFF\",\n    sandybrown: \"#F4A460\",\n    wheat: \"#F5DEB3\",\n    beige: \"#F5F5DC\",\n    whitesmoke: \"#F5F5F5\",\n    mintcream: \"#F5FFFA\",\n    ghostwhite: \"#F8F8FF\",\n    salmon: \"#FA8072\",\n    antiquewhite: \"#FAEBD7\",\n    linen: \"#FAF0E6\",\n    lightgoldenrodyellow: \"#FAFAD2\",\n    oldlace: \"#FDF5E6\",\n    magenta: \"#FF00FF\",\n    deeppink: \"#FF1493\",\n    orangered: \"#FF4500\",\n    tomato: \"#FF6347\",\n    hotpink: \"#FF69B4\",\n    coral: \"#FF7F50\",\n    darkorange: \"#FF8C00\",\n    lightsalmon: \"#FFA07A\",\n    orange: \"#FFA500\",\n    lightpink: \"#FFB6C1\",\n    pink: \"#FFC0CB\",\n    gold: \"#FFD700\",\n    peachpuff: \"#FFDAB9\",\n    navajowhite: \"#FFDEAD\",\n    moccasin: \"#FFE4B5\",\n    bisque: \"#FFE4C4\",\n    mistyrose: \"#FFE4E1\",\n    blanchedalmond: \"#FFEBCD\",\n    papayawhip: \"#FFEFD5\",\n    lavenderblush: \"#FFF0F5\",\n    seashell: \"#FFF5EE\",\n    cornsilk: \"#FFF8DC\",\n    lemonchiffon: \"#FFFACD\",\n    floralwhite: \"#FFFAF0\",\n    snow: \"#FFFAFA\",\n    lightyellow: \"#FFFFE0\",\n    ivory: \"#FFFFF0\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) { return k; };\nexports.linear = linear;\nvar quadraticIn = function (k) { return k * k; };\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) { return k * (2 - k); };\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k;\n    return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) { return k * k * k; };\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) { return --k * k * k + 1; };\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n    linear: exports.linear,\n    quadraticIn: exports.quadraticIn,\n    quadraticOut: exports.quadraticOut,\n    quadraticInOut: exports.quadraticInOut,\n    cubicIn: exports.cubicIn,\n    cubicOut: exports.cubicOut,\n    cubicInOut: exports.cubicInOut,\n};\nexports.default = easings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;\n/**\n * This helper returns true is the pixel at (x,y) in the given WebGL context is\n * colored, and false else.\n */\nfunction isPixelColored(gl, x, y) {\n    var pixels = new Uint8Array(4);\n    gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return pixels[3] > 0;\n}\nexports.isPixelColored = isPixelColored;\n/**\n * This helper checks whether or not a point (x, y) collides with an\n * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in\n * pixels.\n */\nfunction doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {\n    // Check first if point is out of the rectangle which opposite corners are the\n    // source and the target, rectangle we expand by `thickness` in every\n    // directions:\n    if (x < xS - thickness && x < xT - thickness)\n        return false;\n    if (y < yS - thickness && y < yT - thickness)\n        return false;\n    if (x > xS + thickness && x > xT + thickness)\n        return false;\n    if (y > yS + thickness && y > yT + thickness)\n        return false;\n    // Check actual collision now: Since we now the point is in this big rectangle\n    // we \"just\" need to check that the distance between the point and the line\n    // connecting the source and the target is less than `thickness`:\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));\n    return distance < thickness / 2;\n}\nexports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        // TODO: parse hex with alpha?\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n    if (z === void 0) { z = 1; }\n    var a00 = a[0];\n    var a01 = a[1];\n    var a10 = a[3];\n    var a11 = a[4];\n    var a20 = a[6];\n    var a21 = a[7];\n    var b0 = b.x;\n    var b1 = b.y;\n    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };\n}\nexports.multiplyVec2 = multiplyVec2;\n","module.exports = require('./lib/xml-writer.js');\n","\nfunction isFalse(s) {\n  return typeof s !== 'number' && !s;\n}\n\nfunction strval(s) {\n  if (typeof s == 'string') {\n    return s;\n  }\n  else if (typeof s == 'number') {\n    return s+'';\n  }\n  else if (typeof s == 'function') {\n    return s();\n  }\n  else if (s instanceof XMLWriter) {\n    return s.toString();\n  }\n  else throw Error('Bad Parameter');\n}\n\nfunction XMLWriter(indent, callback) {\n\n    if (!(this instanceof XMLWriter)) {\n        return new XMLWriter();\n    }\n\n    this.name_regex = /[_:A-Za-z][-._:A-Za-z0-9]*/;\n    this.indent = indent ? true : false;\n    this.indentString = this.indent && typeof indent === 'string' ? indent : '    ';\n    this.output = '';\n    this.stack = [];\n    this.tags = 0;\n    this.attributes = 0;\n    this.attribute = 0;\n    this.texts = 0;\n    this.comment = 0;\n    this.dtd = 0;\n    this.root = '';\n    this.pi = 0;\n    this.cdata = 0;\n    this.started_write = false;\n    this.writer;\n    this.writer_encoding = 'UTF-8';\n\n    if (typeof callback == 'function') {\n        this.writer = callback;\n    } else {\n        this.writer = function (s, e) {\n            this.output += s;\n        }\n    }\n}\n\nXMLWriter.prototype = {\n    toString : function () {\n        this.flush();\n        return this.output;\n    },\n\n    indenter : function () {\n      if (this.indent) {\n        this.write('\\n');\n        for (var i = 1; i < this.tags; i++) {\n          this.write(this.indentString);\n        }\n      }\n    },\n\n    write : function () {\n        for (var i = 0; i < arguments.length; i++) {\n            this.writer(arguments[i], this.writer_encoding);\n        }\n    },\n\n\n    flush : function () {\n        for (var i = this.tags; i > 0; i--) {\n            this.endElement();\n        }\n        this.tags = 0;\n    },\n\n    startDocument : function (version, encoding, standalone) {\n        if (this.tags || this.attributes) return this;\n\n        this.startPI('xml');\n        this.startAttribute('version');\n        this.text(typeof version == \"string\" ? version : \"1.0\");\n        this.endAttribute();\n        if (typeof encoding == \"string\") {\n            this.startAttribute('encoding');\n            this.text(encoding);\n            this.endAttribute();\n            this.writer_encoding = encoding;\n        }\n        if (standalone) {\n            this.startAttribute('standalone');\n            this.text(\"yes\");\n            this.endAttribute();\n        }\n        this.endPI();\n        if (!this.indent) {\n          this.write('\\n');\n        }\n        return this;\n    },\n\n    endDocument : function () {\n        if (this.attributes) this.endAttributes();\n        return this;\n    },\n\n    writeElement : function (name, content) {\n        return this.startElement(name).text(content).endElement();\n    },\n\n    writeElementNS : function (prefix, name, uri, content) {\n        if (!content) {\n            content = uri;\n        }\n        return this.startElementNS(prefix, name, uri).text(content).endElement();\n    },\n\n    startElement : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.tags === 0 && this.root && this.root !== name) throw Error('Invalid Parameter');\n        if (this.attributes) this.endAttributes();\n        ++this.tags;\n        this.texts = 0;\n        if (this.stack.length > 0)\n          this.stack[this.stack.length-1].containsTag = true;\n\n        this.stack.push({\n            name: name,\n            tags: this.tags\n        });\n        if (this.started_write) this.indenter();\n        this.write('<', name);\n        this.startAttributes();\n        this.started_write = true;\n        return this;\n    },\n    startElementNS : function (prefix, name, uri) {\n        prefix = strval(prefix);\n        name = strval(name);\n\n        if (!prefix.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.attributes) this.endAttributes();\n        ++this.tags;\n        this.texts = 0;\n        if (this.stack.length > 0)\n          this.stack[this.stack.length-1].containsTag = true;\n\n        this.stack.push({\n            name: prefix + ':' + name,\n            tags: this.tags\n        });\n        if (this.started_write) this.indenter();\n        this.write('<', prefix + ':' + name);\n        this.startAttributes();\n        this.started_write = true;\n        return this;\n    },\n\n    endElement : function () {\n        if (!this.tags) return this;\n        var t = this.stack.pop();\n        if (this.attributes > 0) {\n            if (this.attribute) {\n                if (this.texts) this.endAttribute();\n                this.endAttribute();\n            }\n            this.write('/');\n            this.endAttributes();\n        } else {\n            if (t.containsTag) this.indenter();\n            this.write('</', t.name, '>');\n        }\n        --this.tags;\n        this.texts = 0;\n        return this;\n    },\n\n    writeAttribute : function (name, content) {\n        if (typeof content == 'function') {\n          content = content();\n        }\n        if (isFalse(content)) {\n           return this;\n        }\n        return this.startAttribute(name).text(content).endAttribute();\n    },\n    writeAttributeNS : function (prefix, name, uri, content) {\n        if (!content) {\n            content = uri;\n        }\n        if (typeof content == 'function') {\n          content = content();\n        }\n        if (isFalse(content)) {\n          return this;\n        }\n        return this.startAttributeNS(prefix, name, uri).text(content).endAttribute();\n    },\n\n    startAttributes : function () {\n        this.attributes = 1;\n        return this;\n    },\n\n    endAttributes : function () {\n        if (!this.attributes) return this;\n        if (this.attribute) this.endAttribute();\n        this.attributes = 0;\n        this.attribute = 0;\n        this.texts = 0;\n        this.write('>');\n        return this;\n    },\n\n    startAttribute : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!this.attributes && !this.pi) return this;\n        if (this.attribute) return this;\n        this.attribute = 1;\n        this.write(' ', name, '=\"');\n        return this;\n    },\n    startAttributeNS : function (prefix, name, uri) {\n        prefix = strval(prefix);\n        name = strval(name);\n\n        if (!prefix.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!this.attributes && !this.pi) return this;\n        if (this.attribute) return this;\n        this.attribute = 1;\n        this.write(' ', prefix + ':' + name, '=\"');\n        return this;\n    },\n    endAttribute : function () {\n        if (!this.attribute) return this;\n        this.attribute = 0;\n        this.texts = 0;\n        this.write('\"');\n        return this;\n    },\n\n    text : function (content) {\n        content = strval(content);\n        if (!this.tags && !this.comment && !this.pi && !this.cdata) return this;\n        if (this.attributes && this.attribute) {\n            ++this.texts;\n            this.write(content\n                       .replace(/&/g, '&amp;')\n                       .replace(/</g, '&lt;')\n                       .replace(/\"/g, '&quot;')\n                       .replace(/\\t/g, '&#x9;')\n                       .replace(/\\n/g, '&#xA;')\n                       .replace(/\\r/g, '&#xD;')\n                      );\n            return this;\n        } else if (this.attributes && !this.attribute) {\n            this.endAttributes();\n        }\n        if (this.comment || this.cdata) {\n            this.write(content);\n        }\n        else {\n          this.write(content.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;'));\n        }\n        ++this.texts;\n        this.started_write = true;\n        return this;\n    },\n\n    writeComment : function (content) {\n        return this.startComment().text(content).endComment();\n    },\n\n    startComment : function () {\n        if (this.comment) return this;\n        if (this.attributes) this.endAttributes();\n        this.indenter();\n        this.write('<!--');\n        this.comment = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endComment : function () {\n        if (!this.comment) return this;\n        this.write('-->');\n        this.comment = 0;\n        return this;\n    },\n\n    writeDocType : function (name, pubid, sysid, subset) {\n        return this.startDocType(name, pubid, sysid, subset).endDocType()\n    },\n\n    startDocType : function (name, pubid, sysid, subset) {\n        if (this.dtd || this.tags) return this;\n\n        name = strval(name);\n        pubid = pubid ? strval(pubid) : pubid;\n        sysid = sysid ? strval(sysid) : sysid;\n        subset = subset ? strval(subset) : subset;\n\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (pubid && !pubid.match(/^[\\w\\-][\\w\\s\\-\\/\\+\\:\\.]*/)) throw Error('Invalid Parameter');\n        if (sysid && !sysid.match(/^[\\w\\.][\\w\\-\\/\\\\\\:\\.]*/)) throw Error('Invalid Parameter');\n        if (subset && !subset.match(/[\\w\\s\\<\\>\\+\\.\\!\\#\\-\\?\\*\\,\\(\\)\\|]*/)) throw Error('Invalid Parameter');\n\n        pubid = pubid ? ' PUBLIC \"' + pubid + '\"' : (sysid) ? ' SYSTEM' : '';\n        sysid = sysid ? ' \"' + sysid + '\"' : '';\n        subset = subset ? ' [' + subset + ']': '';\n\n        if (this.started_write) this.indenter();\n        this.write('<!DOCTYPE ', name, pubid, sysid, subset);\n        this.root = name;\n        this.dtd = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endDocType : function () {\n        if (!this.dtd) return this;\n        this.write('>');\n        return this;\n    },\n\n    writePI : function (name, content) {\n        return this.startPI(name).text(content).endPI()\n    },\n\n    startPI : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.pi) return this;\n        if (this.attributes) this.endAttributes();\n        if (this.started_write) this.indenter();\n        this.write('<?', name);\n        this.pi = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endPI : function () {\n        if (!this.pi) return this;\n        this.write('?>');\n        this.pi = 0;\n        return this;\n    },\n\n    writeCData : function (content) {\n        return this.startCData().text(content).endCData();\n    },\n\n    startCData : function () {\n        if (this.cdata) return this;\n        if (this.attributes) this.endAttributes();\n        this.indenter();\n        this.write('<![CDATA[');\n        this.cdata = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endCData : function () {\n        if (!this.cdata) return this;\n        this.write(']]>');\n        this.cdata = 0;\n        return this;\n    },\n\n    writeRaw : function(content) {\n        content = strval(content);\n        if (!this.tags && !this.comment && !this.pi && !this.cdata) return this;\n        if (this.attributes && this.attribute) {\n            ++this.texts;\n            this.write(content.replace('&', '&amp;').replace('\"', '&quot;'));\n            return this;\n        } else if (this.attributes && !this.attribute) {\n            this.endAttributes();\n        }\n        ++this.texts;\n        this.write(content);\n        this.started_write = true;\n        return this;\n    }\n\n}\n\nmodule.exports = XMLWriter;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","/**\n * This example shows how to load a GEXF graph file (using the dedicated\n * graphology parser), and display it with some basic map features: Zoom in and\n * out buttons, reset zoom button, and a slider to increase or decrease the\n * quantity of labels displayed on screen.\n */\n\nimport Sigma from \"sigma\";\nimport Graph from \"graphology\";\nimport { parse } from \"graphology-gexf/browser\";\nimport { Coordinates, EdgeDisplayData, NodeDisplayData } from \"sigma/types\";\n\n// Load external GEXF file:\nfetch(\"./congress2022v11.gexf\")\n  .then((res) => res.text())\n  .then((gexf) => {\n    // Parse GEXF string:\n    const graph = parse(Graph, gexf);\n\n    // Retrieve some useful DOM elements:\n    const container = document.getElementById(\"sigma-container\") as HTMLElement;\n    const zoomInBtn = document.getElementById(\"zoom-in\") as HTMLButtonElement;\n    const zoomOutBtn = document.getElementById(\"zoom-out\") as HTMLButtonElement;\n    const zoomResetBtn = document.getElementById(\n      \"zoom-reset\"\n    ) as HTMLButtonElement;\n    const labelsThresholdRange = document.getElementById(\n      \"labels-threshold\"\n    ) as HTMLInputElement;\n    const searchInput = document.getElementById(\n      \"search-input\"\n    ) as HTMLInputElement;\n    const searchSuggestions = document.getElementById(\n      \"suggestions\"\n    ) as HTMLDataListElement;\n\n    // Instanciate sigma:\n    const renderer = new Sigma(graph, container, {\n      minCameraRatio: 0.01,\n      maxCameraRatio: 3,\n      allowInvalidContainer: true,\n      renderEdgeLabels: true\n    });\n    const camera = renderer.getCamera();\n\n    // Bind zoom manipulation buttons\n    zoomInBtn.addEventListener(\"click\", () => {\n      camera.animatedZoom({ duration: 600 });\n    });\n    zoomOutBtn.addEventListener(\"click\", () => {\n      camera.animatedUnzoom({ duration: 600 });\n    });\n    zoomResetBtn.addEventListener(\"click\", () => {\n      camera.animatedReset({ duration: 600 });\n    });\n\n    // Type and declare internal state:\n    interface State {\n      hoveredNode?: string;\n      searchQuery: string;\n\n      // State derived from query:\n      selectedNode?: string;\n      suggestions?: Set<string>;\n\n      // State derived from hovered node:\n      hoveredNeighbors?: Set<string>;\n    }\n    const state: State = { searchQuery: \"\" };\n\n    // Feed the datalist autocomplete values:\n    searchSuggestions.innerHTML = graph\n      .nodes()\n      .map(\n        (node) =>\n          `<option value=\"${graph.getNodeAttribute(node, \"label\")}\"></option>`\n      )\n      .join(\"\\n\");\n\n    // Actions:\n    function setSearchQuery(query: string) {\n      state.searchQuery = query;\n\n      if (searchInput.value !== query) searchInput.value = query;\n\n      if (query) {\n        const lcQuery = query.toLowerCase();\n        const suggestions = graph\n          .nodes()\n          .map((n) => ({\n            id: n,\n            label: graph.getNodeAttribute(n, \"label\") as string\n          }))\n          .filter(({ label }) => label.toLowerCase().includes(lcQuery));\n\n        // If we have a single perfect match, them we remove the suggestions, and\n        // we consider the user has selected a node through the datalist\n        // autocomplete:\n        if (suggestions.length === 1 && suggestions[0].label === query) {\n          state.selectedNode = suggestions[0].id;\n          setHoveredNode(suggestions[0].id)\n          state.suggestions = undefined;\n          clickMode = true\n          clickedNode = suggestions[0].id\n\n          // Move the camera to center it on the selected node:\n          const nodePosition = renderer.getNodeDisplayData(\n            state.selectedNode\n          ) as Coordinates;\n          renderer.getCamera().animate(nodePosition, {\n            duration: 500\n          });\n        }\n        // Else, we display the suggestions list:\n        else {\n          state.selectedNode = undefined;\n          state.suggestions = new Set(suggestions.map(({ id }) => id));\n        }\n      }\n      // If the query is empty, then we reset the selectedNode / suggestions state:\n      else {\n        state.selectedNode = undefined;\n        state.suggestions = undefined;\n      }\n\n      // Refresh rendering:\n      renderer.refresh();\n    }\n\n    function setHoveredNode(node?: string) {\n      if (node) {\n        state.hoveredNode = node;\n        state.hoveredNeighbors = new Set(graph.neighbors(node));\n      } else {\n        state.hoveredNode = undefined;\n        state.hoveredNeighbors = undefined;\n      }\n\n      // Refresh rendering:\n      renderer.refresh();\n    }\n\n    // Bind search input interactions:\n    searchInput.addEventListener(\"input\", () => {\n      setSearchQuery(searchInput.value || \"\");\n    });\n    searchInput.addEventListener(\"blur\", () => {\n      setSearchQuery(\"\");\n    });\n\n    var clickedNode = undefined;\n    var clickMode = false;\n    // Bind graph interactions:\n    renderer.on(\"click\", ({ node }) => {\n      if (clickedNode === node) {\n        clickedNode = undefined;\n        setHoveredNode(undefined);\n        clickMode = false;\n      } else {\n        clickedNode = node;\n        clickMode = true;\n        setHoveredNode(node);\n      }\n    });\n    renderer.on(\"enterNode\", ({ node }) => {\n      if (clickMode === false) {\n        setHoveredNode(node);\n      }\n    });\n    renderer.on(\"leaveNode\", ({ node }) => {\n      if (clickMode === false) {\n        if (clickedNode !== node) {\n          setHoveredNode(undefined);\n        }\n      }\n    });\n    renderer.on(\"doubleClick\", ({ node }) => {\n      window.open(\"https://www.opensecrets.org/search?q=\" + node);\n    });\n\n    renderer.setSetting(\"nodeReducer\", (node, data) => {\n      const res: Partial<NodeDisplayData> = { ...data };\n\n      if (\n        state.hoveredNeighbors &&\n        !state.hoveredNeighbors.has(node) &&\n        state.hoveredNode !== node\n      ) {\n        res.label = \"\";\n        res.color = \"#f6f6f6\";\n      }\n\n      if (state.selectedNode === node) {\n        res.highlighted = true;\n      } else if (state.suggestions && !state.suggestions.has(node)) {\n        res.label = \"\";\n        res.color = \"#f6f6f6\";\n      }\n\n      if (state.suggestions && state.suggestions.has(node)) {\n        res.highlighted = true;\n        res.label = graph.getNodeAttribute(node, \"label\")\n        res.color = graph.getNodeAttribute(node, \"color\")\n      }\n\n      return res;\n    });\n\n    // Render edges accordingly to the internal state:\n    // 1. If a node is hovered, the edge is hidden if it is not connected to the\n    //    node\n    // 2. If there is a query, the edge is only visible if it connects two\n    //    suggestions\n    renderer.setSetting(\"edgeReducer\", (edge, data) => {\n      const res: Partial<EdgeDisplayData> = { ...data };\n\n      if (state.hoveredNode && !graph.hasExtremity(edge, state.hoveredNode)) {\n        res.hidden = true;\n      }\n\n      if (\n        state.suggestions &&\n        (!state.suggestions.has(graph.source(edge)) ||\n          !state.suggestions.has(graph.target(edge)))\n      ) {\n        res.hidden = true;\n      }\n\n      return res;\n    });\n  });\n"],"names":["module","exports","array","values","l2","length","l1","i","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","warned","w","Error","String","count","console","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","parse","createParserFunction","require","DOMParser","Document","cast","split","SANITIZE_PATTERN","sanitizeTagName","tagName","replace","trim","isGraphConstructor","mergeEdge","toMixed","toMulti","getFirstMatchingVizTag","element","vizElement","getElementsByTagName","getElementsByTagNameNS","extractModel","elements","defaultElement","id","model","defaults","l","getAttribute","title","textContent","collectAttributes","data","label","weight","valueElement","k","valueElements","x","y","z","color","a","r","g","b","toRGBString","size","shape","thickness","Graph","source","options","mergeResult","result","attributes","s","t","addMissingNodes","xmlDoc","parseFromString","GRAPH_ELEMENT","META_ELEMENT","META_ELEMENTS","childNodes","NODE_ELEMENTS","EDGE_ELEMENTS","MODEL_ELEMENTS","NODE_MODEL_ELEMENTS","EDGE_MODEL_ELEMENTS","DEFAULT_EDGE_TYPE","NODE_MODEL","NODE_DEFAULT_ATTRIBUTES","EDGE_MODEL","EDGE_DEFAULT_ATTRIBUTES","graph","meta","nodeName","toLowerCase","collectMeta","lastModifiedDate","replaceAttributes","setAttribute","addNode","multi","hasDirectedEdge","hasUndirectedEdge","isGraph","inferType","XMLWriter","VIZ_RESERVED_NAMES","Set","RGBA_TEST","RGBA_MATCH","CSSColorToRGBA","parseInt","test","match","DEFAULT_ELEMENT_FORMATTER","output","has","viz","isEmptyValue","detectValueType","isArray","number","join","inferModel","writeModel","writer","modelClass","startElement","writeAttribute","endElement","writeElements","edgeType","emptyModel","undirected","defaultEdgeType","startElementNS","DEFAULTS","encoding","pretty","formatNode","formatEdge","indent","startDocument","metaTagName","graphAttribute","graphAttributes","getAttributes","writeElement","nodes","format","order","forEachNode","node","attr","collectNodeData","edges","reducer","forEachEdge","edge","_sa","_ta","collectEdgeData","nodeModel","edgeModel","toString","mergeUndirectedEdge","mergeUndirectedEdgeWithKey","mergeDirectedEdge","mergeDirectedEdgeWithKey","declaredType","directedSize","undirectedSize","addUndirectedEdgeWithKey","dropNode","assign","getMatchingEdge","sourceData","_nodes","out","isPlainObject","_typeof","constructor","isEmpty","o","privateProperty","configurable","writable","readOnlyProperty","descriptor","validateHints","hints","eventsModule","Iterator","next","Symbol","iterator","Iterator$2","of","done","empty","fromSequence","sequence","is","support","ArrayBuffer","require$$0","require$$1","ARRAY_BUFFER_SUPPORT","SYMBOL_SUPPORT","isView","iter","take","iterable","step","Infinity","GraphError","_this","_Error","_inheritsLoose","_wrapNativeSuper","InvalidArgumentsGraphError","_this2","captureStackTrace","NotFoundGraphError","_this3","UsageGraphError","_this4","MixedNodeData","clear","DirectedNodeData","UndirectedNodeData","EdgeData","findRelevantNodeData","method","mode","nodeOrEdge","nameOrEdge","add1","add2","nodeData","edgeData","arg1","arg2","_edges","inDegree","outDegree","undirectedDegree","undirectedLoops","directedLoops","in","attach","outKey","inKey","attachMulti","adj","head","previous","detach","detachMulti","NODE_ATTRIBUTES_METHODS","attacher","Class","_findRelevantNodeData","_findRelevantNodeData3","hasOwnProperty","_findRelevantNodeData4","_findRelevantNodeData5","updater","_findRelevantNodeData6","_findRelevantNodeData7","_findRelevantNodeData8","_findRelevantNodeData9","EDGE_ATTRIBUTES_METHODS","chain","iterables","current","EDGES_ITERATION","direction","forEachSimple","breakable","object","callback","avoid","shouldBreak","forEachMulti","createIterator","sourceAttributes","targetAttributes","forEachForKeySimple","targetData","forEachForKeyMulti","createIteratorForKey","createEdgeArray","from","mask","shouldFilter","createEdgeIterator","forEachEdgeForNode","found","fn","createEdgeArrayForNode","createEdgeIteratorForNode","forEachEdgeForPath","createEdgeArrayForPath","createEdgeIteratorForPath","NEIGHBORS_ITERATION","CompositeSetWrapper","A","B","forEachInObjectOnce","visited","neighborData","forEachNeighbor","wrap","createDedupedObjectIterator","neighbor","attachNeighborArrayCreator","description","neighbors","attachNeighborIteratorCreator","iteratorName","forEachAdjacency","assymetric","disconnectedNodes","hasEdges","validateSerializedNode","validateSerializedEdge","INSTANCE_ID","Math","floor","random","TYPES","EMITTER_PROPS","allowSelfLoops","unsafeAddNode","NodeDataClass","addEdge","mustGenerateKey","eventData","_edgeKeyGenerator","isSelfLoop","_undirectedSelfLoopCount","_directedSelfLoopCount","_undirectedSize","_directedSize","asUpdater","alreadyExistingEdgeData","info","oldAttributes","sourceWasAdded","targetWasAdded","dropEdgeFromData","delete","_EventEmitter","_assertThisInitialized","instancePrefix","edgeId","Map","availableEdgeKey","forEach","prop","_options","_proto","_resetInstanceCounters","hasNode","hasEdge","directedEdge","undirectedEdge","areDirectedNeighbors","areOutNeighbors","areInNeighbors","areUndirectedNeighbors","areNeighbors","areInboundNeighbors","areOutboundNeighbors","directedDegree","inboundDegree","degree","outboundDegree","inDegreeWithoutSelfLoops","outDegreeWithoutSelfLoops","directedDegreeWithoutSelfLoops","undirectedDegreeWithoutSelfLoops","inboundDegreeWithoutSelfLoops","loops","outboundDegreeWithoutSelfLoops","degreeWithoutSelfLoops","extremities","opposite","hasExtremity","isUndirected","isDirected","mergeNode","updateNode","dropEdge","dropDirectedEdge","dropUndirectedEdge","clearEdges","_attributes","hasAttribute","updateAttribute","removeAttribute","mergeAttributes","updateAttributes","updateEachNodeAttributes","updateEachEdgeAttributes","forEachAdjacencyEntry","forEachAdjacencyEntryWithOrphans","forEachAssymetricAdjacencyEntry","forEachAssymetricAdjacencyEntryWithOrphans","findNode","mapNodes","someNode","everyNode","filterNodes","reduceNodes","initialValue","accumulator","nodeEntries","serialized","import","merge","e","u","addDirectedEdgeWithKey","undirectedByDefault","_edge$undirected","addUndirectedEdge","addDirectedEdge","nullCopy","emptyCopy","toJSON","export","inspect","multiIndex","tmp","desc","startsWith","dummy","for","verb","generateKey","_ref","forEachName","toUpperCase","mapName","ea","sa","ta","filterName","reduceName","findEdgeName","someName","everyName","originalName","capitalizedSingular","findName","DirectedGraph","finalOptions","_Graph","UndirectedGraph","_Graph2","MultiGraph","_Graph3","MultiDirectedGraph","_Graph4","MultiUndirectedGraph","_Graph5","attachStaticFromMethod","instance","__extends","extendStatics","d","setPrototypeOf","__proto__","p","__","__importDefault","mod","__esModule","animate_1","easings_1","utils_1","types_1","DEFAULT_ZOOMING_RATIO","Camera","_super","angle","ratio","minRatio","maxRatio","nextFrame","previousState","enabled","getState","setState","enable","disable","hasState","getPreviousState","getBoundedRatio","max","min","validateState","validatedState","isAnimated","validState","animate","opts","ANIMATE_DEFAULTS","easing","default","start","Date","now","initialState","duration","animationCallback","coefficient","newState","requestFrame","cancelFrame","animatedZoom","factorOrOptions","factor","animatedUnzoom","animatedReset","TypedEventEmitter","__assign","getWheelDelta","getTouchCoords","getTouchesArray","getWheelCoords","getMouseCoords","getPosition","dom","bbox","getBoundingClientRect","clientX","left","clientY","top","res","sigmaDefaultPrevented","preventSigmaDefault","original","delta","touches","deltaY","detail","map","touch","Captor","container","renderer","__createBinding","k2","__setModuleDefault","v","__importStar","captor_1","MouseCaptor","draggedEvents","downStartTime","lastMouseX","lastMouseY","isMouseDown","isMoving","movingTimeout","startCameraState","clicks","doubleClickTimeout","currentWheelDirection","handleClick","handleRightClick","handleDown","handleUp","handleMove","handleWheel","handleOut","document","kill","clearTimeout","handleDoubleClick","setTimeout","preventDefault","stopPropagation","mouseCoords","camera","getCamera","newRatio","getViewportZoomedState","_a","cameraState","previousCameraState","refresh","window","eX","eY","lastMouse","viewportToFramedGraph","mouse","offsetX","offsetY","wheelCoords","ratioDiff","wheelDirection","lastWheelTriggerTime","MOUSE_ZOOM_DURATION","__read","ar","TouchCaptor","touchMode","handleStart","handleLeave","getDimensions","width","offsetWidth","height","offsetHeight","dispatchRelatedMouseEvent","mousePosition","mouseEvent","MouseEvent","altKey","ctrlKey","isFakeSigmaMouseEvent","dispatchEvent","startTouchesPositions","lastTouchesPositions","_b","x0","y0","_c","x1","y1","startTouchesAngle","atan2","startTouchesDistance","sqrt","pow","touchesPositions","xStart","yStart","newCameraState","_d","_e","angleDiff","hypot","dimensions","touchGraphPosition","smallestDimension","dx","cos","sin","edgeLabelsToDisplayFromNodes","LabelGrid","LabelCandidate","compare","first","second","cellSize","columns","rows","cells","resizeAndClear","ceil","getIndex","pos","xIndex","add","candidate","cell","organize","sort","getLabelsToDisplay","density","cellArea","scaledDensity","labelsToDisplayPerCell","labels","params","hoveredNode","highlightedNodes","displayedNodeLabels","worthyEdges","_","__spreadArray","to","pack","rectangleCollidesWithQuad","squareCollidesWithQuad","getCircumscribedAlignedRectangle","isRectangleAligned","extend_1","hasWarnedTooMuchOutside","rect","x2","y2","heightVector","tl","tr","bl","br","xL","xR","yT","qx","qy","qw","qh","h","pointIsInQuad","QuadTree","containers","cache","lastRectangle","L","Float32Array","boundaries","resize","maxLevel","level","block","topLeftBlock","topRightBlock","bottomLeftBlock","bottomRightBlock","collidingWithTopLeft","collidingWithTopRight","collidingWithBottomLeft","collidingWithBottomRight","collisions","reduce","acc","insertNode","stack","hw","hh","buildQuadrants","point","rectangle","lr","collectedNodes","getNodesInAxisAlignedRectangleArea","abs","Sigma","sigma_1","camera_1","quadtree_1","mouse_1","settings","edgeLabelSize","font","edgeLabelFont","edgeLabelWeight","edgeLabelColor","attribute","fillStyle","cx","cy","sSize","tSize","sx","sy","tx","ty","dy","textLength","measureText","acos","asin","PI","save","translate","rotate","fillText","restore","label_1","labelSize","labelFont","labelWeight","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","textWidth","boxWidth","round","boxHeight","radius","angleRadian","xDeltaCoord","beginPath","moveTo","lineTo","arc","closePath","fill","labelColor","createEdgeCompoundProgram","AbstractEdgeProgram","gl","vertexShaderSource","fragmentShaderSource","points","AbstractProgram","programClasses","EdgeCompoundProgram","programs","ProgramClass","bufferData","program","allocate","capacity","computeIndices","render","process","hidden","offset","createNodeCompoundProgram","AbstractNodeProgram","positionLocation","getAttribLocation","sizeLocation","colorLocation","matrixLocation","getUniformLocation","ratioLocation","scaleLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","UNSIGNED_BYTE","NodeCompoundProgram","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexShader","loadVertexShader","fragmentShader","loadFragmentShader","loadProgram","DYNAMIC_DRAW","hasNothingToRender","edge_1","edge_arrowHead_1","edge_clamped_1","EdgeArrowProgram","edge_arrowHead_vert_glsl_1","edge_arrowHead_frag_glsl_1","EdgeArrowHeadProgram","normalLocation","radiusLocation","barycentricLocation","sqrtZoomRatioLocation","correctionRatioLocation","i_1","POINTS","floatColor","n1","n2","useProgram","uniformMatrix3fv","matrix","uniform1f","correctionRatio","drawArrays","TRIANGLES","edge_clamped_vert_glsl_1","edge_frag_glsl_1","EdgeClampedProgram","indicesBuffer","canUse32BitsIndices","IndicesArray","Uint32Array","Uint16Array","indicesArray","indicesType","UNSIGNED_INT","UNSIGNED_SHORT","ELEMENT_ARRAY_BUFFER","indices","c","STATIC_DRAW","drawElements","edge_vert_glsl_1","EdgeProgram","node_fast_vert_glsl_1","node_fast_frag_glsl_1","node_1","NodeFastProgram","scalingRatio","toStringTag","loadShader","glType","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","infoLog","getShaderInfoLog","deleteShader","shaders","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","deleteProgram","DEFAULT_SETTINGS","validateSettings","hover_1","edge_label_1","node_fast_1","edge_arrow_1","labelDensity","minCameraRatio","maxCameraRatio","hideEdgesOnMove","hideLabelsOnMove","renderLabels","renderEdgeLabels","enableEdgeClickEvents","enableEdgeWheelEvents","enableEdgeHoverEvents","defaultNodeColor","defaultNodeType","defaultEdgeColor","stagePadding","labelGridCellSize","labelRenderedSizeThreshold","nodeReducer","edgeReducer","zIndex","labelRenderer","hoverRenderer","edgeLabelRenderer","allowInvalidContainer","nodeProgramClasses","circle","edgeProgramClasses","arrow","line","__values","labels_1","settings_1","touch_1","matrices_1","edge_collisions_1","applyNodeDefaults","highlighted","forceLabel","applyEdgeDefaults","canvasContexts","webGLContexts","activeListeners","quadtree","labelGrid","nodeDataCache","edgeDataCache","nodesWithForcedLabels","edgesWithForcedLabels","nodeExtent","identity","invMatrix","customBBox","normalizationFunction","createNormalizationFunction","cameraSizeRatio","pixelRatio","getPixelRatio","displayedLabels","hoveredEdge","renderFrame","renderHighlightedNodesFrame","needToProcess","needToSoftProcess","checkEdgesEventsFrame","nodePrograms","hoverNodePrograms","edgePrograms","validateGraph","HTMLElement","createWebGLContext","preserveDrawingBuffer","createCanvasContext","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","BLEND","NodeProgramClass","hoverNodes","EdgeProgramClass","bindCameraHandlers","mouseCaptor","touchCaptor","bindEventHandlers","bindGraphHandlers","handleSettingsUpdate","createCanvas","canvas","createElement","class","appendChild","getContext","antialias","contextOptions","_scheduleRefresh","mouseIsOnNode","nodeX","nodeY","getQuadNodes","mouseGraphPosition","getNodeAtPosition","quadNodes","minDistance","nodeAtPosition","nodePosition","framedGraphToViewport","scaleSize","distance","handleResize","baseEvent","event","nodeToHover","scheduleHighlightedNodesRender","checkEdgeHoverEvents","createMouseListener","eventType","getEdgeAtPoint","graphUpdate","softGraphUpdate","dropNodeGraphUpdate","dropEdgeGraphUpdate","clearEdgesGraphUpdate","clearGraphUpdate","payload","edgeToHover","e_1","isPixelColored","viewportToGraph","graphX","graphY","transformationRatio","someEdge","sourceId","targetId","xs","ys","xt","yt","graphLength","graphToViewport","vp_xs","vp_ys","vp_xt","vp_yt","viewportLength","filterEdges","edgeAttributes","sourcePosition","targetPosition","doEdgeCollideWithPoint","selectedEdge","highestZIndex","edges_1","edges_1_1","getEdgeAttribute","e_1_1","return","keepArrays","nodeZExtent","edgeZExtent","graphExtent","nullCamera","nullCameraMatrix","matrixFromCamera","getGraphDimensions","getSetting","nodesPerPrograms","getNodeAttributes","applyTo","zIndexOrdering","edgesPerPrograms","getEdgeAttributes","_refresh","visibleNodes","viewRectangle","labelsToDisplay","edgeLabels","clearRect","edgeLabelsToDisplay","renderHighlightedNodes","hovers","nodesToRender","COLOR_BUFFER_BIT","handleEscape","updateCachedValues","moving","viewportDimensions","graphDimensions","padding","getMatrixImpact","getContainer","getGraph","getMouseCaptor","getTouchCaptor","extent","getNodeDisplayData","getEdgeDisplayData","getSettings","setSetting","updateSetting","previousWidth","previousHeight","style","scale","viewport","scheduleRefresh","viewportTarget","center","graphMousePosition","graphCenterPosition","marginX","marginY","p1","p2","coordinates","override","recomputeMatrix","viewportPos","multiplyVec2","viewportPoint","inverse","graphPoint","getBBox","getCustomBBox","setCustomBBox","firstChild","removeChild","getCanvases","rawEmitter","animateNodes","index_1","targets","startPositions","attrs","getNodeAttribute","frame","setNodeAttribute","HTML_COLORS","black","silver","gray","grey","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","darkblue","mediumblue","darkgreen","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","springgreen","cyan","midnightblue","dodgerblue","lightseagreen","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","rebeccapurple","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","thistle","orchid","goldenrod","palevioletred","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","lightyellow","ivory","cubicInOut","cubicOut","cubicIn","quadraticInOut","quadraticOut","quadraticIn","linear","easings","pixels","Uint8Array","readPixels","drawingBufferHeight","RGBA","xS","yS","xT","extractPixel","getCorrectionRatio","floatArrayColor","parseColor","assignDeep","is_graph_1","data_1","objects","_i","requestAnimationFrame","cancelAnimationFrame","requestID","tag","devicePixelRatio","xMin","xMax","yMin","yMax","minX","maxX","minY","maxY","dX","dY","getter","zA","zB","INT8","Int8Array","INT32","Int32Array","FLOAT32","RGBA_TEST_REGEX","RGBA_EXTRACT_REGEX","val","charAt","FLOAT_COLOR_CACHE","htmlColor","parsed","viewportRatio","graphRatio","multiply","WebGL2RenderingContext","getExtension","isFinite","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","b0","b1","isFalse","strval","name_regex","indentString","tags","texts","comment","dtd","root","pi","cdata","started_write","writer_encoding","flush","indenter","write","version","standalone","startPI","startAttribute","text","endAttribute","endPI","endDocument","endAttributes","content","writeElementNS","prefix","uri","containsTag","startAttributes","writeAttributeNS","startAttributeNS","writeComment","startComment","endComment","writeDocType","pubid","sysid","subset","startDocType","endDocType","writePI","writeCData","startCData","endCData","writeRaw","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","obj","_defineProperty","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","fetch","then","gexf","getElementById","zoomInBtn","zoomOutBtn","zoomResetBtn","searchInput","searchSuggestions","searchQuery","setSearchQuery","query","lcQuery","suggestions","includes","selectedNode","setHoveredNode","clickMode","clickedNode","hoveredNeighbors","innerHTML","open"],"sourceRoot":""}